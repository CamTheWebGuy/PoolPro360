[{"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\utils\\setAuthToken.js":"1","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\PumpManager.js":"2","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\index.js":"3","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\DeleteCustomerImage.js":"4","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditCustomerInformation.js":"5","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewUser.js":"6","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditUser.js":"7","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\routing\\PrivateRoute.js":"8","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ManageChecklist.js":"9","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\CustomManager.js":"10","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\App.js":"11","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ManageEquipment.js":"12","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\MapDirectionsRenderer.js":"13","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Users.js":"14","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\utils\\RoutingMachine.js":"15","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Login.js":"16","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\map.js":"17","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\auth.js":"18","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\alert.js":"19","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormSettingsController.js":"20","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\AddCustomers.js":"21","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\variables\\chart.js":"22","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditServiceNoteModal.js":"23","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\AddUser.js":"24","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\FilterManager.js":"25","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\LeafletMap.js":"26","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormItemController.js":"27","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\HeaterManager.js":"28","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormCreator.js":"29","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\customer.js":"30","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Alert.js":"31","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Routing.js":"32","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\CleanerManager..js":"33","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\customer.js":"34","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Customers.js":"35","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewCustomer.js":"36","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\map.js":"37","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\dashboard\\Dashboard.js":"38","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\employee.js":"39","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\landing\\LandingContent.js":"40","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\BookingForms.js":"41","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\index.js":"42","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Pricing.js":"43","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\dashboard\\Sidebar.js":"44","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewMyRoute.js":"45","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\RouteBuilder.js":"46","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Settings.js":"47","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\employee.js":"48","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\user.js":"49","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\types.js":"50","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\user.js":"51","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewLogs.js":"52","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\landing\\Landing.js":"53","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ChangeEmail.js":"54","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Navbar.js":"55","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\dashboard\\Dashnav.js":"56","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\WorkOrders.js":"57","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\alert.js":"58"},{"size":251,"mtime":1607810175854,"results":"59","hashOfConfig":"60"},{"size":31692,"mtime":1615948057639,"results":"61","hashOfConfig":"60"},{"size":193,"mtime":1608277914563,"results":"62","hashOfConfig":"60"},{"size":6621,"mtime":1609984630990,"results":"63","hashOfConfig":"60"},{"size":20895,"mtime":1611882314629,"results":"64","hashOfConfig":"60"},{"size":7873,"mtime":1612486761185,"results":"65","hashOfConfig":"60"},{"size":15595,"mtime":1611864494003,"results":"66","hashOfConfig":"60"},{"size":656,"mtime":1607929043071,"results":"67","hashOfConfig":"60"},{"size":17827,"mtime":1610845489210,"results":"68","hashOfConfig":"60"},{"size":310321,"mtime":1615948087393,"results":"69","hashOfConfig":"60"},{"size":4607,"mtime":1616630490018,"results":"70","hashOfConfig":"60"},{"size":20464,"mtime":1612642905643,"results":"71","hashOfConfig":"60"},{"size":1782,"mtime":1612079344403,"results":"72","hashOfConfig":"60"},{"size":8508,"mtime":1611909926558,"results":"73","hashOfConfig":"60"},{"size":618,"mtime":1612040618363,"results":"74","hashOfConfig":"60"},{"size":6051,"mtime":1607980867195,"results":"75","hashOfConfig":"60"},{"size":229,"mtime":1609440617664,"results":"76","hashOfConfig":"60"},{"size":1135,"mtime":1612654164168,"results":"77","hashOfConfig":"60"},{"size":388,"mtime":1603849544318,"results":"78","hashOfConfig":"60"},{"size":1528,"mtime":1607641461449,"results":"79","hashOfConfig":"60"},{"size":23754,"mtime":1612061547549,"results":"80","hashOfConfig":"60"},{"size":16282,"mtime":1606983872075,"results":"81","hashOfConfig":"60"},{"size":3875,"mtime":1610583173823,"results":"82","hashOfConfig":"60"},{"size":14775,"mtime":1611792910356,"results":"83","hashOfConfig":"60"},{"size":23782,"mtime":1615948101911,"results":"84","hashOfConfig":"60"},{"size":883,"mtime":1612040727773,"results":"85","hashOfConfig":"60"},{"size":12118,"mtime":1612039260163,"results":"86","hashOfConfig":"60"},{"size":45254,"mtime":1615948027499,"results":"87","hashOfConfig":"60"},{"size":12996,"mtime":1612039225983,"results":"88","hashOfConfig":"60"},{"size":2366,"mtime":1617261941285,"results":"89","hashOfConfig":"60"},{"size":837,"mtime":1607915838635,"results":"90","hashOfConfig":"60"},{"size":5657,"mtime":1612341693260,"results":"91","hashOfConfig":"60"},{"size":16258,"mtime":1615948016574,"results":"92","hashOfConfig":"60"},{"size":26239,"mtime":1617386978056,"results":"93","hashOfConfig":"60"},{"size":9169,"mtime":1617071817082,"results":"94","hashOfConfig":"60"},{"size":114334,"mtime":1617091637360,"results":"95","hashOfConfig":"60"},{"size":389,"mtime":1609440084910,"results":"96","hashOfConfig":"60"},{"size":252816,"mtime":1617071592253,"results":"97","hashOfConfig":"60"},{"size":550,"mtime":1611801911168,"results":"98","hashOfConfig":"60"},{"size":26123,"mtime":1606952337934,"results":"99","hashOfConfig":"60"},{"size":6614,"mtime":1607224832048,"results":"100","hashOfConfig":"60"},{"size":328,"mtime":1614194596069,"results":"101","hashOfConfig":"60"},{"size":12447,"mtime":1606954658913,"results":"102","hashOfConfig":"60"},{"size":12164,"mtime":1616777511231,"results":"103","hashOfConfig":"60"},{"size":228682,"mtime":1617421177827,"results":"104","hashOfConfig":"60"},{"size":37646,"mtime":1617261821050,"results":"105","hashOfConfig":"60"},{"size":86719,"mtime":1617387179977,"results":"106","hashOfConfig":"60"},{"size":4800,"mtime":1617261298002,"results":"107","hashOfConfig":"60"},{"size":3029,"mtime":1616776438354,"results":"108","hashOfConfig":"60"},{"size":1403,"mtime":1616787444757,"results":"109","hashOfConfig":"60"},{"size":613,"mtime":1614741991832,"results":"110","hashOfConfig":"60"},{"size":48837,"mtime":1616785717665,"results":"111","hashOfConfig":"60"},{"size":477,"mtime":1606952444302,"results":"112","hashOfConfig":"60"},{"size":7220,"mtime":1616714405826,"results":"113","hashOfConfig":"60"},{"size":6858,"mtime":1616698478365,"results":"114","hashOfConfig":"60"},{"size":16612,"mtime":1617052769817,"results":"115","hashOfConfig":"60"},{"size":52437,"mtime":1617344356855,"results":"116","hashOfConfig":"60"},{"size":354,"mtime":1607892087131,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1ixd2dz",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"137"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"125"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"178"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"125"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"125"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"125"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\utils\\setAuthToken.js",[],["274","275"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\PumpManager.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\index.js",[],["276","277"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\DeleteCustomerImage.js",["278","279","280","281","282","283","284","285","286","287","288","289","290","291"],"import React, { useState, useEffect, Fragment } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  Badge\r\n} from 'reactstrap';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getSingleCustomer } from '../../actions/customer';\r\n\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Footer from '../Layout/Footer';\r\n\r\nconst DeleteCustomerImage = ({\r\n  getSingleCustomer,\r\n  customer: { customer, singleLoading },\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getSingleCustomer(match.params.id);\r\n  }, [getSingleCustomer, match.params.id]);\r\n\r\n  const [loadingDeleteImage, setLoadingDeleteImage] = useState(false);\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='customers' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-12 col-12'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/'>\r\n                          <i className='fas fa-home' />\r\n                        </Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/dashboard'>Dashboard</Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/customers'>Customers</Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to={`/customers/${match.params.id}`}>\r\n                          {match.params.id}\r\n                        </Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <Link to={`/customers/${match.params.id}/deleteImage`}>\r\n                          Delete Customer Image\r\n                        </Link>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Container className='mgn-ng-top-60'>\r\n          <Card>\r\n            <CardHeader>\r\n              {' '}\r\n              <div className='row align-items-center'>\r\n                <div className='col-8'>\r\n                  <h3 className='mb-0'>Delete Customer Image(s)</h3>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {!customer || singleLoading ? (\r\n                <Fragment>\r\n                  <div className='text-center'>\r\n                    <h4>Loading Data...</h4>\r\n                    <SpinnerCircular\r\n                      size={54}\r\n                      thickness={180}\r\n                      speed={100}\r\n                      color='rgba(57, 125, 172, 1)'\r\n                      secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                    />\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                <Row>\r\n                  {/* <img\r\n                  src='https://di2ponv0v5otw.cloudfront.net/posts/2019/10/22/5daf2816edb3b7766f83f1af/s_5daf2819edb3b7766f83f1b7.jpg'\r\n                  alt=''\r\n                /> */}\r\n                  {customer[0].images.map(image => (\r\n                    <Fragment key={image._id}>\r\n                      <Col lg='auto' className='mgn-btm-50'>\r\n                        {' '}\r\n                        <img\r\n                          src={image.url}\r\n                          className='max-width-250 max-height-127 mgn-btm-10'\r\n                        />\r\n                        <div className='text-center'>\r\n                          <Button\r\n                            color='danger'\r\n                            onClick={async e => {\r\n                              setLoadingDeleteImage(true);\r\n                              const config = {\r\n                                headers: {\r\n                                  'Content-Type': 'application/json'\r\n                                }\r\n                              };\r\n                              const s3Object = image.url.split('poolpro360/');\r\n\r\n                              const s3ObjectId = s3Object[1];\r\n\r\n                              const body = JSON.stringify({\r\n                                objectId: image._id,\r\n                                s3Object: s3ObjectId\r\n                              });\r\n                              await axios.post(\r\n                                `/api/customers/${match.params.id}/deleteImage`,\r\n                                body,\r\n                                config\r\n                              );\r\n                              setLoadingDeleteImage(false);\r\n                              await getSingleCustomer(match.params.id);\r\n                            }}\r\n                          >\r\n                            {loadingDeleteImage ? (\r\n                              <span>Processing...</span>\r\n                            ) : (\r\n                              <span>Delete Image</span>\r\n                            )}\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Fragment>\r\n                  ))}\r\n                </Row>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <Footer />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDeleteCustomerImage.propTypes = {\r\n  getSingleCustomer: PropTypes.func.isRequired,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  customer: state.customer.singleCustomer\r\n});\r\n\r\nexport default connect(mapStateToProps, { getSingleCustomer })(\r\n  DeleteCustomerImage\r\n);\r\n",["292","293"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditCustomerInformation.js",["294"],"import React, { Fragment, useState, useRef, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Formik } from 'formik';\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Alert from '../Layout/Alert';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Input,\r\n  Form,\r\n  Label,\r\n  FormGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody\r\n} from 'reactstrap';\r\n\r\nimport { getSingleCustomer, updateCustomer } from '../../actions/customer';\r\nimport { getEmployees } from '../../actions/employee';\r\n\r\nconst EditCustomerInformation = ({\r\n  getSingleCustomer,\r\n  updateCustomer,\r\n  getEmployees,\r\n  customer: { customer, singleLoading },\r\n  employees: { employees, loading },\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getSingleCustomer(match.params.id);\r\n    getEmployees();\r\n  }, [getSingleCustomer, getEmployees]);\r\n\r\n  const formRef = useRef();\r\n  const handleSubmit = () => {\r\n    if (formRef.current) {\r\n      formRef.current.handleSubmit();\r\n    }\r\n  };\r\n\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='customers' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-12'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/'>\r\n                          <i className='fas fa-home' />\r\n                        </Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/dashboard'>Dashboard</Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/customers'>Customers</Link>\r\n                      </li>\r\n                      {customer && customer.length >= 1 && (\r\n                        <li className='breadcrumb-item'>\r\n                          <Link to={`/customers/${match.params.id}`}>\r\n                            {customer[0].firstName} {customer[0].lastName}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n                      <li className='breadcrumb-item active'>\r\n                        <Link to='/customers/add'>Edit Customer Details</Link>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Container className='mgn-ng-top-60'>\r\n          <Card>\r\n            <CardHeader>\r\n              <Row className='align-items-center'>\r\n                <Col sm={{ size: 8 }}>\r\n                  <h3 className='mb-0'>Manage Customer Details:</h3>\r\n                </Col>\r\n                <Col sm={{ size: 4 }} className='d-none d-lg-block'>\r\n                  <div className='text-right'>\r\n                    <Button\r\n                      type='submit'\r\n                      color='success'\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      {loadingSave ? (\r\n                        <span>\r\n                          <SpinnerCircular\r\n                            size={24}\r\n                            thickness={180}\r\n                            speed={100}\r\n                            color='rgba(57, 125, 172, 1)'\r\n                            secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                          />{' '}\r\n                          Processing...\r\n                        </span>\r\n                      ) : (\r\n                        <span>Save Changes</span>\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n                <Col\r\n                  sm={{ size: 4 }}\r\n                  className='d-block d-sm-block d-md-block d-lg-none'\r\n                >\r\n                  <br />\r\n                  <Button type='submit' color='success' onClick={handleSubmit}>\r\n                    {loadingSave ? (\r\n                      <span>\r\n                        <SpinnerCircular\r\n                          size={24}\r\n                          thickness={180}\r\n                          speed={100}\r\n                          color='rgba(57, 125, 172, 1)'\r\n                          secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                        />{' '}\r\n                        Processing...\r\n                      </span>\r\n                    ) : (\r\n                      <span>Save Changes</span>\r\n                    )}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </CardHeader>\r\n            {customer && !singleLoading ? (\r\n              <CardBody>\r\n                <Formik\r\n                  initialValues={{\r\n                    firstName: customer[0].firstName,\r\n                    lastName: customer[0].lastName,\r\n                    email: customer[0].email,\r\n                    mobilePhone: customer[0].mobilePhone,\r\n                    serviceAddress: customer[0].serviceAddress,\r\n                    serviceCity: customer[0].serviceCity,\r\n                    serviceState: customer[0].serviceState,\r\n                    serviceZip: customer[0].serviceZip,\r\n                    gateCode: customer[0].gateCode,\r\n                    canText: customer[0].canText,\r\n                    poolType: customer[0].poolType,\r\n                    technician: customer[0].technician,\r\n                    servicePackageAndRate: customer[0].servicePackageAndRate,\r\n                    altPhone: customer[0].altPhone\r\n                  }}\r\n                  innerRef={formRef}\r\n                  onSubmit={async data => {\r\n                    // console.log(data);\r\n                    setLoadingSave(true);\r\n                    await updateCustomer(match.params.id, data);\r\n                    setLoadingSave(false);\r\n                  }}\r\n                  render={({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    validateForm,\r\n                    isValid\r\n                  }) => (\r\n                    <Fragment>\r\n                      <Form>\r\n                        <h6 className='heading-small text-muted mb-4'>\r\n                          Customer Information\r\n                        </h6>\r\n                        <div className='pl-lg-4'>\r\n                          <Row>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='firstName'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  First name\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='firstName'\r\n                                  placeholder='John'\r\n                                  value={values.firstName}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='lastName'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Last name\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='lastName'\r\n                                  value={values.lastName}\r\n                                  placeholder='Doe'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='mobilePhone'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Mobile Number\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='mobilePhone'\r\n                                  value={values.mobilePhone}\r\n                                  placeholder='(555) 555-5555'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='email'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Email address\r\n                                </Label>\r\n                                <Input\r\n                                  type='email'\r\n                                  name='email'\r\n                                  value={values.email}\r\n                                  placeholder='jessie@example.com'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='canText'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Can text?\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='canText'\r\n                                  value={values.canText}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>N/A</option>\r\n                                  <option>Yes</option>\r\n                                  <option>No</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='altPhone'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Alt Phone\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='altPhone'\r\n                                  value={values.altPhone}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                  placeholder='(555) 123-4567'\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                        <hr className='my-4' />\r\n                        {/* Address */}\r\n                        <h6 className='heading-small text-muted mb-4'>\r\n                          Service Address\r\n                        </h6>\r\n                        <div className='pl-lg-4'>\r\n                          <Row>\r\n                            <Col lg='12'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='serviceAddress'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Service Address\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='serviceAddress'\r\n                                  value={values.serviceAddress}\r\n                                  placeholder='2070 Libby Street'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col lg='4'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='serviceCity'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  City\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='serviceCity'\r\n                                  value={values.serviceCity}\r\n                                  placeholder='Beverly Hills'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='4'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='serviceState'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  State\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='serviceState'\r\n                                  value={values.serviceState}\r\n                                  placeholder='CA'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='4'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='serviceZip'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Zip\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='serviceZip'\r\n                                  value={values.serviceZip}\r\n                                  placeholder='90210'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                          <hr className='my-4' />\r\n\r\n                          <h6 className='heading-small text-muted mb-4'>\r\n                            Service Information\r\n                          </h6>\r\n                          <div className='pl-lg-4'>\r\n                            <Row>\r\n                              <Col lg='4'>\r\n                                <Label\r\n                                  for='gateCode'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Gate/Lock Code\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='gateCode'\r\n                                  value={values.gateCode}\r\n                                  placeholder='12345'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </Col>\r\n                              <Col lg='4'>\r\n                                <Label\r\n                                  for='servicePackage'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Rate / Service Package\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='servicePackageAndRate'\r\n                                  value={values.servicePackageAndRate}\r\n                                  placeholder='12345'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </Col>\r\n                              <Col lg='4'>\r\n                                <Label\r\n                                  for='technician'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Assigned Technician\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='technician'\r\n                                  value={values.technician}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>N/A</option>\r\n\r\n                                  {employees.map(employee => (\r\n                                    <option\r\n                                      key={employee._id}\r\n                                      value={employee._id}\r\n                                    >\r\n                                      {employee.firstName} {employee.lastName}\r\n                                    </option>\r\n                                  ))}\r\n                                </Input>\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n                        </div>\r\n                      </Form>\r\n                    </Fragment>\r\n                  )}\r\n                />\r\n              </CardBody>\r\n            ) : (\r\n              <Fragment>\r\n                <div className='text-center'>\r\n                  <h4>Loading Data...</h4>\r\n                  <SpinnerCircular\r\n                    size={54}\r\n                    thickness={180}\r\n                    speed={100}\r\n                    color='rgba(57, 125, 172, 1)'\r\n                    secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                  />\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditCustomerInformation.propTypes = {\r\n  getSingleCustomer: PropTypes.func.isRequired,\r\n  updateCustomer: PropTypes.func.isRequired,\r\n  getEmployees: PropTypes.func.isRequired,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  customer: state.customer.singleCustomer,\r\n  employees: state.employee\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getSingleCustomer,\r\n  updateCustomer,\r\n  getEmployees\r\n})(EditCustomerInformation);\r\n",["295","296"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewUser.js",["297","298","299","300","301","302","303","304","305","306","307","308","309","310"],"import React, { Fragment, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  Badge\r\n} from 'reactstrap';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { SpinnerCircular } from 'spinners-react';\r\nimport {\r\n  getSingleEmployee,\r\n  getEmployeeCustomers\r\n} from '../../actions/employee';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Alert from '../Layout/Alert';\r\nimport Footer from '../Layout/Footer';\r\n\r\nconst ViewUser = ({\r\n  getSingleEmployee,\r\n  getEmployeeCustomers,\r\n  employee,\r\n  customers: { customers, loading },\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getSingleEmployee(match.params.id);\r\n    getEmployeeCustomers(match.params.id);\r\n  }, [getSingleEmployee]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='users' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div\r\n          className='header pb-6 d-flex align-items-center'\r\n          style={{\r\n            minHeight: '500px',\r\n            backgroundImage:\r\n              'url(https://www.lathampool.com/wp-content/uploads/2020/01/bh-header.jpg)',\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center top'\r\n          }}\r\n        >\r\n          {/* Mask */}\r\n          <span className='mask bg-gradient-default opacity-8' />\r\n          {/* Header container */}\r\n          <div className='container-fluid d-flex align-items-center'>\r\n            <div className='row'>\r\n              <div className='col-md-12'>\r\n                {!employee[0] ? (\r\n                  <Fragment>\r\n                    <div className='text-center'>\r\n                      <h4>Loading Data...</h4>\r\n                      <SpinnerCircular\r\n                        size={54}\r\n                        thickness={180}\r\n                        speed={100}\r\n                        color='rgba(57, 125, 172, 1)'\r\n                        secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                      />\r\n                    </div>\r\n                  </Fragment>\r\n                ) : (\r\n                  <Fragment>\r\n                    <h1 className='display-2 text-white mb-0'>\r\n                      {employee[0].firstName} {employee[0].lastName}\r\n                    </h1>\r\n                    <p className='text-white mt-0 mb-5'>\r\n                      {employee[0].email}\r\n                      <br />\r\n                      <Badge color='success'>\r\n                        <strong>{employee[0].role}</strong>\r\n                      </Badge>{' '}\r\n                      <br />\r\n                    </p>\r\n                  </Fragment>\r\n                )}\r\n\r\n                <Link\r\n                  to={`/users/${match.params.id}/edit`}\r\n                  className='btn btn-neutral mb-4'\r\n                >\r\n                  Edit User Information\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Container className='mgn-ng-top-60'>\r\n          <Row>\r\n            <Col md='6'>\r\n              <Card>\r\n                <CardHeader>\r\n                  <h3 className='mb-0'>User Information </h3>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {!employee || !employee[0] ? (\r\n                    <div className='text-center'>\r\n                      <h4>Loading Data...</h4>\r\n                      <SpinnerCircular\r\n                        size={54}\r\n                        thickness={180}\r\n                        speed={100}\r\n                        color='rgba(57, 125, 172, 1)'\r\n                        secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <Row>\r\n                        <Col md='6'>\r\n                          <div className='form-control-label'>First name</div>\r\n                          {employee[0].firstName}\r\n                        </Col>\r\n                        <Col md='6'>\r\n                          <div className='form-control-label'>Last name</div>\r\n                          {employee[0].lastName}\r\n                        </Col>\r\n                      </Row>\r\n                      <br />\r\n                      <Row>\r\n                        <Col md='6'>\r\n                          <div className='form-control-label'>Email</div>\r\n                          {employee[0].email}\r\n                        </Col>\r\n                        <Col md='6'>\r\n                          <div className='form-control-label'>Phone</div>\r\n                          {employee[0].phone}\r\n                        </Col>\r\n                      </Row>\r\n                      <br />\r\n                      <Row>\r\n                        <Col md='12'>\r\n                          <div className='form-control-label'>Role</div>\r\n                          {employee[0].role}\r\n                        </Col>\r\n                      </Row>\r\n                    </Fragment>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col md='6'>\r\n              <Card>\r\n                <CardHeader>\r\n                  <h3 className='mb-0'>Assigned Customers</h3>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {!customers || !customers.length >= 1 ? (\r\n                    <Fragment>\r\n                      <div className='text-center'>\r\n                        <i className='fas fa-exclamation-circle'></i>\r\n                        <h3>No Customers Assigned</h3>\r\n                      </div>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      {customers.map(customer => (\r\n                        <ListGroup key={customer._id}>\r\n                          <ListGroupItem>\r\n                            <Link to={`/customers/${customer._id}`}>\r\n                              {customer.firstName} {customer.lastName} <br />\r\n                              <small>\r\n                                {customer.serviceAddress},{' '}\r\n                                {customer.serviceCity}, {customer.serviceState}{' '}\r\n                                {customer.serviceZip}\r\n                                <br />\r\n                                {customer.isScheduled ? (\r\n                                  <Badge color='success'>\r\n                                    Scheduled {customer.frequency} for{' '}\r\n                                    {customer.scheduledDay}'s{' '}\r\n                                  </Badge>\r\n                                ) : (\r\n                                  <Badge color='danger'>Not Scheduled</Badge>\r\n                                )}\r\n                              </small>\r\n                            </Link>\r\n                          </ListGroupItem>\r\n                        </ListGroup>\r\n                      ))}\r\n                    </Fragment>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Footer />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nViewUser.propTypes = {\r\n  getSingleEmployee: PropTypes.func.isRequired,\r\n  getEmployeeCustomers: PropTypes.func.isRequired,\r\n  employee: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  employee: state.employee.singleEmployee,\r\n  customers: state.customer\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getSingleEmployee,\r\n  getEmployeeCustomers\r\n})(ViewUser);\r\n",["311","312"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditUser.js",["313","314"],"import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { SpinnerCircular } from 'spinners-react';\r\nimport {\r\n  updateEmployee,\r\n  getSingleEmployee,\r\n  updateEmployeePassword\r\n} from '../../actions/employee';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Alert from '../Layout/Alert';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Input,\r\n  Form,\r\n  Label,\r\n  FormGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter\r\n} from 'reactstrap';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst EditUser = ({\r\n  match,\r\n  updateEmployee,\r\n  getSingleEmployee,\r\n  updateEmployeePassword,\r\n  employee\r\n}) => {\r\n  const [savingInfo, setSavingInfo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getSingleEmployee(match.params.id);\r\n  }, [getSingleEmployee]);\r\n\r\n  const lowercaseRegex = /(?=.*[a-z])/;\r\n  const uppercaseRegex = /(?=.*[A-X])/;\r\n  const numericRegex = /(?=.*[0-9])/;\r\n\r\n  const passwordSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n      .matches(lowercaseRegex, 'Password must contain lowercase letter')\r\n      .matches(uppercaseRegex, 'Password must contain uppercase letter')\r\n      .matches(numericRegex, 'Password must contain a number')\r\n      .min(8, 'Password must be at least 8 characters long')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\r\n      .required('Please Confirm Password')\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='users' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/'>\r\n                          <i className='fas fa-home' />\r\n                        </Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/dashboard'>Dashboard</Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/users'>Users</Link>\r\n                      </li>\r\n                      {employee.length >= 1 && (\r\n                        <li className='breadcrumb-item'>\r\n                          <Link to={`/users/${match.params.id}/view`}>\r\n                            {employee[0].firstName} {employee[0].lastName}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n                      <li className='breadcrumb-item active'>\r\n                        <Link to={`/users/${match.params.id}/edit`}>\r\n                          Edit User\r\n                        </Link>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Container className='mgn-ng-top-60'>\r\n          <Card>\r\n            <CardHeader>\r\n              <Row className='align-items-center'>\r\n                <Col sm={{ size: 8 }}>\r\n                  <h3 className='mb-0'>Edit User:</h3>\r\n                </Col>\r\n              </Row>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {!employee || !employee.length >= 1 ? (\r\n                <Fragment>\r\n                  <div className='text-center'>\r\n                    <h4>Loading Data...</h4>\r\n                    <SpinnerCircular\r\n                      size={54}\r\n                      thickness={180}\r\n                      speed={100}\r\n                      color='rgba(57, 125, 172, 1)'\r\n                      secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                    />\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <Formik\r\n                    initialValues={{\r\n                      firstName: employee[0].firstName,\r\n                      lastName: employee[0].lastName,\r\n                      email: employee[0].email,\r\n                      phone: employee[0].phone,\r\n                      role: employee[0].role\r\n                    }}\r\n                    onSubmit={async data => {\r\n                      setSavingInfo(true);\r\n                      await updateEmployee(match.params.id, data);\r\n                      setSavingInfo(false);\r\n                    }}\r\n                    render={({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      validateForm,\r\n                      isValid\r\n                    }) => (\r\n                      <Fragment>\r\n                        <Form>\r\n                          <h6 className='heading-small text-muted mb-4'>\r\n                            User Information\r\n                          </h6>\r\n                          <div className='pl-lg-4'>\r\n                            <Row>\r\n                              <Col md='3'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='firstName'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    First Name\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='text'\r\n                                    name='firstName'\r\n                                    placeholder='Johnny'\r\n                                    value={values.firstName}\r\n                                    onChange={handleChange}\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md='3'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='lastName'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Last Name\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='text'\r\n                                    name='lastName'\r\n                                    value={values.lastName}\r\n                                    placeholder='Appleseed'\r\n                                    onChange={handleChange}\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md='6'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='email'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Email\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='email'\r\n                                    name='email'\r\n                                    value={values.email}\r\n                                    placeholder='johnny@example.com'\r\n                                    onChange={handleChange}\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col md='6'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='role'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Role\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='select'\r\n                                    name='role'\r\n                                    value={values.role}\r\n                                    onChange={handleChange}\r\n                                  >\r\n                                    <option>Technician</option>\r\n                                    <option>Logistics</option>\r\n                                    <option>Admin</option>\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md='6'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='Phone'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Phone\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='text'\r\n                                    name='phone'\r\n                                    value={values.phone}\r\n                                    placeholder='(555) 555-5555'\r\n                                    onChange={handleChange}\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Button\r\n                              color='success'\r\n                              type='submit'\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              {savingInfo ? (\r\n                                <span>\r\n                                  {' '}\r\n                                  <SpinnerCircular\r\n                                    size={24}\r\n                                    thickness={180}\r\n                                    speed={100}\r\n                                    color='rgba(57, 125, 172, 1)'\r\n                                    secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                                  />{' '}\r\n                                  Processing...\r\n                                </span>\r\n                              ) : (\r\n                                <span>Save User Info</span>\r\n                              )}\r\n                            </Button>\r\n                          </div>\r\n                        </Form>\r\n                      </Fragment>\r\n                    )}\r\n                  />\r\n\r\n                  <hr className='my-4' />\r\n\r\n                  <Formik\r\n                    initialValues={{\r\n                      password: '',\r\n                      confirmPassword: ''\r\n                    }}\r\n                    onSubmit={async data => {\r\n                      updateEmployeePassword(match.params.id, data);\r\n                    }}\r\n                    validationSchema={passwordSchema}\r\n                    render={({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      validateForm,\r\n                      isValid\r\n                    }) => (\r\n                      <Fragment>\r\n                        <h6 className='heading-small text-muted mb-4'>\r\n                          Change Password\r\n                        </h6>\r\n                        <div className='pl-lg-4'>\r\n                          <Form>\r\n                            <Row>\r\n                              <Col md='6'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='password'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    New Password\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='password'\r\n                                    name='password'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                  {errors.password && touched.password && (\r\n                                    <p className='color-red'>\r\n                                      {errors.password}\r\n                                    </p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md='6'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='confirmPassword'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Confirm New Password\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='password'\r\n                                    name='confirmPassword'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                  {errors.confirmPassword &&\r\n                                    touched.confirmPassword && (\r\n                                      <p className='color-red'>\r\n                                        {errors.confirmPassword}\r\n                                      </p>\r\n                                    )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Button\r\n                              color='success'\r\n                              type='submit'\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              Save New Password\r\n                            </Button>\r\n                          </Form>\r\n                        </div>\r\n                      </Fragment>\r\n                    )}\r\n                  />\r\n                </Fragment>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditUser.propTypes = {\r\n  updateEmployee: PropTypes.func.isRequired,\r\n  getSingleEmployee: PropTypes.func.isRequired,\r\n  updateEmployeePassword: PropTypes.func.isRequired,\r\n  employee: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  employee: state.employee.singleEmployee\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateEmployee,\r\n  getSingleEmployee,\r\n  updateEmployeePassword\r\n})(EditUser);\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\routing\\PrivateRoute.js",[],["315","316"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ManageChecklist.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\CustomManager.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\App.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ManageEquipment.js",["317","318","319","320","321","322"],"import React, { Fragment, useState, useEffect, useRef } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Badge\r\n} from 'reactstrap';\r\n\r\nimport { Formik } from 'formik';\r\nimport {\r\n  getSingleCustomer,\r\n  updateEquipment,\r\n  deleteEquipment\r\n} from '../../actions/customer';\r\n\r\nimport Alert from '../Layout/Alert';\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Footer from '../Layout/Footer';\r\n\r\nimport PumpManager from '../EquipmentManagers/PumpManager';\r\nimport FilterManager from '../EquipmentManagers/FilterManager';\r\nimport HeaterManager from '../EquipmentManagers/HeaterManager';\r\nimport CleanerManager from '../EquipmentManagers/CleanerManager.';\r\nimport CustomManager from '../EquipmentManagers/CustomManager';\r\n\r\nconst ManageEquipment = ({\r\n  match,\r\n  getSingleCustomer,\r\n  updateEquipment,\r\n  deleteEquipment,\r\n  customer: { customer, singleLoading }\r\n}) => {\r\n  useEffect(() => {\r\n    getSingleCustomer(match.params.id);\r\n  }, [getSingleCustomer]);\r\n\r\n  const [itemsList, setItemsList] = useState([]);\r\n  const formRef = useRef();\r\n  const handleSubmit = () => {\r\n    if (formRef.current) {\r\n      formRef.current.handleSubmit();\r\n    }\r\n  };\r\n\r\n  const onAddItem = () => {\r\n    const object = {};\r\n    object.itentifier = uuidv4();\r\n    object.category = 'Cleaners';\r\n    object.make = 'Aqua Products';\r\n    object.model = 'AquaBot AB';\r\n\r\n    setItemsList([...itemsList, object]);\r\n  };\r\n\r\n  const handleCategoryChange = (id, data) => {\r\n    const itemIndex = itemsList.findIndex(item => item.itentifier === `${id}`);\r\n\r\n    const list = [...itemsList];\r\n    const itemToEdit = { ...list[itemIndex] };\r\n\r\n    itemToEdit.category = data.target.value;\r\n\r\n    list[itemIndex] = itemToEdit;\r\n\r\n    setItemsList(list);\r\n  };\r\n\r\n  const handleMakeChange = (id, data) => {\r\n    const itemIndex = itemsList.findIndex(item => item.itentifier === `${id}`);\r\n\r\n    const list = [...itemsList];\r\n    const itemToEdit = { ...list[itemIndex] };\r\n\r\n    itemToEdit.make = data.target.value;\r\n\r\n    list[itemIndex] = itemToEdit;\r\n\r\n    setItemsList(list);\r\n  };\r\n\r\n  const handleModelChange = (id, data) => {\r\n    const itemIndex = itemsList.findIndex(item => item.itentifier === `${id}`);\r\n\r\n    const list = [...itemsList];\r\n    const itemToEdit = { ...list[itemIndex] };\r\n\r\n    itemToEdit.model = data.target.value;\r\n\r\n    list[itemIndex] = itemToEdit;\r\n\r\n    setItemsList(list);\r\n  };\r\n\r\n  const [itemDeleteModal, setItemDeleteModal] = useState({\r\n    isOpen: false,\r\n    active: null,\r\n    isLoading: false\r\n  });\r\n\r\n  const toggleDeleteModal = itemId => {\r\n    setItemDeleteModal({\r\n      isOpen: !itemDeleteModal.open,\r\n      active: itemId,\r\n      isLoading: false\r\n    });\r\n  };\r\n\r\n  const handleItemDelete = async itemId => {\r\n    await deleteEquipment(match.params.id, itemId);\r\n    getSingleCustomer(match.params.id);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='customers' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-12 col-12'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/'>\r\n                          <i className='fas fa-home' />\r\n                        </Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/dashboard'>Dashboard</Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/customers'>Customers</Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to={`/customers/${match.params.id}`}>\r\n                          {match.params.id}\r\n                        </Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <Link\r\n                          to={`/customers/${match.params.id}/manage/equipment`}\r\n                        >\r\n                          Manage Equipment\r\n                        </Link>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Container className='mgn-ng-top-60'>\r\n          {!customer ? (\r\n            <Card>\r\n              <CardHeader>\r\n                {' '}\r\n                <div className='row align-items-center'>\r\n                  <div className='col-8'>\r\n                    <h3 className='mb-0'>Manage Equipment:</h3>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <div className='text-center'>\r\n                  <h4>Loading Data...</h4>\r\n                  <SpinnerCircular\r\n                    size={54}\r\n                    thickness={180}\r\n                    speed={100}\r\n                    color='rgba(57, 125, 172, 1)'\r\n                    secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                  />\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ) : (\r\n            <Card>\r\n              <CardHeader>\r\n                {' '}\r\n                <div className='row align-items-center'>\r\n                  <Col sm={{ size: 8 }}>\r\n                    <h3 className='mb-0'>Manage Equipment:</h3>\r\n                  </Col>\r\n                  <Col sm={{ size: 4 }} className='d-none d-lg-block'>\r\n                    <div className='text-right'>\r\n                      <Button\r\n                        type='submit'\r\n                        color='success'\r\n                        onClick={() => {\r\n                          handleSubmit();\r\n                          history.push(`/customers/${match.params.id}`);\r\n                        }}\r\n                      >\r\n                        Save Changes\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                  <Col\r\n                    sm={{ size: 4 }}\r\n                    className='d-block d-sm-block d-md-block d-lg-none'\r\n                  >\r\n                    <br />\r\n                    <Button\r\n                      type='submit'\r\n                      color='success'\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      Save Changes\r\n                    </Button>\r\n                  </Col>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Fragment>\r\n                  <Formik\r\n                    initialValues={{\r\n                      poolType: customer[0].poolEquipment.poolType,\r\n                      bodiesOfWater: customer[0].poolEquipment.bodiesOfWater,\r\n                      poolGallons: customer[0].poolEquipment.poolGallons,\r\n                      pumpMake: customer[0].poolEquipment.pumpMake,\r\n                      pumpModel: customer[0].poolEquipment.pumpModel,\r\n                      heaterMake: customer[0].poolEquipment.heaterMake,\r\n                      heaterModel: customer[0].poolEquipment.heaterModel,\r\n                      filterMake: customer[0].poolEquipment.filterMake,\r\n                      filterModel: customer[0].poolEquipment.filterModel,\r\n                      cleanerMake: customer[0].poolEquipment.cleanerMake,\r\n                      cleanerModel: customer[0].poolEquipment.cleanerModel\r\n                    }}\r\n                    innerRef={formRef}\r\n                    onSubmit={async data => {\r\n                      await updateEquipment(match.params.id, itemsList, data);\r\n                      getSingleCustomer(match.params.id);\r\n                      setItemsList([]);\r\n                    }}\r\n                    render={({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      values\r\n                    }) => (\r\n                      <Fragment>\r\n                        <Form onSubmit={handleSubmit}>\r\n                          <Row>\r\n                            <Col lg='4'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='poolType'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Pool Type:\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='poolType'\r\n                                  onChange={handleChange}\r\n                                  value={values.poolType}\r\n                                >\r\n                                  <option>N/A</option>\r\n                                  <option>Inground Pool</option>\r\n                                  <option>Above Ground Pool</option>\r\n                                  <option>Other</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n                              <FormGroup>\r\n                                <Label className='form-control-label'>\r\n                                  How Many Gallons Is The Pool?:\r\n                                </Label>\r\n                                <InputGroup>\r\n                                  <Input\r\n                                    type='number'\r\n                                    placeholder='28000'\r\n                                    onChange={handleChange}\r\n                                    name='poolGallons'\r\n                                    value={values.poolGallons}\r\n                                  />\r\n                                  <InputGroupAddon addonType='append'>\r\n                                    <InputGroupText>Gallons</InputGroupText>\r\n                                  </InputGroupAddon>\r\n                                </InputGroup>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='4'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='bodiesOfWater'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Bodies Of Water:\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='bodiesOfWater'\r\n                                  onChange={handleChange}\r\n                                  value={values.bodiesOfWater}\r\n                                >\r\n                                  <option>N/A</option>\r\n                                  <option>Pool</option>\r\n                                  <option>Spa</option>\r\n                                  <option>Pool & Spa</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='4'>\r\n                              <PumpManager\r\n                                handleChange={handleChange}\r\n                                handleBlur={handleBlur}\r\n                                values={values}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <hr />\r\n                          <Row>\r\n                            <Col lg='4'>\r\n                              <FilterManager\r\n                                handleChange={handleChange}\r\n                                handleBlur={handleBlur}\r\n                                values={values}\r\n                              />\r\n                            </Col>\r\n                            <Col lg='4'>\r\n                              <HeaterManager\r\n                                handleChange={handleChange}\r\n                                handleBlur={handleBlur}\r\n                                values={values}\r\n                              />\r\n                            </Col>\r\n\r\n                            <Col lg='4'>\r\n                              <CleanerManager\r\n                                handleChange={handleChange}\r\n                                handleBlur={handleBlur}\r\n                                values={values}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <hr />\r\n                          {customer[0].poolEquipment.other.map(item => (\r\n                            <Fragment key={item._id}>\r\n                              <Row>\r\n                                <Col md='3'>\r\n                                  <h4>Category:</h4>\r\n                                  {item.category}\r\n                                </Col>\r\n                                <Col md='3'>\r\n                                  <h4>Make:</h4>\r\n                                  {item.make}\r\n                                </Col>\r\n                                <Col md='3'>\r\n                                  <h4>Model:</h4>\r\n                                  {item.model}\r\n                                </Col>\r\n                                <Col md='3'>\r\n                                  <h4>Actions:</h4>\r\n                                  <Button\r\n                                    color='danger'\r\n                                    size='sm'\r\n                                    onClick={() => {\r\n                                      toggleDeleteModal(item._id);\r\n                                    }}\r\n                                  >\r\n                                    Delete Item\r\n                                  </Button>\r\n                                </Col>\r\n                              </Row>\r\n                              <br />\r\n                            </Fragment>\r\n                          ))}\r\n                          <Modal\r\n                            isOpen={itemDeleteModal.isOpen}\r\n                            toggle={e =>\r\n                              setItemDeleteModal({\r\n                                ...itemDeleteModal,\r\n                                isOpen: false\r\n                              })\r\n                            }\r\n                          >\r\n                            <ModalHeader\r\n                              toggle={e =>\r\n                                setItemDeleteModal({\r\n                                  ...itemDeleteModal,\r\n                                  isOpen: false\r\n                                })\r\n                              }\r\n                            >\r\n                              Are you sure?\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                              Are you sure you want to delete this item? This\r\n                              action cannot be undone.\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                              <Button\r\n                                onClick={e =>\r\n                                  setItemDeleteModal({\r\n                                    ...itemDeleteModal,\r\n                                    isOpen: false\r\n                                  })\r\n                                }\r\n                              >\r\n                                Cancel\r\n                              </Button>\r\n                              <Button\r\n                                color='danger'\r\n                                onClick={async e => {\r\n                                  setItemDeleteModal({\r\n                                    ...itemDeleteModal,\r\n                                    isLoading: true\r\n                                  });\r\n                                  await handleItemDelete(\r\n                                    itemDeleteModal.active\r\n                                  );\r\n                                  setItemDeleteModal({\r\n                                    isLoading: false,\r\n                                    isOpen: false,\r\n                                    active: null\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {itemDeleteModal.isLoading ? (\r\n                                  <span>\r\n                                    <SpinnerCircular\r\n                                      size={24}\r\n                                      thickness={180}\r\n                                      speed={100}\r\n                                      color='rgba(57, 125, 172, 1)'\r\n                                      secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                                    />{' '}\r\n                                    Processing...\r\n                                  </span>\r\n                                ) : (\r\n                                  <span>Delete Item</span>\r\n                                )}\r\n                              </Button>\r\n                            </ModalFooter>\r\n                          </Modal>\r\n                          <br />\r\n                          <CustomManager\r\n                            itemsList={itemsList}\r\n                            handleCategoryChange={handleCategoryChange}\r\n                            handleBlur={handleBlur}\r\n                            handleChange={handleChange}\r\n                            handleModelChange={handleModelChange}\r\n                            handleMakeChange={handleMakeChange}\r\n                          />\r\n\r\n                          <Row>\r\n                            <Col lg='12'>\r\n                              <div className='text-center'>\r\n                                <Button\r\n                                  className='btn-icon'\r\n                                  color='success'\r\n                                  onClick={onAddItem}\r\n                                  block\r\n                                >\r\n                                  <span className='btn-inner--icon'>\r\n                                    <i className='fas fa-plus'></i>\r\n                                  </span>\r\n                                  <span className='btn-inner--text'>\r\n                                    Add Item\r\n                                  </span>\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                          <br />\r\n                        </Form>\r\n                      </Fragment>\r\n                    )}\r\n                  />\r\n                </Fragment>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n          <Footer />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nManageEquipment.propTypes = {\r\n  getSingleCustomer: PropTypes.func.isRequired,\r\n  updateEquipment: PropTypes.func.isRequired,\r\n  deleteEquipment: PropTypes.func.isRequired,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  customer: state.customer.singleCustomer\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getSingleCustomer,\r\n  updateEquipment,\r\n  deleteEquipment\r\n})(ManageEquipment);\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\MapDirectionsRenderer.js",["323","324","325","326","327"],"import React, { useState, useEffect, Fragment } from 'react';\r\n/* global google */\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  DirectionsRenderer\r\n} from '@react-google-maps/api';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getRouteLegs } from '../../actions/map';\r\n\r\nconst MapDirectionsRenderer = ({ places, travelMode, getRouteLegs }) => {\r\n  const [directions, setDirections] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // const { places, travelMode } = props;\r\n\r\n    const waypoints = places.map(p => ({\r\n      location: {\r\n        lat: parseFloat(p.serviceLat),\r\n        lng: parseFloat(p.serviceLng)\r\n      },\r\n      stopover: true\r\n    }));\r\n\r\n    // console.log(waypoints[waypoints.length - 1]);\r\n    const origin = waypoints.shift().location;\r\n    const destination = waypoints.pop().location;\r\n\r\n    const directionsService = new google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        waypoints: waypoints,\r\n        travelMode: travelMode\r\n      },\r\n      (result, status) => {\r\n        if (status === 'OK') {\r\n          setDirections(result);\r\n          getRouteLegs(result.routes[0].legs);\r\n        } else {\r\n          console.log(result);\r\n          setError(result);\r\n        }\r\n      }\r\n    );\r\n  }, [getRouteLegs]);\r\n\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {directions && <DirectionsRenderer directions={directions} />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMapDirectionsRenderer.propTypes = {\r\n  getRouteLegs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { getRouteLegs })(MapDirectionsRenderer);\r\n",["328","329"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Users.js",["330","331","332","333","334","335","336","337","338","339"],"import React, { Fragment, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Formik } from 'formik';\r\n\r\nimport { getEmployees, markEmployeeInactive } from '../../actions/employee';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Footer from '../Layout/Footer';\r\nimport Alert from '../Layout/Alert';\r\n\r\nimport {\r\n  Button,\r\n  Badge,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label\r\n} from 'reactstrap';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport\r\n} from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst pagination = paginationFactory({\r\n  page: 1,\r\n  alwaysShowAllBtns: true,\r\n  showTotal: true,\r\n  withFirstAndLast: false,\r\n  sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <div className='dataTables_length' id='datatable-basic_length'>\r\n      <select\r\n        name='datatable-basic_length'\r\n        aria-controls='datatable-basic'\r\n        className='form-control form-control-sm'\r\n        style={{ width: '30%' }}\r\n        onChange={e => onSizePerPageChange(e.target.value)}\r\n      >\r\n        <option value='10'>10</option>\r\n        <option value='25'>25</option>\r\n        <option value='50'>50</option>\r\n        <option value='100'>100</option>\r\n      </select>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst statusFormatter = cell => {\r\n  if (cell === true) {\r\n    return <Badge color='success'>Active</Badge>;\r\n  } else if (cell === false) {\r\n    return <Badge color='secondary'>Inactive</Badge>;\r\n  } else {\r\n    return <Badge color='dark'>N/A</Badge>;\r\n  }\r\n};\r\n\r\nconst Users = ({\r\n  getEmployees,\r\n  markEmployeeInactive,\r\n  employees: { employees, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, [getEmployees]);\r\n\r\n  const actionFormatter = cell => {\r\n    return (\r\n      <UncontrolledDropdown>\r\n        <DropdownToggle\r\n          className='btn-icon-only text-light'\r\n          color=''\r\n          role='button'\r\n          size='sm'\r\n        >\r\n          <i className='fas fa-ellipsis-v' />\r\n        </DropdownToggle>\r\n        <DropdownMenu className='dropdown-menu-arrow' right>\r\n          <DropdownItem tag={Link} to={`/users/${cell}/view`}>\r\n            View User\r\n          </DropdownItem>\r\n          <DropdownItem tag={Link} to={`/users/${cell}/edit`}>\r\n            Edit User\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            onClick={async () => {\r\n              await markEmployeeInactive(cell);\r\n              getEmployees();\r\n            }}\r\n          >\r\n            Toggle User Active\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'firstName',\r\n      text: 'First Name'\r\n    },\r\n    {\r\n      dataField: 'lastName',\r\n      text: 'Last Name'\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'Email/Username'\r\n    },\r\n    {\r\n      dataField: 'role',\r\n      text: 'Role'\r\n    },\r\n    {\r\n      dataField: 'isActive',\r\n      text: 'Status',\r\n      formatter: statusFormatter\r\n    },\r\n    {\r\n      dataField: '_id',\r\n      text: 'Actions',\r\n      formatter: actionFormatter\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='users' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/users'>Users</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Container className='mgn-ng-top-60'>\r\n          <div className='card'>\r\n            <div className='card-header'>\r\n              <div className='row align-items-center'>\r\n                <div className='col-8'>\r\n                  <h3 className='mb-0'>Users </h3>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                  <Link className='float-right btn btn-primary' to='/users/add'>\r\n                    <span className='btn-inner--icon'>\r\n                      <i className='fas fa-user-plus'></i>\r\n                    </span>{' '}\r\n                    <span className='btn-inner--text'>Add User</span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='card-body'>\r\n              {loading ? (\r\n                <Fragment>\r\n                  <div className='text-center'>\r\n                    <h4>Locating Users...</h4>\r\n                    <SpinnerCircular\r\n                      size={54}\r\n                      thickness={180}\r\n                      speed={100}\r\n                      color='rgba(57, 125, 172, 1)'\r\n                      secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                    />\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                <ToolkitProvider\r\n                  data={employees}\r\n                  keyField='_id'\r\n                  columns={columns}\r\n                  search\r\n                  exportCSV\r\n                >\r\n                  {props => (\r\n                    <div\r\n                      className='py-4 table-responsive'\r\n                      style={{ padding: '25px' }}\r\n                    >\r\n                      <div id='datatable-basic_filter' className='px-4 pb-1'>\r\n                        <Row>\r\n                          <Col md='6'>\r\n                            <ExportCSVButton\r\n                              className='buttons-copy buttons-html5 btn-sm'\r\n                              {...props.csvProps}\r\n                            >\r\n                              <i className='ni ni-align-left-2'></i> Export CSV\r\n                            </ExportCSVButton>\r\n                          </Col>\r\n                          <Col md={{ size: 'auto', offset: 3 }}>\r\n                            <SearchBar\r\n                              className='form-control-sm'\r\n                              placeholder='Search Users'\r\n                              {...props.searchProps}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <BootstrapTable\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        pagination={pagination}\r\n                        bordered={false}\r\n                        wrapperClasses='table-responsive mh-330'\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nUsers.propTypes = {\r\n  getEmployees: PropTypes.func.isRequired,\r\n  markEmployeeInactive: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  employees: state.employee\r\n});\r\n\r\nexport default connect(mapStateToProps, { getEmployees, markEmployeeInactive })(\r\n  Users\r\n);\r\n",["340","341"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\utils\\RoutingMachine.js",[],["342","343"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Login.js",["344","345","346","347","348"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { login } from '../../actions/auth';\r\n\r\nimport Navbar from '../Layout/Navbar';\r\nimport Footer from '../Layout/Footer';\r\nimport Alert from '../Layout/Alert';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Alert />\r\n\r\n      <div className='main-content' style={{ background: '#172b4d' }}>\r\n        <div className='header bg-gradient-primary py-7 py-lg-8 pt-lg-9'>\r\n          <div className='container'>\r\n            <div className='header-body text-center mb-7'>\r\n              <div className='row justify-content-center'>\r\n                <div className='col-xl-5 col-lg-6 col-md-8 px-5'>\r\n                  <h1 className='text-white'>Welcome Back!</h1>\r\n                  <p className='text-lead text-white'>\r\n                    Sign into your PoolPro360 account below.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='separator separator-bottom separator-skew zindex-100'>\r\n            <svg\r\n              x='0'\r\n              y='0'\r\n              viewBox='0 0 2560 100'\r\n              preserveAspectRatio='none'\r\n              version='1.1'\r\n              xmlns='http://www.w3.org/2000/svg'\r\n            >\r\n              <polygon\r\n                className='fill-default'\r\n                points='2560 0 2560 100 0 100'\r\n              ></polygon>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='container mt--8 pb-5'>\r\n          <div className='row justify-content-center'>\r\n            <div className='col-lg-5 col-md-7'>\r\n              <div className='card bg-secondary border-0 mb-0'>\r\n                <div className='card-body px-lg-5 py-lg-5'>\r\n                  <div className='text-center text-muted mb-4'>\r\n                    <small>Sign in with credentials:</small>\r\n                  </div>\r\n                  <form role='form' onSubmit={onSubmit}>\r\n                    <div className='form-group mb-3'>\r\n                      <div className='input-group input-group-merge input-group-alternative'>\r\n                        <div className='input-group-prepend'>\r\n                          <span className='input-group-text'>\r\n                            <i className='ni ni-email-83'></i>\r\n                          </span>\r\n                        </div>\r\n                        <input\r\n                          className='form-control'\r\n                          placeholder='Email'\r\n                          type='email'\r\n                          onChange={e => onChange(e)}\r\n                          name='email'\r\n                          value={email}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <div className='input-group input-group-merge input-group-alternative'>\r\n                        <div className='input-group-prepend'>\r\n                          <span className='input-group-text'>\r\n                            <i className='ni ni-lock-circle-open'></i>\r\n                          </span>\r\n                        </div>\r\n                        <input\r\n                          className='form-control'\r\n                          placeholder='Password'\r\n                          type='password'\r\n                          onChange={e => onChange(e)}\r\n                          name='password'\r\n                          value={password}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='custom-control custom-control-alternative custom-checkbox'>\r\n                      <input\r\n                        className='custom-control-input'\r\n                        id=' customCheckLogin'\r\n                        type='checkbox'\r\n                      />\r\n                      <label\r\n                        className='custom-control-label'\r\n                        htmlFor=' customCheckLogin'\r\n                      >\r\n                        <span className='text-muted'>Remember me</span>\r\n                      </label>\r\n                    </div>\r\n                    <div className='text-center'>\r\n                      <button\r\n                        type='button'\r\n                        type='submit'\r\n                        className='btn btn-primary my-4'\r\n                      >\r\n                        Sign in\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              <div className='row mt-3'>\r\n                <div className='col-6'>\r\n                  <a href='#' className='text-light'>\r\n                    <small>Forgot password?</small>\r\n                  </a>\r\n                </div>\r\n                <div className='col-6 text-right'>\r\n                  <a href='#' className='text-light'>\r\n                    <small>Create new account</small>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer cssClass='footer-dark' />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n",["349","350"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\map.js",["351"],"import { setAlert } from './alert';\r\nimport { GET_ROUTE_LEGS } from './types';\r\n\r\n// Get Route Legs\r\nexport const getRouteLegs = legs => async dispatch => {\r\n  dispatch({\r\n    type: GET_ROUTE_LEGS,\r\n    payload: legs\r\n  });\r\n};\r\n",["352","353"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\auth.js",["354"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\alert.js",["355"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",["356","357"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormSettingsController.js",["358","359","360","361","362","363","364"],"import React, { Fragment } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText\r\n} from 'reactstrap';\r\n\r\nconst FormSettingsController = () => {\r\n  return (\r\n    <Fragment>\r\n      <Container fluid>\r\n        <Row className='mgn-top-50'>\r\n          <Col md='12'>\r\n            <i className='fas fa-chevron-left'></i> Back to Booking Forms\r\n          </Col>\r\n        </Row>\r\n        <Row className='mgn-top-50'>\r\n          <Col>\r\n            <Button color='danger'>Form Builder</Button>\r\n            <Button color='danger'>Form Settings</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className='mgn-top-50'>\r\n          <Col md='4'>\r\n            <Label>Form Name:</Label>\r\n            <Input type='text' placeholder='Form Name' />\r\n          </Col>\r\n          <Col md='1'>\r\n            <Label>Base Price:</Label>\r\n            <Input type='text' placeholder='9.99' />\r\n          </Col>\r\n          <Col md='1'>\r\n            <Label>Frequency:</Label>\r\n            <Input type='select' name='frequency'>\r\n              <option>MO</option>\r\n              <option>WK</option>\r\n              <option>BWK</option>\r\n            </Input>\r\n          </Col>\r\n          <Col>\r\n            <Button color='danger'>Clear Form</Button>\r\n            <Button color='primary'>Save Form</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FormSettingsController;\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\AddCustomers.js",["365","366","367"],"import React, { Fragment, useState, useRef, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { addCustomer } from '../../actions/customer';\r\nimport { getEmployees } from '../../actions/employee';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Alert from '../Layout/Alert';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Input,\r\n  Form,\r\n  Label,\r\n  FormGroup\r\n} from 'reactstrap';\r\n\r\nimport { Formik } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nconst AddCustomers = ({\r\n  addCustomer,\r\n  getEmployees,\r\n  employees: { employees }\r\n}) => {\r\n  const [showBilling, setShowBilling] = useState(false);\r\n\r\n  const toggleBilling = () => setShowBilling(!showBilling);\r\n\r\n  const formSchema = Yup.object().shape({\r\n    firstName: Yup.string().required('First name is required'),\r\n    lastName: Yup.string().required('Last name is required'),\r\n    email: Yup.string().email('Please provide a valid email'),\r\n    mobilePhone: Yup.string(),\r\n    serviceAddress: Yup.string().required('Service address is required'),\r\n    serviceCity: Yup.string().required('Service city is required'),\r\n    serviceState: Yup.string().required('Service state is required'),\r\n    serviceZip: Yup.string().required('Service zip is required')\r\n  });\r\n\r\n  const formRef = useRef();\r\n  const history = useHistory();\r\n  const handleSubmit = () => {\r\n    if (formRef.current) {\r\n      formRef.current.handleSubmit();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, [getEmployees]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='customers' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/customers'>Customers</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/customers/add'>Add Customer</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n                <div className='col-lg-6 col-5 text-right'>\r\n                  <a href='#' className='btn btn-sm btn-neutral'>\r\n                    New\r\n                  </a>\r\n                  <a href='#' className='btn btn-sm btn-neutral'>\r\n                    Filters\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Container className='mgn-ng-top-60'>\r\n          <div className='card'>\r\n            <div className='card-header'>\r\n              <div className='row align-items-center'>\r\n                <div className='col-8'>\r\n                  <h3 className='mb-0'>Add Customer </h3>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                  <Button type='submit' color='success' onClick={handleSubmit}>\r\n                    Save Customer\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='card-body'>\r\n              <Formik\r\n                initialValues={{\r\n                  firstName: '',\r\n                  lastName: '',\r\n                  email: '',\r\n                  mobilePhone: '',\r\n                  serviceAddress: '',\r\n                  serviceCity: '',\r\n                  serviceState: '',\r\n                  serviceZip: '',\r\n                  gateCode: '',\r\n                  canText: 'N/A',\r\n                  poolType: 'N/A',\r\n                  technician: 'N/A',\r\n                  servicePackageAndRate:\r\n                    'Inactive (Customer Will Not Be Serviced)',\r\n                  billingSame: false,\r\n                  billingType: 'Manual Billing',\r\n                  paymentMethod: 'N/A',\r\n                  billingAddress: '',\r\n                  billingCity: '',\r\n                  billingState: '',\r\n                  billingZip: ''\r\n                }}\r\n                innerRef={formRef}\r\n                validationSchema={formSchema}\r\n                onSubmit={async data => {\r\n                  await addCustomer(data);\r\n                  history.push('/customers');\r\n                }}\r\n                render={({\r\n                  handleSubmit,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  validateForm,\r\n                  isValid\r\n                }) => (\r\n                  <Fragment>\r\n                    <Form onSubmit={handleSubmit}>\r\n                      <h6 className='heading-small text-muted mb-4'>\r\n                        Customer Information\r\n                      </h6>\r\n                      <div className='pl-lg-4'>\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='firstName'\r\n                                className='form-control-label'\r\n                              >\r\n                                First name\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='firstName'\r\n                                placeholder='John'\r\n                                value={values.firstName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.firstName && touched.firstName && (\r\n                                <p className='color-red'>{errors.firstName}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='lastName'\r\n                                className='form-control-label'\r\n                              >\r\n                                Last name\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='lastName'\r\n                                placeholder='Doe'\r\n                                value={values.lastName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.lastName && touched.lastName && (\r\n                                <p className='color-red'>{errors.lastName}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='mobilePhone'\r\n                                className='form-control-label'\r\n                              >\r\n                                Mobile Number\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='mobilePhone'\r\n                                placeholder='(555) 555-5555'\r\n                                value={values.mobilePhone}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.mobilePhone && touched.mobilePhone && (\r\n                                <p className='color-red'>\r\n                                  {errors.mobilePhone}\r\n                                </p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label for='email' className='form-control-label'>\r\n                                Email address\r\n                              </Label>\r\n                              <Input\r\n                                type='email'\r\n                                name='email'\r\n                                placeholder='jessie@example.com'\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.email && touched.email && (\r\n                                <p className='color-red'>{errors.email}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='canText'\r\n                                className='form-control-label'\r\n                              >\r\n                                Can text?\r\n                              </Label>\r\n                              <Input\r\n                                type='select'\r\n                                name='canText'\r\n                                value={values.canText}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              >\r\n                                <option>N/A</option>\r\n                                <option>Yes</option>\r\n                                <option>No</option>\r\n                              </Input>\r\n                              {errors.canText && touched.canText && (\r\n                                <p className='color-red'>{errors.canText}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='poolType'\r\n                                className='form-control-label'\r\n                              >\r\n                                Pool Type\r\n                              </Label>\r\n                              <Input\r\n                                type='select'\r\n                                name='poolType'\r\n                                value={values.poolType}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              >\r\n                                <option>N/A</option>\r\n                                <option>Residential</option>\r\n                                <option>Commercial</option>\r\n                              </Input>\r\n                              {errors.poolType && touched.poolType && (\r\n                                <p className='color-red'>{errors.poolType}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <hr className='my-4' />\r\n                      {/* Address */}\r\n                      <h6 className='heading-small text-muted mb-4'>\r\n                        Service information\r\n                      </h6>\r\n                      <div className='pl-lg-4'>\r\n                        <Row>\r\n                          <Col lg='12'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='serviceAddress'\r\n                                className='form-control-label'\r\n                              >\r\n                                Address\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='serviceAddress'\r\n                                placeholder='2070 Libby Street'\r\n                                value={values.serviceAddress}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.serviceAddress &&\r\n                                touched.serviceAddress && (\r\n                                  <p className='color-red'>\r\n                                    {errors.serviceAddress}\r\n                                  </p>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='4'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='serviceCity'\r\n                                className='form-control-label'\r\n                              >\r\n                                City\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='serviceCity'\r\n                                placeholder='Beverly Hills'\r\n                                value={values.serviceCity}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.serviceCity && touched.serviceCity && (\r\n                                <p className='color-red'>\r\n                                  {errors.serviceCity}\r\n                                </p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='4'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='serviceState'\r\n                                className='form-control-label'\r\n                              >\r\n                                State\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='serviceState'\r\n                                placeholder='CA'\r\n                                value={values.serviceState}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.serviceState && touched.serviceState && (\r\n                                <p className='color-red'>\r\n                                  {errors.serviceState}\r\n                                </p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='4'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='serviceZip'\r\n                                className='form-control-label'\r\n                              >\r\n                                Zip\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='serviceZip'\r\n                                placeholder='90210'\r\n                                value={values.serviceZip}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.serviceZip && touched.serviceZip && (\r\n                                <p className='color-red'>{errors.serviceZip}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <Label\r\n                              for='gateCode'\r\n                              className='form-control-label'\r\n                            >\r\n                              Gate/Lock Code\r\n                            </Label>\r\n                            <Input\r\n                              type='text'\r\n                              name='gateCode'\r\n                              placeholder='12345'\r\n                              value={values.gateCode}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <Label\r\n                              for='technician'\r\n                              className='form-control-label'\r\n                            >\r\n                              Assigned Technician\r\n                            </Label>\r\n                            <Input\r\n                              type='select'\r\n                              name='technician'\r\n                              value={values.technician}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            >\r\n                              <option>N/A</option>\r\n                              {employees.map(employee => (\r\n                                <option key={employee._id} value={employee._id}>\r\n                                  {employee.firstName} {employee.lastName}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <hr className='my-4' />\r\n                      <h6 className='heading-small text-muted mb-4'>\r\n                        Billing information\r\n                      </h6>\r\n                      <div className='pl-lg-4'>\r\n                        <Row>\r\n                          <Col lg='12'>\r\n                            <FormGroup>\r\n                              <Input\r\n                                name='billingSame'\r\n                                type='checkbox'\r\n                                onClick={toggleBilling}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              <Label\r\n                                for='billingSame'\r\n                                className='form-control-label'\r\n                              >\r\n                                Billing Address Same as Service Address?\r\n                              </Label>\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        {!showBilling && (\r\n                          <Fragment>\r\n                            <Row>\r\n                              <Col lg='12'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='billingAddress'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Billing Address\r\n                                  </Label>\r\n                                  <Input\r\n                                    name='billingAddress'\r\n                                    type='text'\r\n                                    placeholder='2070 Mercer Avenue'\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col lg='4'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='billingCity'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Billing City\r\n                                  </Label>\r\n                                  <Input\r\n                                    name='billingCity'\r\n                                    type='text'\r\n                                    placeholder='Beverly Hills'\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col lg='4'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='billingState'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Billing State\r\n                                  </Label>\r\n                                  <Input\r\n                                    name='billingState'\r\n                                    type='text'\r\n                                    placeholder='CA'\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col lg='4'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='billingZip'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Billing Zip\r\n                                  </Label>\r\n                                  <Input\r\n                                    name='billingZip'\r\n                                    type='text'\r\n                                    placeholder='90210'\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                          </Fragment>\r\n                        )}\r\n                      </div>\r\n                    </Form>\r\n                  </Fragment>\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddCustomers.propTypes = {\r\n  addCustomer: PropTypes.func.isRequired,\r\n  getEmployees: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  employees: state.employee\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCustomer, getEmployees })(\r\n  AddCustomers\r\n);\r\n",["368","369"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\variables\\chart.js",[],["370","371"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditServiceNoteModal.js",["372","373","374"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\AddUser.js",["375","376","377","378"],"import React, { Fragment, useRef, useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { addEmployee } from '../../actions/employee';\r\nimport { registerSubuser } from '../../actions/auth';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Footer from '../Layout/Footer';\r\nimport Alert from '../Layout/Alert';\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label\r\n} from 'reactstrap';\r\n\r\nimport { Formik } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\nimport generator from 'generate-password';\r\n\r\nconst AddUser = ({ addEmployee, registerSubuser }) => {\r\n  const [generatedPassword, setGeneratedPassword] = useState(null);\r\n\r\n  const phoneRegExp = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\r\n  const lowercaseRegex = /(?=.*[a-z])/;\r\n  const uppercaseRegex = /(?=.*[A-X])/;\r\n  const numericRegex = /(?=.*[0-9])/;\r\n\r\n  const formSchema = Yup.object().shape({\r\n    firstName: Yup.string().required('First name is required'),\r\n    lastName: Yup.string().required('Last name is required'),\r\n    email: Yup.string()\r\n      .email('Please provide a valid email')\r\n      .required('Email is required'),\r\n    phone: Yup.string()\r\n      .matches(phoneRegExp, 'Phone number is not valid')\r\n      .required('Phone is required'),\r\n    password: Yup.string()\r\n      .matches(lowercaseRegex, 'Password must contain lowercase letter')\r\n      .matches(uppercaseRegex, 'Password must contain uppercase letter')\r\n      .matches(numericRegex, 'Password must contain a number')\r\n      .min(8, 'Password must be at least 8 characters long')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\r\n      .required('Confirm password is required')\r\n  });\r\n\r\n  const formRef = useRef();\r\n  const history = useHistory();\r\n  const handleSubmit = () => {\r\n    if (formRef.current) {\r\n      formRef.current.handleSubmit();\r\n    }\r\n  };\r\n\r\n  const onGeneratePassword = () => {\r\n    setGeneratedPassword(generator.generate({ length: 12, numbers: true }));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='users' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/users'>Users</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/users/add'>Add User</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n                <div className='col-lg-6 col-5 text-right'>\r\n                  <a href='#' className='btn btn-sm btn-neutral'>\r\n                    New\r\n                  </a>\r\n                  <a href='#' className='btn btn-sm btn-neutral'>\r\n                    Filters\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Container className='mgn-ng-top-60'>\r\n          <Card>\r\n            <CardHeader>\r\n              <div className='row align-items-center'>\r\n                <div className='col-8'>\r\n                  <h3 className='mb-0'>Add User </h3>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                  <Button type='submit' color='primary' onClick={handleSubmit}>\r\n                    <span className='btn-inner--icon'>\r\n                      <i className='fas fa-save'></i>\r\n                    </span>{' '}\r\n                    <span className='btn-inner--text'>Save User</span>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Formik\r\n                initialValues={{\r\n                  firstName: '',\r\n                  lastName: '',\r\n                  email: '',\r\n                  phone: '',\r\n                  role: 'Technician',\r\n                  password: '',\r\n                  confirmPassword: ''\r\n                }}\r\n                innerRef={formRef}\r\n                onSubmit={async data => {\r\n                  await registerSubuser(data);\r\n                  history.push('/users');\r\n                }}\r\n                validationSchema={formSchema}\r\n                render={({\r\n                  handleSubmit,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  values,\r\n                  errors,\r\n                  touched\r\n                }) => (\r\n                  <Fragment>\r\n                    <Form onSubmit={handleSubmit}>\r\n                      <h6 className='heading-small text-muted mb-4'>\r\n                        User Information\r\n                      </h6>\r\n                      <div className='pl-lg-4'>\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='firstName'\r\n                                className='form-control-label'\r\n                              >\r\n                                First Name\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='firstName'\r\n                                placeholder='John'\r\n                                value={values.firstName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.firstName && touched.firstName && (\r\n                                <p className='color-red'>{errors.firstName}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='lastName'\r\n                                className='form-control-label'\r\n                              >\r\n                                Last Name\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='lastName'\r\n                                placeholder='Doe'\r\n                                value={values.lastName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.lastName && touched.lastName && (\r\n                                <p className='color-red'>{errors.lastName}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label for='email' className='form-control-label'>\r\n                                Email\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='email'\r\n                                placeholder='john.doe@gmail.com'\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.email && touched.email && (\r\n                                <p className='color-red'>{errors.email}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label for='Phone' className='form-control-label'>\r\n                                Phone\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='phone'\r\n                                placeholder='555-555-5555'\r\n                                value={values.phone}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.phone && touched.phone && (\r\n                                <p className='color-red'>{errors.phone}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='12'>\r\n                            <FormGroup>\r\n                              <Label for='role' className='form-control-label'>\r\n                                User Role\r\n                              </Label>\r\n                              <Input\r\n                                type='select'\r\n                                name='role'\r\n                                value={values.role}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              >\r\n                                <option>Technician</option>\r\n                                <option>Logistics</option>\r\n                                <option>Admin</option>\r\n                              </Input>\r\n                              {errors.role && touched.role && (\r\n                                <p className='color-red'>{errors.role}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='password'\r\n                                className='form-control-label'\r\n                              >\r\n                                Password\r\n                              </Label>\r\n                              <Input\r\n                                type='password'\r\n                                name='password'\r\n                                autoComplete='on'\r\n                                placeholder='Password'\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.password && touched.password && (\r\n                                <p className='color-red'>{errors.password}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='confirmPassword'\r\n                                className='form-control-label'\r\n                              >\r\n                                Confirm Password\r\n                              </Label>\r\n                              <Input\r\n                                type='password'\r\n                                name='confirmPassword'\r\n                                autoComplete='on'\r\n                                placeholder='Confirm Password'\r\n                                value={values.confirmPassword}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.confirmPassword &&\r\n                                touched.confirmPassword && (\r\n                                  <p className='color-red'>\r\n                                    {errors.confirmPassword}\r\n                                  </p>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='12'>\r\n                            {generatedPassword && (\r\n                              <Fragment>\r\n                                <span>Password: {generatedPassword}</span>\r\n                                <br />\r\n                                <small>\r\n                                  Make sure to save or write down this password\r\n                                </small>\r\n                                <br />\r\n                                <br />\r\n                              </Fragment>\r\n                            )}\r\n\r\n                            <Button\r\n                              color='success'\r\n                              onClick={onGeneratePassword}\r\n                            >\r\n                              Generate a Password\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Form>\r\n                  </Fragment>\r\n                )}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n\r\n        <Footer />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddUser.propTypes = {\r\n  addEmployee: PropTypes.func.isRequired,\r\n  registerSubuser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEmployee, registerSubuser })(AddUser);\r\n",["379","380"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\FilterManager.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\LeafletMap.js",[],["381","382"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormItemController.js",["383","384","385","386","387","388","389","390"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\HeaterManager.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormCreator.js",["391","392","393","394","395","396","397","398","399","400","401","402"],"import React, { Component, Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from 'reactstrap';\r\n\r\nimport FormItemController from './FormItemController';\r\nimport FormSettingsController from './FormSettingsController';\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst copy = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const item = sourceClone[droppableSource.index];\r\n\r\n  destClone.splice(droppableDestination.index, 0, { ...item, id: uuidv4() });\r\n  return destClone;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst Content = styled.div`\r\n  margin-right: 200px;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  display: flex;\r\n  user-select: none;\r\n  padding: 0.5rem;\r\n  margin: 0 0 0.5rem 0;\r\n  align-items: flex-start;\r\n  align-content: flex-start;\r\n  line-height: 1.5;\r\n  border-radius: 3px;\r\n  background: #fff;\r\n  border: 1px ${props => (props.isDragging ? 'dashed #000' : 'solid #ddd')};\r\n`;\r\n\r\nconst Clone = styled(Item)`\r\n  ~ div {\r\n    transform: none !important;\r\n  }\r\n`;\r\n\r\nconst Handle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n  user-select: none;\r\n  margin: -0.5rem 0.5rem -0.5rem -0.5rem;\r\n  padding: 0.5rem;\r\n  line-height: 1.5;\r\n  border-radius: 3px 0 0 3px;\r\n  background: #fff;\r\n  border-right: 1px solid #ddd;\r\n  color: #000;\r\n`;\r\n\r\nconst List = styled.div`\r\n  border: 1px ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\r\n  background: #fff;\r\n  padding: 0.5rem 0.5rem 0;\r\n  border-radius: 3px;\r\n  flex: 0 0 150px;\r\n  font-family: sans-serif;\r\n  min-height: 200px;\r\n`;\r\n\r\nconst Kiosk = styled(List)`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 200px;\r\n`;\r\n\r\nconst Container = styled(List)`\r\n  margin: 0.5rem 0.5rem 1.5rem;\r\n`;\r\n\r\nconst Notice = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n  justify-content: center;\r\n  padding: 0.5rem;\r\n  margin: 0 0.5rem 0.5rem;\r\n  border: 1px solid transparent;\r\n  line-height: 1.5;\r\n  color: #aaa;\r\n`;\r\n\r\nconst ITEMS = [\r\n  {\r\n    id: uuidv4(),\r\n    content: 'Input',\r\n    icon: 'fa-font',\r\n    tag: 'input',\r\n    type: 'text',\r\n    label: 'Input Field',\r\n    placeholder: ''\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    content: 'Text Area',\r\n    icon: 'fa-align-left',\r\n    tag: 'textarea',\r\n    label: 'Text Area Field',\r\n    placeholder: ''\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    content: 'Multiple Choice',\r\n    icon: 'fa-check-square',\r\n    label: 'Multiple Choice Field',\r\n    placeholder: '',\r\n    items: [\r\n      {\r\n        label: 'Inground Pool',\r\n        priceChange: 'increase',\r\n        amount: '20'\r\n      },\r\n      {\r\n        label: 'Above Ground Pool',\r\n        priceChange: 'increase',\r\n        amount: '0'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    content: 'Email',\r\n    icon: 'fa-envelope',\r\n    tag: 'input',\r\n    type: 'email',\r\n    label: 'Email Field',\r\n    placeholder: ''\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    content: 'Picture Choice',\r\n    icon: 'fa-image',\r\n    label: 'Picture Choice Field',\r\n    placeholder: '',\r\n    items: [\r\n      {\r\n        id: uuidv4(),\r\n        label: 'Inground Pool',\r\n        priceChange: 'increase',\r\n        amount: '20'\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        label: 'Above Ground Pool',\r\n        priceChange: 'decrease',\r\n        amount: '5'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default class FormCreator extends Component {\r\n  state = {\r\n    form: []\r\n  };\r\n\r\n  editPictureField(itemId, label, itemData) {\r\n    const formState = this.state.form;\r\n    let foundIndex = formState.findIndex(e => e.id == itemId);\r\n\r\n    formState[foundIndex].label = label;\r\n    formState[foundIndex].items = itemData;\r\n\r\n    //console.log(formState);\r\n\r\n    this.setState({ form: formState });\r\n\r\n    console.log(this.state.form);\r\n  }\r\n\r\n  editItem(itemId, label, placeholder) {\r\n    const formState = this.state.form;\r\n\r\n    let foundIndex = formState.findIndex(e => e.id == itemId);\r\n\r\n    formState[foundIndex].label = label;\r\n    formState[foundIndex].placeholder = placeholder;\r\n\r\n    // Never saved to state?\r\n  }\r\n\r\n  deletePictureOption(itemId, optionId) {\r\n    let formState = this.state.form.slice();\r\n\r\n    let foundIndex = formState.findIndex(e => e.id == itemId);\r\n\r\n    let updatedOptions = formState[foundIndex].items.filter(obj => {\r\n      return obj.id !== `${optionId}`;\r\n    });\r\n\r\n    //console.log(updatedOptions);\r\n\r\n    formState[foundIndex].items = updatedOptions;\r\n\r\n    this.setState({ form: formState });\r\n\r\n    console.log(this.state.form);\r\n\r\n    // console.log(formState);\r\n  }\r\n\r\n  deleteItem(item) {\r\n    const formState = this.state.form;\r\n\r\n    let updatedForm = formState.filter(obj => {\r\n      return obj.id !== `${item}`;\r\n    });\r\n\r\n    this.setState({ form: updatedForm });\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    switch (source.droppableId) {\r\n      case destination.droppableId:\r\n        this.setState({\r\n          [destination.droppableId]: reorder(\r\n            this.state[source.droppableId],\r\n            source.index,\r\n            destination.index\r\n          )\r\n        });\r\n        break;\r\n      case 'ITEMS':\r\n        this.setState({\r\n          [destination.droppableId]: copy(\r\n            ITEMS,\r\n            this.state[destination.droppableId],\r\n            source,\r\n            destination\r\n          )\r\n        });\r\n        break;\r\n      default:\r\n        this.setState(\r\n          move(\r\n            this.state[source.droppableId],\r\n            this.state[destination.droppableId],\r\n            source,\r\n            destination\r\n          )\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n  render() {\r\n    // console.log(this.state.form);\r\n    return (\r\n      <Fragment>\r\n        <FormSettingsController />\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId='ITEMS' isDropDisabled={true}>\r\n            {(provided, snapshot) => (\r\n              <Kiosk\r\n                ref={provided.innerRef}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n                className='builder__sidebar'\r\n              >\r\n                <h3 className='text-center text-white'>Control Panel</h3>\r\n                {ITEMS.map((item, index) => (\r\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <React.Fragment>\r\n                        <Item\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          isDragging={snapshot.isDragging}\r\n                          style={provided.draggableProps.style}\r\n                          className='text-center creator__block'\r\n                        >\r\n                          <div className='width-100'>\r\n                            <i className={`fas ${item.icon}`}></i>\r\n                            <h4 className='text-white fweight-normal'>\r\n                              {item.content}\r\n                            </h4>\r\n                          </div>\r\n                        </Item>\r\n                        {snapshot.isDragging && (\r\n                          <Clone>\r\n                            {' '}\r\n                            <div className='width-100 text-center creator__block'>\r\n                              <i className={`fas ${item.icon}`}></i>\r\n                              <h4 className='text-white fweight-normal'>\r\n                                {item.content}\r\n                              </h4>\r\n                            </div>\r\n                          </Clone>\r\n                        )}\r\n                      </React.Fragment>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n\r\n                {provided.placeholder}\r\n              </Kiosk>\r\n            )}\r\n          </Droppable>\r\n          <Content>\r\n            {Object.keys(this.state).map((list, i) => (\r\n              <Droppable key={list} droppableId={list}>\r\n                {(provided, snapshot) => (\r\n                  <Container\r\n                    ref={provided.innerRef}\r\n                    isDraggingOver={snapshot.isDraggingOver}\r\n                  >\r\n                    <div className='text-center'>\r\n                      <i className='fas fa-plus-square'></i>\r\n                      <p>\r\n                        Drag and drop a item from the control panel to get\r\n                        started.\r\n                      </p>\r\n                    </div>\r\n\r\n                    {this.state[list].length\r\n                      ? this.state[list].map((item, index) => (\r\n                          <Draggable\r\n                            key={item.id}\r\n                            draggableId={item.id}\r\n                            index={index}\r\n                          >\r\n                            {(provided, snapshot) => (\r\n                              <Item\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                isDragging={snapshot.isDragging}\r\n                                style={provided.draggableProps.style}\r\n                              >\r\n                                <Handle {...provided.dragHandleProps}>\r\n                                  <svg\r\n                                    width='24'\r\n                                    height='24'\r\n                                    viewBox='0 0 24 24'\r\n                                  >\r\n                                    <path\r\n                                      fill='currentColor'\r\n                                      d='M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z'\r\n                                    />\r\n                                  </svg>\r\n                                </Handle>\r\n                                <FormItemController\r\n                                  item={item}\r\n                                  deleteItem={this.deleteItem.bind(this)}\r\n                                  editItem={this.editItem.bind(this)}\r\n                                  editPictureField={this.editPictureField.bind(\r\n                                    this\r\n                                  )}\r\n                                  deletePictureOption={this.deletePictureOption.bind(\r\n                                    this\r\n                                  )}\r\n                                />\r\n                                {/* {item.content}\r\n                              \r\n                              <div className='mgn-left-30'>\r\n                                <Button size='sm' color='info'>\r\n                                  Edit\r\n                                </Button>\r\n                                <Button\r\n                                  size='sm'\r\n                                  color='warning'\r\n                                  onClick={e => this.deleteItem(item.id)}\r\n                                >\r\n                                  Delete\r\n                                </Button>\r\n                              </div> */}\r\n                              </Item>\r\n                            )}\r\n                          </Draggable>\r\n                        ))\r\n                      : !provided.placeholder && (\r\n                          <Notice>Drop items here</Notice>\r\n                        )}\r\n                    {provided.placeholder}\r\n                  </Container>\r\n                )}\r\n              </Droppable>\r\n            ))}\r\n          </Content>\r\n        </DragDropContext>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// export default FormCreator;\r\n",["403","404"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\customer.js",["405"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Alert.js",["406","407"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Routing.js",["408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432"],"import React, { Fragment, useState, useEffect, useRef } from 'react';\r\n\r\nimport {\r\n  GoogleMap,\r\n  LoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n  DirectionsRenderer,\r\n  DirectionsService,\r\n  Polyline\r\n} from '@react-google-maps/api';\r\n\r\nimport MapDirectionsRenderer from './MapDirectionsRenderer';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getEmployeeCustomers } from '../../actions/employee';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Alert from '../Layout/Alert';\r\nimport Footer from '../Layout/Footer';\r\nimport RouteBuilder from '../Layout/RouteBuilder';\r\n\r\nimport { Container } from 'reactstrap';\r\n\r\n// import { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport RoutingMachine from '../../utils/RoutingMachine';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine';\r\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\r\nimport 'leaflet-routing-machine/dist/leaflet.routing.icons.png';\r\n\r\nimport LeafletMap from '../Layout/LeafletMap';\r\n\r\nlet key = 'AIzaSyBPTZtirCX7Ar2bIandK2EZzj10V2bBUag';\r\n\r\nconst markerIcon = new L.Icon({\r\n  iconUrl:\r\n    'https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png',\r\n  iconSize: [35, 45],\r\n  iconAnchor: [17, 46],\r\n  popupAnchor: [0, -46],\r\n  html: '5'\r\n});\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px'\r\n};\r\n\r\nconst locations = [\r\n  {\r\n    id: 4,\r\n    info: 'Greg Bryson',\r\n    lat: 34.238134,\r\n    lng: -84.072205\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    info: 'Lee Wood',\r\n    lat: 34.224666,\r\n    lng: -84.077647\r\n  },\r\n  {\r\n    id: 5,\r\n    info: 'Sam Siemon',\r\n    lat: 34.235536,\r\n    lng: -84.072864\r\n  },\r\n  {\r\n    id: 2,\r\n    info: 'Scott Harris',\r\n    lat: 34.189243,\r\n    lng: -84.069363\r\n  }\r\n];\r\n\r\nconst Routing = ({\r\n  mapRedux: { legs, loading },\r\n  customers: { customers },\r\n  getEmployeeCustomers\r\n}) => {\r\n  const [map, setMap] = React.useState(null);\r\n\r\n  useEffect(() => {\r\n    // getEmployeeCustomers('6011ff1582278974ac42fe88');\r\n  }, [getEmployeeCustomers]);\r\n\r\n  const [mapState, setMapState] = useState({\r\n    showingInfoWindow: false,\r\n    selectedMarker: null\r\n  });\r\n\r\n  const onMarkerClick = id => {\r\n    setMapState({\r\n      showingInfoWindow: true,\r\n      selectedMarker: id\r\n    });\r\n  };\r\n\r\n  const onInfoWindowClose = () => {\r\n    setMapState({\r\n      showingInfoWindow: false,\r\n      selectedMarker: null\r\n    });\r\n  };\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n  let totalDistance = 0;\r\n  let totalDuration = 0;\r\n  let METERS_TO_MILES = 0.000621371192;\r\n\r\n  const calculateTotalDistance = () => {\r\n    for (var i = 0; i < legs.length; ++i) {\r\n      totalDistance += legs[i].distance.value;\r\n      totalDuration += legs[i].duration.value;\r\n    }\r\n\r\n    totalDistance = Math.round(totalDistance * METERS_TO_MILES * 10) / 10;\r\n    totalDuration = Math.round(totalDuration / 60);\r\n\r\n    // setTotals({\r\n    //   totalDistance,\r\n    //   totalDuration\r\n    // });\r\n  };\r\n\r\n  calculateTotalDistance();\r\n\r\n  // console.log(totalDuration, totalDistance);\r\n\r\n  const [centerPoint, setCenterPoint] = useState({\r\n    lat: 34.2313319,\r\n    lng: -84.1105079\r\n  });\r\n  const ZOOM_LEVEL = 13;\r\n  const mapRef = useRef();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='routing' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/users'>Routing</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Container>\r\n          <h1>Google Maps Route</h1>\r\n\r\n          {totalDistance && <h2>Total Distance: {totalDistance} miles</h2>}\r\n          {totalDuration && <h3>Total Duration: {totalDuration} minutes</h3>}\r\n\r\n          <h1>Route Builder</h1>\r\n          <RouteBuilder />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRouting.propTypes = {\r\n  getEmployeeCustomers: PropTypes.func.isRequired,\r\n  mapRedux: PropTypes.object.isRequired,\r\n  customers: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  mapRedux: state.map,\r\n  customers: state.customer\r\n});\r\n\r\nexport default connect(mapStateToProps, { getEmployeeCustomers })(Routing);\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\CleanerManager..js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\customer.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Customers.js",["433"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewCustomer.js",["434","435","436"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\map.js",["437"],"import { GET_ROUTE_LEGS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  legs: [],\r\n  loading: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_ROUTE_LEGS:\r\n      return {\r\n        ...state,\r\n        legs: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\dashboard\\Dashboard.js",["438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465"],"import React, { Fragment, useEffect, useState } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Dashnav from '../dashboard/Dashnav';\r\n\r\nimport { Formik } from 'formik';\r\n\r\nimport axios from 'axios';\r\nimport DatePicker from 'reactstrap-date-picker';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport\r\n} from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Badge,\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  UncontrolledDropdown,\r\n  Media,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Progress,\r\n  Table,\r\n  Tooltip,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  UncontrolledTooltip,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  CardBody,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter\r\n} from 'reactstrap';\r\n\r\nimport { getEmployeeRoute, getEmployees } from '../../actions/employee';\r\nimport {\r\n  addServiceLog,\r\n  getChecklist,\r\n  getCustomerServiceNotes,\r\n  sendServiceReport,\r\n  unableService,\r\n  getWorkOrders,\r\n  approveWorkOrder,\r\n  updateWorkOrder,\r\n  getCustomers\r\n} from '../../actions/customer';\r\n\r\nimport Chart from 'chart.js';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport Footer from '../Layout/Footer';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// import { Container } from 'reactstrap';\r\n\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nimport Sidebar from './Sidebar';\r\n\r\nimport List from 'list.js';\r\n\r\nimport {\r\n  chartOptions,\r\n  parseOptions,\r\n  chartExample1,\r\n  chartExample2\r\n} from '../../variables/chart';\r\nimport map from '../../reducers/map';\r\nimport { set } from 'mongoose';\r\nimport customer from '../../reducers/customer';\r\n\r\nconst { generateTimeSlots } = require('@georgenet/timeslotter');\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst Dashboard = ({\r\n  auth: { user, isAuthenticated, loading, token },\r\n  addServiceLog,\r\n  getChecklist,\r\n  getCustomerServiceNotes,\r\n  getEmployeeRoute,\r\n  sendServiceReport,\r\n  unableService,\r\n  getWorkOrders,\r\n  approveWorkOrder,\r\n  updateWorkOrder,\r\n  getCustomers,\r\n  getEmployees,\r\n  customers: { customers, checklist, serviceNotes, routeList, workOrders },\r\n  employees: { employees }\r\n}) => {\r\n  useEffect(() => {\r\n    // let options = {\r\n    //   valueNames: ['date', 'service', 'rate', 'status'],\r\n    //   listClass: 'list'\r\n    // };\r\n    // let newList = new List('list-container', options);\r\n  }, []);\r\n\r\n  const formSchema = Yup.object().shape({\r\n    customer: Yup.string()\r\n      .required('Must Select a Customer')\r\n      .notOneOf(['Select Customer'], 'Must Select a Customer'),\r\n    technician: Yup.string()\r\n      .required('Must Select a Technician')\r\n      .notOneOf(['Select Technician'], 'Must Select a Technician')\r\n  });\r\n\r\n  useEffect(() => {\r\n    getWorkOrders();\r\n    getCustomers();\r\n    getEmployees();\r\n  }, [getWorkOrders, getCustomers, getEmployees]);\r\n\r\n  const [infoModal, setInfoModal] = useState({\r\n    isOpen: false,\r\n    isEditOpen: false,\r\n    active: '',\r\n    order: null,\r\n    isLoading: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getEmployeeRoute(user._id, moment(new Date()).format('dddd'));\r\n    }\r\n  }, [user]);\r\n\r\n  if (window.Chart) {\r\n    parseOptions(Chart, chartOptions());\r\n  }\r\n  const startTime = moment()\r\n    .set('hour', 8)\r\n    .set('minute', 0)\r\n    .set('second', 0)\r\n    .set('month', 12)\r\n    .set('date', 1);\r\n  const endTime = moment()\r\n    .set('hour', 20)\r\n    .set('minute', 0)\r\n    .set('second', 0)\r\n    .set('month', 12)\r\n    .set('date', 1);\r\n\r\n  // Push availability intervals to an array - then for each array, generate time slots and display those\r\n  // Bookings are assigned technicians. Choose a randomly available technician from array and assign them to booking\r\n\r\n  const booked = [\r\n    {\r\n      start: moment()\r\n        .set('hour', 9)\r\n        .set('minute', 0)\r\n        .set('second', 0),\r\n      end: moment()\r\n        .set('hour', 9)\r\n        .set('minute', 30)\r\n        .set('second', 0)\r\n    }\r\n  ];\r\n\r\n  const dontBookWithinDays = 1;\r\n\r\n  const slots = generateTimeSlots(startTime, endTime, 30, 60, booked);\r\n\r\n  const pagination = paginationFactory({\r\n    page: 1,\r\n    alwaysShowAllBtns: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPageRenderer: ({\r\n      options,\r\n      currSizePerPage,\r\n      onSizePerPageChange\r\n    }) => (\r\n      <div className='dataTables_length' id='datatable-basic_length'>\r\n        <select\r\n          name='datatable-basic_length'\r\n          aria-controls='datatable-basic'\r\n          className='form-control form-control-sm'\r\n          style={{ width: '30%' }}\r\n          onChange={e => onSizePerPageChange(e.target.value)}\r\n        >\r\n          <option value='10'>10</option>\r\n          <option value='25'>25</option>\r\n          <option value='50'>50</option>\r\n          <option value='100'>100</option>\r\n        </select>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const nameFormatter = cell => {\r\n    if (cell === undefined) {\r\n      return <span></span>;\r\n    } else {\r\n      return (\r\n        <span>\r\n          {cell.first} {cell.last}\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  const filterFunction = (cell, row) => {\r\n    const string = `${cell.first} ${cell.last}`;\r\n    return string;\r\n  };\r\n\r\n  const typeFormatter = cell => {\r\n    if (cell === 'Residential') {\r\n      return (\r\n        <span>\r\n          <i className='ni ni-shop text-primary'></i> {cell}\r\n        </span>\r\n      );\r\n    } else if (cell === 'Commercial') {\r\n      return (\r\n        <span>\r\n          <i className='ni ni-building text-red'></i> {cell}\r\n        </span>\r\n      );\r\n    } else {\r\n      return <span>N/A</span>;\r\n    }\r\n  };\r\n\r\n  const actionFormatter = cell => {\r\n    return (\r\n      <UncontrolledDropdown>\r\n        <DropdownToggle\r\n          className='btn-icon-only text-light'\r\n          color=''\r\n          role='button'\r\n          size='sm'\r\n        >\r\n          <i className='fas fa-ellipsis-v' />\r\n        </DropdownToggle>\r\n        <DropdownMenu className='dropdown-menu-arrow' right>\r\n          <DropdownItem tag={Link} to={`/customers/${cell}`}>\r\n            View\r\n          </DropdownItem>\r\n          <DropdownItem tag={Link} to={`/customers/${cell}/manage/info`}>\r\n            Edit\r\n          </DropdownItem>\r\n          <DropdownItem tag={Link} to={`/customers/${cell}/inactive`}>\r\n            Mark Inactive\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  };\r\n\r\n  const statusFormatter = cell => {\r\n    if (cell === true) {\r\n      return <Badge color='success'>Active</Badge>;\r\n    } else {\r\n      return <Badge color='warning'>Inactive</Badge>;\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'isActive',\r\n      text: 'Status',\r\n      formatter: statusFormatter\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      formatter: nameFormatter,\r\n      filterValue: filterFunction,\r\n      csvFormatter: cell => {\r\n        const string = `${cell.first} ${cell.last}`;\r\n        return string;\r\n      }\r\n    },\r\n    {\r\n      dataField: 'poolType',\r\n      text: 'Type',\r\n      formatter: typeFormatter\r\n    },\r\n    {\r\n      dataField: 'serviceAddress',\r\n      text: 'Property'\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'Email'\r\n    },\r\n    {\r\n      dataField: '_id',\r\n      text: 'Actions',\r\n      formatter: actionFormatter\r\n    }\r\n  ];\r\n\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [showChems, setShowChems] = useState(false);\r\n  const [showRepair, setShowRepair] = useState(false);\r\n  const [notesView, setNotesView] = useState(false);\r\n  const [shockOpen, setShockOpen] = useState(false);\r\n  const [algacidesOpen, setAlgacidesOpen] = useState(false);\r\n  const [otherChemsOpen, setOtherChemsOpen] = useState(false);\r\n  const [logModal, setLogModal] = useState({\r\n    isOpen: false,\r\n    active: '',\r\n    activeName: '',\r\n    isServiceInfoOpen: false,\r\n    customerLock: '',\r\n    customerNotes: null,\r\n    customerChecklist: null,\r\n    checkedItems: [],\r\n    checkedNames: [],\r\n    inProgress: false,\r\n    equipment: null\r\n  });\r\n\r\n  const [routeDay, setRouteDay] = useState('Today');\r\n  const [showEquipmentList, setShowEquipmentList] = useState(false);\r\n  const [showUnableService, setShowUnableService] = useState(false);\r\n\r\n  const [unableServiceMessage, setUnableServiceMessage] = useState('');\r\n  const [unableProcessing, setUnableProcessing] = useState(false);\r\n\r\n  const submitUnableService = async () => {\r\n    setUnableProcessing(true);\r\n    await unableService(logModal.active, unableServiceMessage);\r\n    if (routeDay === 'Today') {\r\n      await getEmployeeRoute(user._id, moment(new Date()).format('dddd'));\r\n    } else {\r\n      await getEmployeeRoute(user._id, routeDay);\r\n    }\r\n\r\n    setLogModal({\r\n      isOpen: false,\r\n      active: '',\r\n      activeName: '',\r\n      isServiceInfoOpen: false,\r\n      customerLock: '',\r\n      customerNotes: null,\r\n      customerChecklist: null,\r\n      checkedItems: [],\r\n      checkedNames: [],\r\n      inProgress: false,\r\n      equipment: null\r\n    });\r\n    setShowUnableService(false);\r\n    setUnableProcessing(false);\r\n  };\r\n\r\n  const onUnableChange = e => {\r\n    setUnableServiceMessage(e.target.value);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (user) {\r\n      if (routeDay === 'Today') {\r\n        return await getEmployeeRoute(\r\n          user._id,\r\n          moment(new Date()).format('dddd')\r\n        );\r\n      }\r\n\r\n      await getEmployeeRoute(user._id, routeDay);\r\n    }\r\n  }, [routeDay]);\r\n\r\n  const [logPictureState, setLogPictureState] = useState({ pictures: [] });\r\n  const [repairPictureState, setRepairPictureState] = useState({\r\n    pictures: []\r\n  });\r\n\r\n  // console.log(logPictureState);\r\n\r\n  const uploadImages = async activity => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n\r\n      let uploadPromises = logPictureState.pictures.map(image => {\r\n        let data = new FormData();\r\n        data.append('image', image, image.name);\r\n        return axios.patch(\r\n          `/api/customers/recentActivity/edit/${activity._id}`,\r\n          data,\r\n          config\r\n        );\r\n      });\r\n\r\n      await axios.all(uploadPromises);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onDrop = picture => {\r\n    setLogPictureState({\r\n      pictures: picture\r\n    });\r\n  };\r\n\r\n  const onDropRepair = picture => {\r\n    setRepairPictureState({ pictures: picture });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLogModal({\r\n      ...logModal,\r\n      customerChecklist: checklist\r\n    });\r\n  }, [checklist]);\r\n\r\n  useEffect(() => {\r\n    setLogModal({\r\n      ...logModal,\r\n      customerNotes: serviceNotes\r\n    });\r\n  }, [serviceNotes]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal\r\n        isOpen={infoModal.isEditOpen}\r\n        toggle={() =>\r\n          setInfoModal({\r\n            ...infoModal,\r\n            isEditOpen: !infoModal.isEditOpen,\r\n            isOpen: false,\r\n            isLoading: false\r\n          })\r\n        }\r\n      >\r\n        <ModalHeader\r\n          toggle={() =>\r\n            setInfoModal({\r\n              ...infoModal,\r\n              isEditOpen: !infoModal.isEditOpen,\r\n              isOpen: false,\r\n              isLoading: false\r\n            })\r\n          }\r\n        >\r\n          Edit Work Order:\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Formik\r\n            initialValues={{\r\n              orderType: infoModal.active\r\n                ? workOrders[infoModal.order].orderType\r\n                : '',\r\n              customer: infoModal.active\r\n                ? workOrders[infoModal.order].customer._id\r\n                : '',\r\n              description: infoModal.active\r\n                ? workOrders[infoModal.order].description\r\n                : '',\r\n              officeNote: infoModal.active\r\n                ? workOrders[infoModal.order].officeNote\r\n                : '',\r\n              estimatedMinutes: infoModal.active\r\n                ? workOrders[infoModal.order].estimatedMinutes\r\n                : '',\r\n              technician: infoModal.active\r\n                ? workOrders[infoModal.order].technician\r\n                : '',\r\n              showDate: true,\r\n\r\n              notifyCustomer: infoModal.active\r\n                ? workOrders[infoModal.order].notifyCustomer\r\n                : '',\r\n              scheduledDate: infoModal.active\r\n                ? workOrders[infoModal.order].scheduledDate\r\n                : '',\r\n              status: infoModal.active\r\n                ? workOrders[infoModal.order].status\r\n                : '',\r\n              laborCost: infoModal.active\r\n                ? workOrders[infoModal.order].laborCost\r\n                : '',\r\n              price: infoModal.active ? workOrders[infoModal.order].price : ''\r\n            }}\r\n            validationSchema={formSchema}\r\n            onSubmit={async data => {\r\n              setInfoModal({ ...infoModal, isLoading: true });\r\n              await updateWorkOrder(data, infoModal.active);\r\n              await getWorkOrders();\r\n              setInfoModal({\r\n                ...infoModal,\r\n                isLoading: false,\r\n                isEditOpen: false,\r\n                isOpen: false\r\n              });\r\n            }}\r\n            render={({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              setFieldValue,\r\n              errors,\r\n              touched\r\n            }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label className='form-control-label'>Order Type:</Label>\r\n                      <Input\r\n                        type='select'\r\n                        name='orderType'\r\n                        value={values.orderType}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      >\r\n                        <option>Service Call</option>\r\n                        <option>Equipment Repair</option>\r\n                        <option>Filter Clean</option>\r\n                        <option>Pool Opening</option>\r\n                        <option>Pool Closing</option>\r\n                      </Input>\r\n                      {errors.orderType && touched.orderType && (\r\n                        <p className='color-red'>{errors.orderType}</p>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label className='form-control-label'>Customer:</Label>\r\n                      <Input\r\n                        type='select'\r\n                        name='customer'\r\n                        value={values.customer}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      >\r\n                        <option value={'Select Customer'}>\r\n                          Select Customer\r\n                        </option>\r\n                        {customers &&\r\n                          customers.map(customer => (\r\n                            <option value={customer._id}>\r\n                              {customer.firstName} {customer.lastName}\r\n                            </option>\r\n                          ))}\r\n                      </Input>\r\n                      {errors.customer && touched.customer && (\r\n                        <p className='color-red'>{errors.customer}</p>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label className='form-control-label'>\r\n                        Order Status:\r\n                      </Label>\r\n                      <Input\r\n                        type='select'\r\n                        name='status'\r\n                        value={values.status}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      >\r\n                        <option>Approval Needed</option>\r\n                        <option>Approved</option>\r\n                        <option>Completed</option>\r\n                        <option>Closed</option>\r\n                      </Input>\r\n                      {errors.status && touched.status && (\r\n                        <p className='color-red'>{errors.status}</p>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label className='form-control-label'>\r\n                        Order Description:\r\n                      </Label>\r\n                      <Input\r\n                        type='textarea'\r\n                        name='description'\r\n                        value={values.description}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                      {errors.description && touched.description && (\r\n                        <p className='color-red'>{errors.description}</p>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label className='form-control-label'>Technician:</Label>\r\n                      <Input\r\n                        type='select'\r\n                        name='technician'\r\n                        value={values.technician}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      >\r\n                        <option value={'Select Technician'}>\r\n                          Select Technician\r\n                        </option>\r\n                        {employees &&\r\n                          employees.map(em => (\r\n                            <option value={em._id}>\r\n                              {em.firstName} {em.lastName}\r\n                            </option>\r\n                          ))}\r\n                      </Input>\r\n                      {errors.technician && touched.technician && (\r\n                        <p className='color-red'>{errors.technician}</p>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                {values.scheduledDate && (\r\n                  <Row>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label className='form-control-label'>\r\n                          Date to Complete:\r\n                        </Label>\r\n                        <DatePicker\r\n                          value={values.scheduledDate}\r\n                          onChange={value => {\r\n                            setFieldValue('scheduledDate', value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label className='form-control-label'>\r\n                        Est. Minutes to Complete:\r\n                      </Label>\r\n                      <Input\r\n                        type='number'\r\n                        name='estimatedMinutes'\r\n                        value={values.estimatedMinutes}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                      {errors.estimatedMinutes && touched.estimatedMinutes && (\r\n                        <p className='color-red'>{errors.estimatedMinutes}</p>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label className='form-control-label'>Labor Cost:</Label>\r\n                      <Input\r\n                        type='number'\r\n                        name='laborCost'\r\n                        value={values.laborCost}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                      {errors.laborCost && touched.laborCost && (\r\n                        <p className='color-red'>{errors.laborCost}</p>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label className='form-control-label'>Price:</Label>\r\n                      <Input\r\n                        type='number'\r\n                        name='price'\r\n                        value={values.price}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                      {errors.price && touched.price && (\r\n                        <p className='color-red'>{errors.price}</p>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label className='form-control-label'>Office Note:</Label>\r\n                      <Input\r\n                        type='textarea'\r\n                        name='officeNote'\r\n                        value={values.officeNote}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                      {errors.officeNote && touched.officeNote && (\r\n                        <p className='color-red'>{errors.officeNote}</p>\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  color='success'\r\n                  type='submit'\r\n                  block\r\n                  className='btn-icon'\r\n                >\r\n                  <span className='btn-inner--icon'>\r\n                    <i className='fas fa-save'></i>\r\n                  </span>\r\n                  {infoModal.isLoading === true ? (\r\n                    <span className='btn-inner--text'>\r\n                      <SpinnerCircular\r\n                        size={24}\r\n                        thickness={180}\r\n                        speed={100}\r\n                        color='rgba(57, 125, 172, 1)'\r\n                        secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                      />{' '}\r\n                      Processing...\r\n                    </span>\r\n                  ) : (\r\n                    <span className='btn-inner--text'>Save Changes</span>\r\n                  )}\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          />\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      {workOrders && infoModal.active && (\r\n        <Modal\r\n          isOpen={infoModal.isOpen}\r\n          toggle={() => {\r\n            setInfoModal({\r\n              ...infoModal,\r\n              isOpen: false,\r\n              isEditOpen: false,\r\n              isLoading: false\r\n            });\r\n          }}\r\n        >\r\n          <ModalHeader\r\n            toggle={() => {\r\n              setInfoModal({\r\n                ...infoModal,\r\n                isOpen: false,\r\n                isEditOpen: false,\r\n                isLoading: false\r\n              });\r\n            }}\r\n          >\r\n            View Work Order: {workOrders[infoModal.order].orderType}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Row>\r\n              <Col>\r\n                <Label className='form-control-label'>Creation Method:</Label>\r\n                {workOrders[infoModal.order].method ? (\r\n                  <p>{workOrders[infoModal.order].method}</p>\r\n                ) : (\r\n                  <p>N/A</p>\r\n                )}\r\n              </Col>\r\n              <Col>\r\n                <Label className='form-control-label'>Order Type:</Label>\r\n                {workOrders[infoModal.order].orderType ? (\r\n                  <p>{workOrders[infoModal.order].orderType}</p>\r\n                ) : (\r\n                  <p>N/A</p>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col>\r\n                <Label className='form-control-label'>Status:</Label>\r\n                <p>\r\n                  {workOrders[infoModal.order].status === 'Completed' ? (\r\n                    <Badge color='success'>Completed</Badge>\r\n                  ) : workOrders[infoModal.order].status === 'Assigned' ? (\r\n                    <Badge color='info'>Assigned</Badge>\r\n                  ) : workOrders[infoModal.order].status === 'Unassigned' ? (\r\n                    <Badge color='danger'>Unassigned</Badge>\r\n                  ) : workOrders[infoModal.order].status === 'Approved' ? (\r\n                    <Badge color='primary'>Approved</Badge>\r\n                  ) : workOrders[infoModal.order].status ===\r\n                    'Approval Needed' ? (\r\n                    <Badge color='warning'>Approval Needed</Badge>\r\n                  ) : workOrders[infoModal.order].status === 'Closed' ? (\r\n                    <Badge color='danger'>Closed</Badge>\r\n                  ) : (\r\n                    <Badge color='danger'>N/A</Badge>\r\n                  )}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <Label className='form-control-label'>Notified Customer:</Label>\r\n                {workOrders[infoModal.order].notifyCustomer === true ? (\r\n                  <p>Yes</p>\r\n                ) : (\r\n                  <p>No</p>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col>\r\n                <Label className='form-control-label'>Description:</Label>\r\n                {workOrders[infoModal.order].description ? (\r\n                  <p>{workOrders[infoModal.order].description}</p>\r\n                ) : (\r\n                  <p>N/A</p>\r\n                )}\r\n              </Col>\r\n              <Col>\r\n                <Label className='form-control-label'>Office Note:</Label>\r\n                {workOrders[infoModal.order].officeNote ? (\r\n                  <p>{workOrders[infoModal.order].officeNote}</p>\r\n                ) : (\r\n                  <p>N/A</p>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col>\r\n                <Label className='form-control-label'>Technician:</Label>\r\n                {workOrders[infoModal.order].technicianName ? (\r\n                  <p>{workOrders[infoModal.order].technicianName}</p>\r\n                ) : (\r\n                  <p>N/A</p>\r\n                )}\r\n              </Col>\r\n              <Col>\r\n                <Label className='form-control-label'>Date Of Order:</Label>\r\n                {workOrders[infoModal.order].dateCreated ? (\r\n                  <p>\r\n                    {moment(workOrders[infoModal.order].dateCreated).format(\r\n                      'MMMM Do, YYYY'\r\n                    )}\r\n                  </p>\r\n                ) : (\r\n                  <p>N/A</p>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Label className='form-control-label'>Estimated Minutes:</Label>\r\n                {workOrders[infoModal.order].estimatedMinutes ? (\r\n                  <p>{workOrders[infoModal.order].estimatedMinutes}</p>\r\n                ) : (\r\n                  <p>0</p>\r\n                )}\r\n              </Col>\r\n              <Col>\r\n                <Label className='form-control-label'>Labor Cost:</Label>\r\n                {workOrders[infoModal.order].laborCost ? (\r\n                  <p>{workOrders[infoModal.order].laborCost}</p>\r\n                ) : (\r\n                  <p>0</p>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Label className='form-control-label'>Price:</Label>\r\n                {workOrders[infoModal.order].price ? (\r\n                  <p>{workOrders[infoModal.order].price}</p>\r\n                ) : (\r\n                  <p>0</p>\r\n                )}\r\n              </Col>\r\n              <Col>\r\n                <Label className='form-control-label'>Scheduled Date:</Label>\r\n                {workOrders[infoModal.order].scheduledDate ? (\r\n                  <p>\r\n                    {moment(workOrders[infoModal.order].scheduledDate).format(\r\n                      'MMMM Do, YYYY'\r\n                    )}\r\n                  </p>\r\n                ) : (\r\n                  <p>N/A</p>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                {workOrders[infoModal.order].status === 'Approval Needed' && (\r\n                  <Button\r\n                    className='btn-icon'\r\n                    color='primary'\r\n                    block\r\n                    onClick={async e => {\r\n                      e.preventDefault();\r\n                      setInfoModal({ ...infoModal, isLoading: true });\r\n                      await approveWorkOrder(infoModal.active);\r\n                      await getWorkOrders();\r\n                      setInfoModal({\r\n                        ...infoModal,\r\n                        isLoading: false,\r\n                        isOpen: false,\r\n                        isEditOpen: false\r\n                      });\r\n                    }}\r\n                  >\r\n                    <span className='btn-inner--icon'>\r\n                      <i className='fas fa-thumbs-up'></i>\r\n                    </span>\r\n                    {infoModal.isLoading ? (\r\n                      <span className='btn-inner--text'>\r\n                        <SpinnerCircular\r\n                          size={24}\r\n                          thickness={180}\r\n                          speed={100}\r\n                          color='rgba(57, 125, 172, 1)'\r\n                          secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                        />{' '}\r\n                        Processing...\r\n                      </span>\r\n                    ) : (\r\n                      <span className='btn-inner--text'>\r\n                        Approve Work Order\r\n                      </span>\r\n                    )}\r\n                  </Button>\r\n                )}\r\n\r\n                {/* <Button className='btn-icon' color='info' block>\r\n                      <span className='btn-inner--icon'>\r\n                        <i className='fas fa-user-alt'></i>\r\n                      </span>\r\n                      <span className='btn-inner--text'>\r\n                        Change Assigned Technician\r\n                      </span>\r\n                    </Button> */}\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n      )}\r\n      <Sidebar active='dashboard' />\r\n      <div className='main-content' id='panel'>\r\n        {/* Topnav */}\r\n        <Dashnav />\r\n        {/* Header */}\r\n        {/* Header */}\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n              {/* Card stats */}\r\n              {isAuthenticated && (\r\n                <div className='row'>\r\n                  {!loading && token && user.role !== 'Technician' && (\r\n                    <Fragment>\r\n                      <div className='col-xl-3 col-md-6'>\r\n                        <div className='card card-stats'>\r\n                          {/* Card body */}\r\n                          <div className='card-body'>\r\n                            <div className='row'>\r\n                              <div className='col'>\r\n                                <h5 className='card-title text-uppercase text-muted mb-0'>\r\n                                  Total Online Bookings\r\n                                </h5>\r\n                                <span className='h2 font-weight-bold mb-0'>\r\n                                  116\r\n                                </span>\r\n                              </div>\r\n                              <div className='col-auto'>\r\n                                <div className='icon icon-shape bg-gradient-red text-white rounded-circle shadow'>\r\n                                  <i className='ni ni-active-40' />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <p className='mt-3 mb-0 text-sm'>\r\n                              <span className='text-success mr-2'>\r\n                                <i className='fa fa-arrow-up' /> 3.48%\r\n                              </span>\r\n                              <span className='text-nowrap'>\r\n                                Since last month\r\n                              </span>\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-xl-3 col-md-6'>\r\n                        <div className='card card-stats'>\r\n                          {/* Card body */}\r\n                          <div className='card-body'>\r\n                            <div className='row'>\r\n                              <div className='col'>\r\n                                <h5 className='card-title text-uppercase text-muted mb-0'>\r\n                                  New Customers\r\n                                </h5>\r\n                                <span className='h2 font-weight-bold mb-0'>\r\n                                  12\r\n                                </span>\r\n                              </div>\r\n                              <div className='col-auto'>\r\n                                <div className='icon icon-shape bg-gradient-orange text-white rounded-circle shadow'>\r\n                                  <i className='ni ni-chart-pie-35' />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <p className='mt-3 mb-0 text-sm'>\r\n                              <span className='text-success mr-2'>\r\n                                <i className='fa fa-arrow-up' /> 3.48%\r\n                              </span>\r\n                              <span className='text-nowrap'>\r\n                                Since last month\r\n                              </span>\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-xl-3 col-md-6'>\r\n                        <div className='card card-stats'>\r\n                          {/* Card body */}\r\n                          <div className='card-body'>\r\n                            <div className='row'>\r\n                              <div className='col'>\r\n                                <h5 className='card-title text-uppercase text-muted mb-0'>\r\n                                  Total Active Customers\r\n                                </h5>\r\n                                <span className='h2 font-weight-bold mb-0'>\r\n                                  23\r\n                                </span>\r\n                              </div>\r\n                              <div className='col-auto'>\r\n                                <div className='icon icon-shape bg-gradient-green text-white rounded-circle shadow'>\r\n                                  <i className='ni ni-money-coins' />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <p className='mt-3 mb-0 text-sm'>\r\n                              <span className='text-success mr-2'>\r\n                                <i className='fa fa-arrow-up' /> 3.48%\r\n                              </span>\r\n                              <span className='text-nowrap'>\r\n                                Since last month\r\n                              </span>\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-xl-3 col-md-6'>\r\n                        <div className='card card-stats'>\r\n                          {/* Card body */}\r\n                          <div className='card-body'>\r\n                            <div className='row'>\r\n                              <div className='col'>\r\n                                <h5 className='card-title text-uppercase text-muted mb-0'>\r\n                                  Open Work Orders\r\n                                </h5>\r\n                                <span className='h2 font-weight-bold mb-0'>\r\n                                  2\r\n                                </span>\r\n                              </div>\r\n                              <div className='col-auto'>\r\n                                <div className='icon icon-shape bg-gradient-info text-white rounded-circle shadow'>\r\n                                  <i className='ni ni-chart-bar-32' />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <p className='mt-3 mb-0 text-sm'>\r\n                              <span className='text-success mr-2'>\r\n                                <i className='fa fa-arrow-up' /> 3.48%\r\n                              </span>\r\n                              <span className='text-nowrap'>\r\n                                Since last month\r\n                              </span>\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Fragment>\r\n                  )}\r\n\r\n                  {!loading && token && user.role === 'Technician' && (\r\n                    <Fragment>\r\n                      <div className='col-xl-3 col-md-6'>\r\n                        <div className='card card-stats'>\r\n                          {/* Card body */}\r\n                          <div className='card-body'>\r\n                            <div className='row'>\r\n                              <div className='col'>\r\n                                <h5 className='card-title text-uppercase text-muted mb-0'>\r\n                                  Today Is:\r\n                                </h5>\r\n                                <span className='h2 font-weight-bold mb-0'>\r\n                                  {moment(new Date()).format('dddd')}\r\n                                </span>\r\n                              </div>\r\n                              <div className='col-auto'>\r\n                                <div className='icon icon-shape bg-gradient-red text-white rounded-circle shadow'>\r\n                                  <i className='ni ni-calendar-grid-58' />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-xl-3 col-md-6'>\r\n                        <div className='card card-stats'>\r\n                          {/* Card body */}\r\n                          <div className='card-body'>\r\n                            <div className='row'>\r\n                              <div className='col'>\r\n                                <h5 className='card-title text-uppercase text-muted mb-0'>\r\n                                  {routeDay}'s Customers\r\n                                </h5>\r\n                                <span className='h2 font-weight-bold mb-0'>\r\n                                  {routeList && routeList.length}\r\n                                  {/* {\r\n                                    customers.filter(\r\n                                      customer =>\r\n                                        customer.scheduledDay ===\r\n                                        moment(new Date()).format('dddd')\r\n                                    ).length\r\n                                  } */}\r\n                                </span>\r\n                              </div>\r\n                              <div className='col-auto'>\r\n                                <div className='icon icon-shape bg-gradient-orange text-white rounded-circle shadow'>\r\n                                  <i className='ni ni-collection' />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-xl-3 col-md-6'>\r\n                        <div className='card card-stats'>\r\n                          {/* Card body */}\r\n                          <div className='card-body'>\r\n                            <div className='row'>\r\n                              <div className='col'>\r\n                                <h5 className='card-title text-uppercase text-muted mb-0'>\r\n                                  Customers Remaining\r\n                                </h5>\r\n                                <span className='h2 font-weight-bold mb-0'>\r\n                                  {\r\n                                    routeList.filter(\r\n                                      c =>\r\n                                        (moment(\r\n                                          c.customer.lastServiced\r\n                                        ).isBefore(Date.now(), 'day') &&\r\n                                          c.customer.scheduledDay ===\r\n                                            moment(new Date()).format(\r\n                                              'dddd'\r\n                                            )) ||\r\n                                        (c.customer.lastServiced ===\r\n                                          undefined &&\r\n                                          c.customer.scheduledDay ===\r\n                                            moment(new Date()).format('dddd'))\r\n                                    ).length\r\n                                  }\r\n\r\n                                  {/* {\r\n                                    customers.filter(\r\n                                      customer =>\r\n                                        (moment(customer.lastServiced).isBefore(\r\n                                          Date.now(),\r\n                                          'day'\r\n                                        ) &&\r\n                                          customer.scheduledDay ===\r\n                                            moment(new Date()).format(\r\n                                              'dddd'\r\n                                            )) ||\r\n                                        (customer.lastServiced === undefined &&\r\n                                          customer.scheduledDay ===\r\n                                            moment(new Date()).format('dddd'))\r\n                                    ).length\r\n                                  } */}\r\n                                </span>\r\n                              </div>\r\n                              <div className='col-auto'>\r\n                                <div className='icon icon-shape bg-gradient-green text-white rounded-circle shadow'>\r\n                                  <i className='ni ni-delivery-fast' />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-xl-3 col-md-6'>\r\n                        <div className='card card-stats'>\r\n                          {/* Card body */}\r\n                          <div className='card-body'>\r\n                            <div className='row'>\r\n                              <div className='col'>\r\n                                <h5 className='card-title text-uppercase text-muted mb-0'>\r\n                                  Customers Completed\r\n                                </h5>\r\n                                <span className='h2 font-weight-bold mb-0'>\r\n                                  {\r\n                                    routeList.filter(\r\n                                      c =>\r\n                                        moment(c.customer.lastServiced).isSame(\r\n                                          Date.now(),\r\n                                          'day'\r\n                                        ) &&\r\n                                        c.customer.scheduledDay ===\r\n                                          moment(new Date()).format('dddd') &&\r\n                                        c.customer.lastServiced !== undefined\r\n                                    ).length\r\n                                  }\r\n\r\n                                  {/* {\r\n                                    customers.filter(\r\n                                      customer =>\r\n                                        moment(customer.lastServiced).isSame(\r\n                                          Date.now(),\r\n                                          'day'\r\n                                        ) &&\r\n                                        customer.scheduledDay ===\r\n                                          moment(new Date()).format('dddd') &&\r\n                                        customer.lastServiced !== undefined\r\n                                    ).length\r\n                                  } */}\r\n                                </span>\r\n                              </div>\r\n                              <div className='col-auto'>\r\n                                <div className='icon icon-shape bg-gradient-info text-white rounded-circle shadow'>\r\n                                  <i className='ni ni-check-bold' />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Fragment>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Page content */}\r\n        {isAuthenticated && !loading && user.role === 'Technician' && (\r\n          <Container fluid className='mt--6'>\r\n            <Row>\r\n              <Col md='4'>\r\n                <Card className='shadow'>\r\n                  <CardHeader>\r\n                    <h3>Control Center</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Label className='form-control-label'>\r\n                      View Route For:\r\n                    </Label>\r\n                    <Input\r\n                      type='select'\r\n                      onChange={e => setRouteDay(e.target.value)}\r\n                    >\r\n                      <option>Today</option>\r\n                      <option>Monday</option>\r\n                      <option>Tuesday</option>\r\n                      <option>Wednesday</option>\r\n                      <option>Thursday</option>\r\n                      <option>Friday</option>\r\n                      <option>Saturday</option>\r\n                      <option>Sunday</option>\r\n                    </Input>\r\n\r\n                    {/* <Button className='btn-icon mgn-btm-10' color='primary'>\r\n                      <span className='btn-inner--icon'>\r\n                        <i className='ni ni-settings'></i>\r\n                      </span>\r\n                      <span className='btn-inner--text'>Next Day's Route</span>\r\n                    </Button>\r\n\r\n                    <Button className='btn-icon mgn-btm-10' color='success'>\r\n                      <span className='btn-inner--icon'>\r\n                        <i className='ni ni-delivery-fast'></i>\r\n                      </span>\r\n                      <span className='btn-inner--text'>\r\n                        Previous Day's Route\r\n                      </span>\r\n                    </Button>\r\n                    <Button className='btn-icon mgn-btm-10' color='warning'>\r\n                      <span className='btn-inner--icon'>\r\n                        <i className='ni ni-badge'></i>\r\n                      </span>\r\n                      <span className='btn-inner--text'>Clock In/Out</span>\r\n                    </Button> */}\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Modal\r\n                isOpen={logModal.isServiceInfoOpen}\r\n                toggle={() => {\r\n                  setLogModal({\r\n                    ...logModal,\r\n                    isServiceInfoOpen: false\r\n                  });\r\n                }}\r\n              >\r\n                <ModalHeader\r\n                  toggle={() => {\r\n                    setLogModal({\r\n                      ...logModal,\r\n                      isServiceInfoOpen: false\r\n                    });\r\n                  }}\r\n                >\r\n                  Service Information For: {logModal.activeName}\r\n                </ModalHeader>\r\n                {showEquipmentList ? (\r\n                  <ModalBody>\r\n                    <Row>\r\n                      <Col>\r\n                        <Label className='form-control-label'>\r\n                          Pool Cleaner:\r\n                        </Label>\r\n                        <br />\r\n                        {logModal.equipment.cleanerMake}{' '}\r\n                        {logModal.equipment.cleanerModel}\r\n                      </Col>\r\n                      <Col>\r\n                        <Label className='form-control-label'>Filter:</Label>\r\n                        <br />\r\n                        {logModal.equipment.filterMake}{' '}\r\n                        {logModal.equipment.filterModel}\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n\r\n                    <Row>\r\n                      <Col>\r\n                        <Label className='form-control-label'>Heater:</Label>\r\n                        <br />\r\n                        {logModal.equipment.heaterMake}{' '}\r\n                        {logModal.equipment.heaterModel}\r\n                      </Col>\r\n                      <Col>\r\n                        <Label className='form-control-label'>Pump:</Label>\r\n                        <br />\r\n                        {logModal.equipment.pumpMake}{' '}\r\n                        {logModal.equipment.pumpModel}\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <br />\r\n\r\n                    <Row>\r\n                      <Col>\r\n                        <Label className='form-control-label'>\r\n                          Pool Gallons:\r\n                        </Label>\r\n                        <br />\r\n                        {logModal.equipment.poolGallons}{' '}\r\n                      </Col>\r\n                      <Col>\r\n                        <Label className='form-control-label'>Pool Type:</Label>\r\n                        <br />\r\n                        {logModal.equipment.poolType}{' '}\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <hr />\r\n\r\n                    {logModal.equipment.other.length >= 1 && (\r\n                      <h4>Other Equipment</h4>\r\n                    )}\r\n                    <br />\r\n\r\n                    {logModal.equipment.other.map(item => (\r\n                      <Fragment>\r\n                        <Row>\r\n                          <Col>\r\n                            <Label className='form-control-label'>\r\n                              Category:\r\n                            </Label>\r\n                            <br />\r\n                            {item.category}\r\n                          </Col>\r\n                          <Col>\r\n                            <Label className='form-control-label'>Make:</Label>\r\n                            <br />\r\n                            {item.make}\r\n                          </Col>\r\n                          <Col>\r\n                            <Label className='form-control-label'>Model:</Label>\r\n                            <br />\r\n                            {item.model}\r\n                          </Col>\r\n                        </Row>\r\n                        <br />\r\n                      </Fragment>\r\n                    ))}\r\n\r\n                    <br />\r\n                    <Row>\r\n                      <Button\r\n                        className='btn-icon'\r\n                        onClick={() => setShowEquipmentList(!showEquipmentList)}\r\n                        color='default'\r\n                        block\r\n                      >\r\n                        <span className='btn-inner--icon'>\r\n                          <i className='fas fa-chevron-left'></i>\r\n                        </span>\r\n                        <span className='btn-inner--text'>Go Back</span>\r\n                      </Button>\r\n                    </Row>\r\n                  </ModalBody>\r\n                ) : (\r\n                  <ModalBody>\r\n                    <div className='form-control-label'>Gate/Lock Code:</div>\r\n                    <p>\r\n                      {logModal.gatecode ? logModal.gatecode : <span>N/A</span>}\r\n                    </p>\r\n                    {logModal.customerChecklist && logModal.customerNotes && (\r\n                      <Fragment>\r\n                        <h4 className='form-control-label'>Service Notes:</h4>\r\n                        <ListGroup>\r\n                          <Fragment>\r\n                            {logModal.customerNotes.length < 1 && (\r\n                              <h4>No Service Notes...</h4>\r\n                            )}\r\n                          </Fragment>\r\n                          {logModal.customerNotes &&\r\n                            logModal.customerNotes.map(note => (\r\n                              <Fragment key={note._id}>\r\n                                {note.showDuringVisit && (\r\n                                  <ListGroupItem>{note.content}</ListGroupItem>\r\n                                )}\r\n                              </Fragment>\r\n                            ))}\r\n                        </ListGroup>\r\n                        <br />\r\n                        <h4 className='form-control-label'>\r\n                          Service Checklist:\r\n                        </h4>\r\n                        <ListGroup>\r\n                          <Fragment>\r\n                            {logModal.customerChecklist.length < 1 && (\r\n                              <h4>No Service Checklist...</h4>\r\n                            )}\r\n                          </Fragment>\r\n                          {logModal.customerChecklist.map(list => (\r\n                            <Fragment key={list._id}>\r\n                              {logModal.checkedItems &&\r\n                              logModal.checkedItems.find(\r\n                                e => e === list._id\r\n                              ) ? (\r\n                                <ListGroupItem\r\n                                  className='bg-green-wf'\r\n                                  onClick={() => {\r\n                                    if (\r\n                                      logModal.checkedItems.length === 0 ||\r\n                                      logModal.checkedItems == undefined\r\n                                    ) {\r\n                                      setLogModal({\r\n                                        ...logModal,\r\n                                        checkedItems: [list._id],\r\n                                        checkedNames: [list.item]\r\n                                      });\r\n                                    } else if (\r\n                                      logModal.checkedItems.length >= 1 &&\r\n                                      logModal.checkedItems.find(\r\n                                        e => e === list._id\r\n                                      )\r\n                                    ) {\r\n                                      const updated = logModal.checkedItems.filter(\r\n                                        id => id !== list._id\r\n                                      );\r\n                                      const names = logModal.checkedNames.filter(\r\n                                        name => name !== list.item\r\n                                      );\r\n\r\n                                      setLogModal({\r\n                                        ...logModal,\r\n                                        checkedItems: updated,\r\n                                        checkedNames: names\r\n                                      });\r\n                                    } else if (\r\n                                      logModal.checkedItems.length >= 1 &&\r\n                                      logModal.checkedItems.find(\r\n                                        e => e === list._id\r\n                                      )\r\n                                    ) {\r\n                                      const updated = [\r\n                                        ...logModal.checkedItems\r\n                                      ];\r\n                                      const names = [...logModal.checkedNames];\r\n\r\n                                      updated.push(list._id);\r\n                                      names.push(list.item);\r\n                                      setLogModal({\r\n                                        ...logModal,\r\n                                        checkedItems: updated,\r\n                                        checkedNames: names\r\n                                      });\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <i className='fas fa-times-circle'></i>{' '}\r\n                                  <strong>{list.item}</strong>\r\n                                </ListGroupItem>\r\n                              ) : (\r\n                                <ListGroupItem\r\n                                  className='bg-red'\r\n                                  onClick={() => {\r\n                                    if (\r\n                                      logModal.checkedItems === undefined ||\r\n                                      logModal.checkedItems.length === 0\r\n                                    ) {\r\n                                      setLogModal({\r\n                                        ...logModal,\r\n                                        checkedItems: [list._id],\r\n                                        checkedNames: [list.item]\r\n                                      });\r\n                                    } else if (\r\n                                      logModal.checkedItems.length >= 1\r\n                                    ) {\r\n                                      const updated = [\r\n                                        ...logModal.checkedItems\r\n                                      ];\r\n                                      const names = [...logModal.checkedNames];\r\n\r\n                                      updated.push(list._id);\r\n                                      names.push(list.item);\r\n                                      setLogModal({\r\n                                        ...logModal,\r\n                                        checkedItems: updated,\r\n                                        checkedNames: names\r\n                                      });\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <i className='fas fa-times-circle'></i>{' '}\r\n                                  <strong>{list.item}</strong>\r\n                                </ListGroupItem>\r\n                              )}\r\n                            </Fragment>\r\n                          ))}\r\n                        </ListGroup>\r\n                      </Fragment>\r\n                    )}\r\n\r\n                    <br />\r\n                    <div className='text-center'>\r\n                      <Button\r\n                        className='btn-icon mgn-btm-10'\r\n                        color='info'\r\n                        block\r\n                        onClick={() => setShowEquipmentList(!showEquipmentList)}\r\n                      >\r\n                        <span className='btn-inner--icon'>\r\n                          <i className='fas fa-swimming-pool'></i>\r\n                        </span>\r\n                        <span className='btn-inner--text'>View Equipment</span>\r\n                      </Button>\r\n                      <hr />\r\n                      <Button\r\n                        className='btn-icon mgn-btm-10'\r\n                        color='warning'\r\n                        block\r\n                        onClick={() => setShowUnableService(!showUnableService)}\r\n                      >\r\n                        <span className='btn-inner--icon'>\r\n                          <i className='fas fa-times'></i>\r\n                        </span>\r\n                        <span className='btn-inner--text'>\r\n                          Unable to Service\r\n                        </span>\r\n                      </Button>\r\n                      {showUnableService && (\r\n                        <Fragment>\r\n                          <Label className='form-control-label'>\r\n                            Reason Unable To Service (May Be Sent to Customer):\r\n                          </Label>\r\n                          <Input\r\n                            type='textarea'\r\n                            onChange={e => onUnableChange(e)}\r\n                          />\r\n                          <br />\r\n                          <Button\r\n                            className='btn-icon'\r\n                            color='default'\r\n                            block\r\n                            onClick={submitUnableService}\r\n                          >\r\n                            <span className='btn-inner--icon'>\r\n                              <i className='fas fa-exclamation-circle'></i>\r\n                            </span>\r\n                            {unableProcessing ? (\r\n                              <span className='btn-inner--text'>\r\n                                <SpinnerCircular\r\n                                  size={24}\r\n                                  thickness={180}\r\n                                  speed={100}\r\n                                  color='rgba(57, 125, 172, 1)'\r\n                                  secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                                />\r\n                                Processing...\r\n                              </span>\r\n                            ) : (\r\n                              <span className='btn-inner--text'>\r\n                                Mark Unable To Service\r\n                              </span>\r\n                            )}\r\n                          </Button>\r\n                          <br />\r\n                        </Fragment>\r\n                      )}\r\n\r\n                      {logModal.customerChecklist &&\r\n                      logModal.customerChecklist.length >= 1 ? (\r\n                        <Fragment>\r\n                          {logModal.checkedItems === undefined ||\r\n                          logModal.checkedItems.length === 0 ? (\r\n                            <Fragment>\r\n                              <Button\r\n                                className='btn-icon mgn-btm-10'\r\n                                color='primary'\r\n                                block\r\n                                disabled\r\n                                onClick={() => {\r\n                                  setLogModal({\r\n                                    ...logModal,\r\n                                    isServiceInfoOpen: false,\r\n                                    isOpen: true\r\n                                  });\r\n                                }}\r\n                              >\r\n                                <span className='btn-inner--icon'>\r\n                                  <i className='ni ni-check-bold'></i>\r\n                                </span>\r\n                                <span className='btn-inner--text'>\r\n                                  Log Service\r\n                                </span>\r\n                              </Button>\r\n                              {logModal.customerChecklist &&\r\n                                logModal.customerChecklist.length >= 1 && (\r\n                                  <p>\r\n                                    Must have completed at least one item from\r\n                                    service checklist\r\n                                  </p>\r\n                                )}\r\n                            </Fragment>\r\n                          ) : (\r\n                            <Button\r\n                              className='btn-icon mgn-btm-10'\r\n                              color='primary'\r\n                              block\r\n                              onClick={() => {\r\n                                setLogModal({\r\n                                  ...logModal,\r\n                                  isServiceInfoOpen: false,\r\n                                  isOpen: true\r\n                                });\r\n                              }}\r\n                            >\r\n                              <span className='btn-inner--icon'>\r\n                                <i className='ni ni-check-bold'></i>\r\n                              </span>\r\n                              <span className='btn-inner--text'>\r\n                                Log Service\r\n                              </span>\r\n                            </Button>\r\n                          )}\r\n                        </Fragment>\r\n                      ) : (\r\n                        <Button\r\n                          className='btn-icon mgn-btm-10'\r\n                          color='primary'\r\n                          block\r\n                          onClick={() => {\r\n                            setLogModal({\r\n                              ...logModal,\r\n                              isServiceInfoOpen: false,\r\n                              isOpen: true\r\n                            });\r\n                          }}\r\n                        >\r\n                          <span className='btn-inner--icon'>\r\n                            <i className='ni ni-check-bold'></i>\r\n                          </span>\r\n                          <span className='btn-inner--text'>Log Service</span>\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </ModalBody>\r\n                )}\r\n              </Modal>\r\n\r\n              <Modal\r\n                isOpen={logModal.isOpen}\r\n                toggle={() => {\r\n                  setLogModal({\r\n                    isOpen: false,\r\n                    active: null,\r\n                    activeName: null\r\n                  });\r\n                  setShowChems(false);\r\n                  setNotesView(false);\r\n                }}\r\n              >\r\n                <ModalHeader\r\n                  toggle={() => {\r\n                    setLogModal({\r\n                      isOpen: false,\r\n                      active: null,\r\n                      activeName: null\r\n                    });\r\n                    setShowChems(false);\r\n                    setNotesView(false);\r\n                  }}\r\n                >\r\n                  Log Service for: {logModal.activeName}\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                  <Formik\r\n                    initialValues={{\r\n                      totalChlorine: '',\r\n                      freeChlorine: '',\r\n                      pHlevel: '',\r\n                      alkalinity: '',\r\n                      conditionerLevel: '',\r\n                      hardness: '',\r\n                      phosphateLevel: '',\r\n                      saltLevel: '',\r\n                      chlorineTablets: '',\r\n                      liquidChlorine: '',\r\n                      liquidAcid: '',\r\n                      triChlor: '',\r\n                      diChlor: '',\r\n                      calHypo: '',\r\n                      potassiumMono: '',\r\n                      ammonia: '',\r\n                      copperBased: '',\r\n                      polyQuat: '',\r\n                      copperBlend: '',\r\n                      sodaAsh: '',\r\n                      CalciumChloride: '',\r\n                      conditioner: '',\r\n                      sodiumBicar: '',\r\n                      diatomaceous: '',\r\n                      diatomaceousAlt: '',\r\n                      sodiumBro: '',\r\n                      dryAcid: '',\r\n                      clarifier: '',\r\n                      phosphateRemover: '',\r\n                      salt: '',\r\n                      enzymes: '',\r\n                      metalSequester: '',\r\n                      bromineGran: '',\r\n                      bromineTab: '',\r\n                      poolFlocc: '',\r\n                      borate: '',\r\n                      privateNote: '',\r\n                      publicNote: '',\r\n                      repairOrder: false,\r\n                      repairType:\r\n                        'Repair Request (Submit a Order for Future Repair)',\r\n                      repairNotify: false,\r\n                      repairDescription: '',\r\n                      repairOfficeNote: ''\r\n                    }}\r\n                    onSubmit={async data => {\r\n                      setIsProcessing(true);\r\n\r\n                      const log = await addServiceLog(\r\n                        logModal.active,\r\n                        logModal.checkedNames,\r\n                        logPictureState.pictures,\r\n\r\n                        data\r\n                      );\r\n                      await uploadImages(log);\r\n\r\n                      await sendServiceReport(logModal.active, log._id);\r\n\r\n                      await getEmployeeRoute(\r\n                        user._id,\r\n                        moment(new Date()).format('dddd')\r\n                      );\r\n                      setLogModal({\r\n                        isOpen: false,\r\n                        active: null,\r\n                        activeName: null,\r\n                        isServiceInfoOpen: false\r\n                      });\r\n\r\n                      setShowChems(false);\r\n                      setShowRepair(false);\r\n                      setNotesView(false);\r\n                      setShockOpen(false);\r\n                      setAlgacidesOpen(false);\r\n                      setOtherChemsOpen(false);\r\n\r\n                      setIsProcessing(false);\r\n                    }}\r\n                    render={({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      values,\r\n                      setFieldValue,\r\n                      errors,\r\n                      touched\r\n                    }) => (\r\n                      <Fragment>\r\n                        <Form>\r\n                          {!showChems && !notesView ? (\r\n                            <Fragment>\r\n                              <div className='text-center'>\r\n                                <h4>Readings:</h4>\r\n                              </div>\r\n                              <FormGroup>\r\n                                <Label className='form-control-label'>\r\n                                  Total Chlorine\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='totalChlorine'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>0</option>\r\n                                  <option>0.5</option>\r\n                                  <option>1</option>\r\n                                  <option>2</option>\r\n                                  <option>3</option>\r\n                                  <option>4</option>\r\n                                  <option>5</option>\r\n                                  <option>6</option>\r\n                                  <option>7</option>\r\n                                  <option>8</option>\r\n                                  <option>9</option>\r\n                                  <option>10</option>\r\n                                  <option>15</option>\r\n                                  <option>20</option>\r\n                                  <option>30</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label className='form-control-label'>\r\n                                  Free Chlorine\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='freeChlorine'\r\n                                  value={values.freeChlorine}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>0</option>\r\n                                  <option>0.5</option>\r\n                                  <option>1</option>\r\n                                  <option>2</option>\r\n                                  <option>3</option>\r\n                                  <option>4</option>\r\n                                  <option>5</option>\r\n                                  <option>6</option>\r\n                                  <option>7</option>\r\n                                  <option>8</option>\r\n                                  <option>9</option>\r\n                                  <option>10</option>\r\n                                  <option>15</option>\r\n                                  <option>20</option>\r\n                                  <option>30</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label className='form-control-label'>\r\n                                  PH Level\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='pHlevel'\r\n                                  value={values.pHlevel}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>6.2</option>\r\n                                  <option>6.8</option>\r\n                                  <option>7.0</option>\r\n                                  <option>7.4</option>\r\n                                  <option>7.6</option>\r\n                                  <option>7.8</option>\r\n                                  <option>8.0</option>\r\n                                  <option>8.4+</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label className='form-control-label'>\r\n                                  Alkalinity Level\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='alkalinity'\r\n                                  value={values.alkalinity}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>0</option>\r\n                                  <option>10</option>\r\n                                  <option>20</option>\r\n                                  <option>30</option>\r\n                                  <option>40</option>\r\n                                  <option>50</option>\r\n                                  <option>60</option>\r\n                                  <option>70</option>\r\n                                  <option>80</option>\r\n                                  <option>90</option>\r\n                                  <option>100</option>\r\n                                  <option>110</option>\r\n                                  <option>120</option>\r\n                                  <option>130</option>\r\n                                  <option>140</option>\r\n                                  <option>150</option>\r\n                                  <option>160</option>\r\n                                  <option>170</option>\r\n                                  <option>180</option>\r\n                                  <option>190</option>\r\n                                  <option>200</option>\r\n                                  <option>210</option>\r\n                                  <option>220</option>\r\n                                  <option>230</option>\r\n                                  <option>240</option>\r\n                                  <option>250</option>\r\n                                  <option>300</option>\r\n                                  <option>350</option>\r\n                                  <option>400</option>\r\n                                  <option>500</option>\r\n                                  <option>600</option>\r\n                                  <option>700</option>\r\n                                  <option>800</option>\r\n                                  <option>900</option>\r\n                                  <option>1000</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label className='form-control-label'>\r\n                                  Conditioner Level\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='conditionerLevel'\r\n                                  value={values.conditionerLevel}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>N/A</option>\r\n                                  <option>0</option>\r\n                                  <option>30</option>\r\n                                  <option>40</option>\r\n                                  <option>50</option>\r\n                                  <option>60</option>\r\n                                  <option>70</option>\r\n                                  <option>80</option>\r\n                                  <option>90</option>\r\n                                  <option>100</option>\r\n                                  <option>110</option>\r\n                                  <option>120</option>\r\n                                  <option>130</option>\r\n                                  <option>140</option>\r\n                                  <option>150</option>\r\n                                  <option>175</option>\r\n                                  <option>200</option>\r\n                                  <option>225+</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label className='form-control-label'>\r\n                                  Hardness Level\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='hardness'\r\n                                  value={values.hardness}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>N/A</option>\r\n                                  <option>0</option>\r\n                                  <option>10</option>\r\n                                  <option>15</option>\r\n                                  <option>20</option>\r\n                                  <option>25</option>\r\n                                  <option>30</option>\r\n                                  <option>40</option>\r\n                                  <option>50</option>\r\n                                  <option>60</option>\r\n                                  <option>70</option>\r\n                                  <option>180</option>\r\n                                  <option>90</option>\r\n                                  <option>100</option>\r\n                                  <option>110</option>\r\n                                  <option>125</option>\r\n                                  <option>150</option>\r\n                                  <option>175</option>\r\n                                  <option>200</option>\r\n                                  <option>250</option>\r\n                                  <option>300</option>\r\n                                  <option>350</option>\r\n                                  <option>400</option>\r\n                                  <option>500</option>\r\n                                  <option>600</option>\r\n                                  <option>700</option>\r\n                                  <option>800</option>\r\n                                  <option>900</option>\r\n                                  <option>1000</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label className='form-control-label'>\r\n                                  Phosphate Level\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='phosphateLevel'\r\n                                  value={values.phosphateLevel}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>N/A</option>\r\n                                  <option>0</option>\r\n                                  <option>125</option>\r\n                                  <option>250</option>\r\n                                  <option>500</option>\r\n                                  <option>700</option>\r\n                                  <option>1000+</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup>\r\n                                <Label className='form-control-label'>\r\n                                  Salt Level\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='saltLevel'\r\n                                  value={values.saltLevel}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>N/A</option>\r\n                                  <option>0</option>\r\n                                  <option>100</option>\r\n                                  <option>150</option>\r\n                                  <option>200</option>\r\n                                  <option>250</option>\r\n                                  <option>300</option>\r\n                                  <option>350</option>\r\n                                  <option>400</option>\r\n                                  <option>450</option>\r\n                                  <option>500</option>\r\n                                  <option>550</option>\r\n                                  <option>600</option>\r\n                                  <option>650</option>\r\n                                  <option>700</option>\r\n                                  <option>750</option>\r\n                                  <option>800</option>\r\n                                  <option>850</option>\r\n                                  <option>900</option>\r\n                                  <option>1000</option>\r\n                                  <option>1100</option>\r\n                                  <option>1150</option>\r\n                                  <option>1200</option>\r\n                                  <option>1250</option>\r\n                                  <option>1300</option>\r\n                                  <option>1350</option>\r\n                                  <option>1400</option>\r\n                                  <option>1450</option>\r\n                                  <option>1500</option>\r\n                                  <option>1550</option>\r\n                                  <option>1600</option>\r\n                                  <option>1650</option>\r\n                                  <option>1700</option>\r\n                                  <option>1750</option>\r\n                                  <option>1800</option>\r\n                                  <option>1850</option>\r\n                                  <option>1900</option>\r\n                                  <option>1950</option>\r\n                                  <option>2000</option>\r\n                                  <option>2050</option>\r\n                                  <option>2100</option>\r\n                                  <option>2150</option>\r\n                                  <option>2200</option>\r\n                                  <option>2250</option>\r\n                                  <option>2300</option>\r\n                                  <option>2350</option>\r\n                                  <option>2400</option>\r\n                                  <option>2450</option>\r\n                                  <option>2500</option>\r\n                                  <option>2550</option>\r\n                                  <option>2600</option>\r\n                                  <option>2650</option>\r\n                                  <option>2700</option>\r\n                                  <option>2750</option>\r\n                                  <option>2800</option>\r\n                                  <option>2850</option>\r\n                                  <option>2900</option>\r\n                                  <option>2950</option>\r\n                                  <option>3000</option>\r\n                                  <option>3050</option>\r\n                                  <option>3100</option>\r\n                                  <option>3150</option>\r\n                                  <option>3200</option>\r\n                                  <option>3250</option>\r\n                                  <option>3300</option>\r\n                                  <option>3350</option>\r\n                                  <option>3400</option>\r\n                                  <option>3450</option>\r\n                                  <option>3500</option>\r\n                                  <option>3550</option>\r\n                                  <option>3600</option>\r\n                                  <option>3650</option>\r\n                                  <option>3700</option>\r\n                                  <option>3750</option>\r\n                                  <option>3800</option>\r\n                                  <option>3850</option>\r\n                                  <option>3900</option>\r\n                                  <option>3950</option>\r\n                                  <option>4000</option>\r\n                                  <option>4050</option>\r\n                                  <option>4100</option>\r\n                                  <option>4200</option>\r\n                                  <option>4300</option>\r\n                                  <option>4350</option>\r\n                                  <option>4400</option>\r\n                                  <option>4450</option>\r\n                                  <option>4500</option>\r\n                                  <option>4550</option>\r\n                                  <option>4600</option>\r\n                                  <option>4600</option>\r\n                                  <option>4700</option>\r\n                                  <option>4750</option>\r\n                                  <option>4800</option>\r\n                                  <option>4850</option>\r\n                                  <option>4900</option>\r\n                                  <option>4950</option>\r\n                                  <option>5000</option>\r\n                                  <option>5050</option>\r\n                                  <option>5100</option>\r\n                                  <option>5150</option>\r\n                                  <option>5200</option>\r\n                                  <option>5250</option>\r\n                                  <option>5300</option>\r\n                                  <option>5350</option>\r\n                                  <option>5400</option>\r\n                                  <option>5450</option>\r\n                                  <option>5500</option>\r\n                                  <option>5550</option>\r\n                                  <option>5600</option>\r\n                                  <option>5650</option>\r\n                                  <option>5700</option>\r\n                                  <option>5750</option>\r\n                                  <option>5800</option>\r\n                                  <option>5850</option>\r\n                                  <option>5900</option>\r\n                                  <option>5950</option>\r\n                                  <option>6000</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n                            </Fragment>\r\n                          ) : (\r\n                            showChems &&\r\n                            !notesView && (\r\n                              <Fragment>\r\n                                <div className='text-center'>\r\n                                  <h4>Chemical Usage:</h4>\r\n                                </div>\r\n                                <FormGroup>\r\n                                  <Label className='form-control-label'>\r\n                                    Chlorine Tablets\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='select'\r\n                                    name='chlorineTablets'\r\n                                    value={values.chlorineTablets}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  >\r\n                                    <option>No Tabs Used</option>\r\n                                    <option className='option-heading' disabled>\r\n                                      3 Inch Tabs\r\n                                    </option>\r\n                                    <option>1 Tab</option>\r\n                                    <option>2 Tabs</option>\r\n                                    <option>3 Tabs</option>\r\n                                    <option>4 Tabs</option>\r\n                                    <option>5 Tabs</option>\r\n                                    <option>6 Tabs</option>\r\n                                    <option>7 Tabs</option>\r\n                                    <option>8 Tabs</option>\r\n                                    <option>9 Tabs</option>\r\n                                    <option>10 Tabs</option>\r\n                                    <option>15 Tabs</option>\r\n                                    <option className='option-heading' disabled>\r\n                                      1 Inch Tabs\r\n                                    </option>\r\n                                    <option>1 Tab</option>\r\n                                    <option>2 Tabs</option>\r\n                                    <option>3 Tabs</option>\r\n                                    <option>4 Tabs</option>\r\n                                    <option>5 Tabs</option>\r\n                                    <option>6 Tabs</option>\r\n                                    <option>7 Tabs</option>\r\n                                    <option>8 Tabs</option>\r\n                                    <option>9 Tabs</option>\r\n                                    <option>10 Tabs</option>\r\n                                    <option>15 Tabs</option>\r\n                                  </Input>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                  <Label className='form-control-label'>\r\n                                    Liquid Chlorine\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='select'\r\n                                    name='liquidChlorine'\r\n                                    value={values.liquidChlorine}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  >\r\n                                    <option>No Liquid Chlorine Used</option>\r\n                                    <option>1/8 Gallon</option>\r\n                                    <option>1/4 Gallon</option>\r\n                                    <option>1/3 Gallon</option>\r\n                                    <option>1/2 Gallon</option>\r\n                                    <option>2/3 Gallon</option>\r\n                                    <option>3/4 Gallon</option>\r\n                                    <option>1 Gallon</option>\r\n                                    <option>1.5 Gallons</option>\r\n                                    <option>2 Gallons</option>\r\n                                    <option>2.5 Gallons</option>\r\n                                    <option>3 Gallons</option>\r\n                                    <option>3.5 Gallons</option>\r\n                                    <option>4 Gallon</option>\r\n                                    <option>5 Gallons</option>\r\n                                    <option>6 Gallons</option>\r\n                                    <option>7 Gallons</option>\r\n                                    <option>8 Gallons</option>\r\n                                    <option>9 Gallons</option>\r\n                                    <option>10 Gallon</option>\r\n                                    <option>11 Gallons</option>\r\n                                    <option>12 Gallons</option>\r\n                                    <option>13 Gallons</option>\r\n                                    <option>14 Gallons</option>\r\n                                    <option>15 Gallons</option>\r\n                                    <option>16 Gallon</option>\r\n                                    <option>17 Gallons</option>\r\n                                    <option>18 Gallons</option>\r\n                                    <option>19 Gallons</option>\r\n                                    <option>20 Gallons</option>\r\n                                    <option className='option-heading' disabled>\r\n                                      Smaller Doses\r\n                                    </option>\r\n                                    <option>1/8 Cup</option>\r\n                                    <option>1/4 Cup</option>\r\n                                    <option>1/3 Cup</option>\r\n                                    <option>1/2 Cup</option>\r\n                                    <option>2/3 Cup</option>\r\n                                    <option>3/4 Cup</option>\r\n                                    <option>1 Cup</option>\r\n                                    <option>1.5 Cups</option>\r\n                                    <option>2 Cups</option>\r\n                                    <option>2.5 Cups</option>\r\n                                    <option>3 Cups</option>\r\n                                    <option>3.5 Cups</option>\r\n                                    <option>4 Cups</option>\r\n                                    <option>4.5 Cups</option>\r\n                                    <option>5 Cups</option>\r\n                                    <option>6 Cups</option>\r\n                                    <option>7 Cups</option>\r\n                                    <option>8 Cups</option>\r\n                                    <option>9 Cups</option>\r\n                                    <option>10 Cups</option>\r\n                                  </Input>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                  <Label className='form-control-label'>\r\n                                    Liquid Acid\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='select'\r\n                                    name='liquidAcid'\r\n                                    value={values.liquidAcid}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  >\r\n                                    <option>No Liquid Acid Used</option>\r\n                                    <option>1/8 Gallon</option>\r\n                                    <option>1/4 Gallon</option>\r\n                                    <option>1/3 Gallon</option>\r\n                                    <option>1/2 Gallon</option>\r\n                                    <option>2/3 Gallon</option>\r\n                                    <option>3/4 Gallon</option>\r\n                                    <option>1 Gallon</option>\r\n                                    <option>1.5 Gallons</option>\r\n                                    <option>2 Gallons</option>\r\n                                    <option>2.5 Gallons</option>\r\n                                    <option>3 Gallons</option>\r\n                                    <option>3.5 Gallons</option>\r\n                                    <option>4 Gallon</option>\r\n                                    <option>5 Gallons</option>\r\n                                    <option>6 Gallons</option>\r\n                                    <option>7 Gallons</option>\r\n                                    <option>8 Gallons</option>\r\n                                    <option>9 Gallons</option>\r\n                                    <option>10 Gallon</option>\r\n                                    <option>11 Gallons</option>\r\n                                    <option>12 Gallons</option>\r\n                                    <option>13 Gallons</option>\r\n                                    <option>14 Gallons</option>\r\n                                    <option>15 Gallons</option>\r\n                                    <option>16 Gallon</option>\r\n                                    <option>17 Gallons</option>\r\n                                    <option>18 Gallons</option>\r\n                                    <option>19 Gallons</option>\r\n                                    <option>20 Gallons</option>\r\n                                    <option className='option-heading' disabled>\r\n                                      Smaller Doses\r\n                                    </option>\r\n                                    <option>1/8 Cup</option>\r\n                                    <option>1/4 Cup</option>\r\n                                    <option>1/3 Cup</option>\r\n                                    <option>1/2 Cup</option>\r\n                                    <option>2/3 Cup</option>\r\n                                    <option>3/4 Cup</option>\r\n                                    <option>1 Cup</option>\r\n                                    <option>1.5 Cups</option>\r\n                                    <option>2 Cups</option>\r\n                                    <option>2.5 Cups</option>\r\n                                    <option>3 Cups</option>\r\n                                    <option>3.5 Cups</option>\r\n                                    <option>4 Cups</option>\r\n                                    <option>4.5 Cups</option>\r\n                                    <option>5 Cups</option>\r\n                                    <option>6 Cups</option>\r\n                                    <option>7 Cups</option>\r\n                                    <option>8 Cups</option>\r\n                                    <option>9 Cups</option>\r\n                                    <option>10 Cups</option>\r\n                                    <option className='option-heading' disabled>\r\n                                      In Ounces\r\n                                    </option>\r\n                                    <option>2 Ounces</option>\r\n                                    <option>4 Ounces</option>\r\n                                    <option>6 Ounces</option>\r\n                                    <option>8 Ounces</option>\r\n                                    <option>10 Ounces</option>\r\n                                    <option>12 Ounces</option>\r\n                                    <option>14 Ounces</option>\r\n                                    <option>16 Ounces</option>\r\n                                  </Input>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                  <Button\r\n                                    className='btn-icon'\r\n                                    color='info'\r\n                                    onClick={() => {\r\n                                      if (shockOpen) {\r\n                                        setFieldValue('triChlor', '');\r\n                                        setFieldValue('diChlor', '');\r\n                                        setFieldValue('calHypo', '');\r\n                                        setFieldValue('potassiumMono', '');\r\n                                      }\r\n                                      setShockOpen(!shockOpen);\r\n                                    }}\r\n                                    block\r\n                                  >\r\n                                    {shockOpen ? (\r\n                                      <Fragment>\r\n                                        <span className='btn-inner--icon'>\r\n                                          <i className='fas fa-minus'></i>\r\n                                        </span>\r\n                                        <span className='btn-inner--text'>\r\n                                          Shock\r\n                                        </span>\r\n                                      </Fragment>\r\n                                    ) : (\r\n                                      <Fragment>\r\n                                        <span className='btn-inner--icon'>\r\n                                          <i className='fas fa-plus'></i>\r\n                                        </span>\r\n                                        <span className='btn-inner--text'>\r\n                                          Shock\r\n                                        </span>\r\n                                      </Fragment>\r\n                                    )}\r\n                                  </Button>\r\n\r\n                                  <Collapse isOpen={shockOpen}>\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        TriChlor Shock\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='triChlor'\r\n                                        value={values.triChlor}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No TriChlor Added</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n                                        <option>1/8 Scoop</option>\r\n                                        <option>1/4 Scoop</option>\r\n                                        <option>1/3 Scoop</option>\r\n                                        <option>1/2 Scoop</option>\r\n                                        <option>2/3 Scoop</option>\r\n                                        <option>3/4 Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        DiChlor Shock\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='diChlor'\r\n                                        value={values.diChlor}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No DiChlor Added</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n                                        <option>1/8 Scoop</option>\r\n                                        <option>1/4 Scoop</option>\r\n                                        <option>1/3 Scoop</option>\r\n                                        <option>1/2 Scoop</option>\r\n                                        <option>2/3 Scoop</option>\r\n                                        <option>3/4 Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        CalHypo Shock\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='calHypo'\r\n                                        value={values.calHypo}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No CalHypo Added</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n                                        <option>1/8 Scoop</option>\r\n                                        <option>1/4 Scoop</option>\r\n                                        <option>1/3 Scoop</option>\r\n                                        <option>1/2 Scoop</option>\r\n                                        <option>2/3 Scoop</option>\r\n                                        <option>3/4 Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                        <option>11 Pounds</option>\r\n                                        <option>12 Pounds</option>\r\n                                        <option>13 Pounds</option>\r\n                                        <option>14 Pounds</option>\r\n                                        <option>15 Pounds</option>\r\n                                        <option>16 Pounds</option>\r\n                                        <option>17 Pounds</option>\r\n                                        <option>18 Pounds</option>\r\n                                        <option>19 Pounds</option>\r\n                                        <option>20 Pounds</option>\r\n                                        <option>21 Pounds</option>\r\n                                        <option>22 Pounds</option>\r\n                                        <option>23 Pounds</option>\r\n                                        <option>24 Pounds</option>\r\n                                        <option>25 Pounds</option>\r\n                                        <option>26 Pounds</option>\r\n                                        <option>27 Pounds</option>\r\n                                        <option>28 Pounds</option>\r\n                                        <option>29 Pounds</option>\r\n                                        <option>30 Pounds</option>\r\n                                        <option>31 Pounds</option>\r\n                                        <option>32 Pounds</option>\r\n                                        <option>33 Pounds</option>\r\n                                        <option>34 Pounds</option>\r\n                                        <option>35 Pounds</option>\r\n                                        <option>36 Pounds</option>\r\n                                        <option>37 Pounds</option>\r\n                                        <option>38 Pounds</option>\r\n                                        <option>39 Pounds</option>\r\n                                        <option>40 Pounds</option>\r\n                                        <option>41 Pounds</option>\r\n                                        <option>42 Pounds</option>\r\n                                        <option>43 Pounds</option>\r\n                                        <option>44 Pounds</option>\r\n                                        <option>45 Pounds</option>\r\n                                        <option>46 Pounds</option>\r\n                                        <option>47 Pounds</option>\r\n                                        <option>48 Pounds</option>\r\n                                        <option>49 Pounds</option>\r\n                                        <option>50 Pounds</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Non-Chlorine Shock/Potassium\r\n                                        Monopersulfate\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='potassiumMono'\r\n                                        value={values.potassiumMono}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Potassium Monopersulfate Added\r\n                                        </option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n                                        <option>1/8 Scoop</option>\r\n                                        <option>1/4 Scoop</option>\r\n                                        <option>1/3 Scoop</option>\r\n                                        <option>1/2 Scoop</option>\r\n                                        <option>2/3 Scoop</option>\r\n                                        <option>3/4 Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                        <option>11 Pounds</option>\r\n                                        <option>12 Pounds</option>\r\n                                        <option>13 Pounds</option>\r\n                                        <option>14 Pounds</option>\r\n                                        <option>15 Pounds</option>\r\n                                        <option>16 Pounds</option>\r\n                                        <option>17 Pounds</option>\r\n                                        <option>18 Pounds</option>\r\n                                        <option>19 Pounds</option>\r\n                                        <option>20 Pounds</option>\r\n                                        <option>21 Pounds</option>\r\n                                        <option>22 Pounds</option>\r\n                                        <option>23 Pounds</option>\r\n                                        <option>24 Pounds</option>\r\n                                        <option>25 Pounds</option>\r\n                                        <option>26 Pounds</option>\r\n                                        <option>27 Pounds</option>\r\n                                        <option>28 Pounds</option>\r\n                                        <option>29 Pounds</option>\r\n                                        <option>30 Pounds</option>\r\n                                        <option>31 Pounds</option>\r\n                                        <option>32 Pounds</option>\r\n                                        <option>33 Pounds</option>\r\n                                        <option>34 Pounds</option>\r\n                                        <option>35 Pounds</option>\r\n                                        <option>36 Pounds</option>\r\n                                        <option>37 Pounds</option>\r\n                                        <option>38 Pounds</option>\r\n                                        <option>39 Pounds</option>\r\n                                        <option>40 Pounds</option>\r\n                                        <option>41 Pounds</option>\r\n                                        <option>42 Pounds</option>\r\n                                        <option>43 Pounds</option>\r\n                                        <option>44 Pounds</option>\r\n                                        <option>45 Pounds</option>\r\n                                        <option>46 Pounds</option>\r\n                                        <option>47 Pounds</option>\r\n                                        <option>48 Pounds</option>\r\n                                        <option>49 Pounds</option>\r\n                                        <option>50 Pounds</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Cups Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/8 Cup</option>\r\n                                        <option>1/4 Cup</option>\r\n                                        <option>1/3 Cup</option>\r\n                                        <option>1/2 Cup</option>\r\n                                        <option>2/3 Cup</option>\r\n                                        <option>3/4 Cup</option>\r\n                                        <option>1 Cup</option>\r\n                                        <option>1.5 Cups</option>\r\n                                        <option>2 Cups</option>\r\n                                        <option>2.5 Cups</option>\r\n                                        <option>3 Cups</option>\r\n                                        <option>3.5 Cups</option>\r\n                                        <option>4 Cups</option>\r\n                                        <option>4.5 Cups</option>\r\n                                        <option>5 Cups</option>\r\n                                        <option>6 Cups</option>\r\n                                        <option>7 Cups</option>\r\n                                        <option>8 Cups</option>\r\n                                        <option>9 Cups</option>\r\n                                        <option>10 Cups</option>\r\n                                        <option>11 Cups</option>\r\n                                        <option>12 Cups</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n                                  </Collapse>\r\n                                  <br />\r\n                                  <Button\r\n                                    className='btn-icon'\r\n                                    color='info'\r\n                                    onClick={() => {\r\n                                      if (algacidesOpen) {\r\n                                        setFieldValue('ammonia', '');\r\n                                        setFieldValue('copperBased', '');\r\n                                        setFieldValue('polyQuat', '');\r\n                                        setFieldValue('copperBlend', '');\r\n                                      }\r\n                                      setAlgacidesOpen(!algacidesOpen);\r\n                                    }}\r\n                                    block\r\n                                  >\r\n                                    {algacidesOpen ? (\r\n                                      <Fragment>\r\n                                        <span className='btn-inner--icon'>\r\n                                          <i className='fas fa-minus'></i>\r\n                                        </span>\r\n                                        <span className='btn-inner--text'>\r\n                                          Algacides\r\n                                        </span>\r\n                                      </Fragment>\r\n                                    ) : (\r\n                                      <Fragment>\r\n                                        <span className='btn-inner--icon'>\r\n                                          <i className='fas fa-plus'></i>\r\n                                        </span>\r\n                                        <span className='btn-inner--text'>\r\n                                          Algacides\r\n                                        </span>\r\n                                      </Fragment>\r\n                                    )}\r\n                                  </Button>\r\n\r\n                                  <Collapse isOpen={algacidesOpen}>\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Ammonia Based Liquid Algacide\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='ammonia'\r\n                                        value={values.ammonia}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Ammonia Algacide Added\r\n                                        </option>\r\n\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>6 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>10 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>14 Ounces</option>\r\n                                        <option>16 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>20 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>24 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>28 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>32 Ounces</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Copper Based Liquid Algacide\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='copperBased'\r\n                                        value={values.copperBased}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Copper Algacide Added\r\n                                        </option>\r\n\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>6 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>10 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>14 Ounces</option>\r\n                                        <option>16 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>20 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>24 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>28 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>32 Ounces</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        PolyQuat Based Liquid Algacide\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='polyQuat'\r\n                                        value={values.polyQuat}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No PolyQuat Algacide Added\r\n                                        </option>\r\n\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>6 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>10 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>14 Ounces</option>\r\n                                        <option>16 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>20 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>24 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>28 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>32 Ounces</option>\r\n                                        <option>48 Ounces</option>\r\n                                        <option>64 Ounces</option>\r\n                                        <option>96 Ounces</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Copper/PolyQuat Blend Liquid Algacide\r\n                                        (Aqua Pure)\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='copperBlend'\r\n                                        value={values.copperBlend}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Copper/PolyQuat Blend Algacide\r\n                                          Added\r\n                                        </option>\r\n\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>6 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>10 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>14 Ounces</option>\r\n                                        <option>16 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>20 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>24 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>28 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>32 Ounces</option>\r\n                                        <option>48 Ounces</option>\r\n                                        <option>64 Ounces</option>\r\n                                        <option>96 Ounces</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n                                  </Collapse>\r\n                                  <br />\r\n                                  <Button\r\n                                    className='btn-icon'\r\n                                    color='info'\r\n                                    onClick={() => {\r\n                                      if (otherChemsOpen) {\r\n                                        setFieldValue('sodaAsh', '');\r\n                                        setFieldValue('CalciumChloride', '');\r\n                                        setFieldValue('conditioner', '');\r\n                                        setFieldValue('sodiumBicar', '');\r\n                                        setFieldValue('diatomaceous', '');\r\n                                        setFieldValue('diatomaceousAlt', '');\r\n                                        setFieldValue('sodiumBro', '');\r\n                                        setFieldValue('dryAcid', '');\r\n                                        setFieldValue('clarifier', '');\r\n                                        setFieldValue('phosphateRemover', '');\r\n                                        setFieldValue('salt', '');\r\n                                        setFieldValue('enzymes', '');\r\n                                        setFieldValue('metalSequester', '');\r\n                                        setFieldValue('bromineGran', '');\r\n                                        setFieldValue('bromineTab', '');\r\n                                        setFieldValue('poolFlocc', '');\r\n                                        setFieldValue('borate', '');\r\n                                      }\r\n                                      setOtherChemsOpen(!otherChemsOpen);\r\n                                    }}\r\n                                    block\r\n                                  >\r\n                                    {otherChemsOpen ? (\r\n                                      <Fragment>\r\n                                        <span className='btn-inner--icon'>\r\n                                          <i className='fas fa-minus'></i>\r\n                                        </span>\r\n                                        <span className='btn-inner--text'>\r\n                                          Other Chems\r\n                                        </span>\r\n                                      </Fragment>\r\n                                    ) : (\r\n                                      <Fragment>\r\n                                        <span className='btn-inner--icon'>\r\n                                          <i className='fas fa-plus'></i>\r\n                                        </span>\r\n                                        <span className='btn-inner--text'>\r\n                                          Other Chems\r\n                                        </span>\r\n                                      </Fragment>\r\n                                    )}\r\n                                  </Button>\r\n\r\n                                  <Collapse isOpen={otherChemsOpen}>\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Soda Ash (Sodium Carbonate)\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='sodaAsh'\r\n                                        value={values.sodaAsh}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No Soda Ash Added</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/8 D.E. Scoop</option>\r\n                                        <option>1/4 D.E. Scoop</option>\r\n                                        <option>1/2 D.E. Scoop</option>\r\n                                        <option>3/4 D.E. Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Cups Measurement\r\n                                        </option>\r\n                                        <option>1/8 Cup</option>\r\n                                        <option>1/4 Cup</option>\r\n                                        <option>1/3 Cup</option>\r\n                                        <option>1/2 Cup</option>\r\n                                        <option>2/3 Cup</option>\r\n                                        <option>3/4 Cup</option>\r\n                                        <option>1 Cup</option>\r\n                                        <option>1.5 Cups</option>\r\n                                        <option>2 Cups</option>\r\n                                        <option>2.5 Cups</option>\r\n                                        <option>3 Cups</option>\r\n                                        <option>3.5 Cups</option>\r\n                                        <option>4 Cups</option>\r\n                                        <option>4.5 Cups</option>\r\n                                        <option>5 Cups</option>\r\n                                        <option>6 Cups</option>\r\n                                        <option>7 Cups</option>\r\n                                        <option>8 Cups</option>\r\n                                        <option>9 Cups</option>\r\n                                        <option>10 Cups</option>\r\n                                        <option>11 Cups</option>\r\n                                        <option>12 Cups</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Calcium Chloride (Hardness+)\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='CalciumChloride'\r\n                                        value={values.CalciumChloride}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Calcium Chloride Added\r\n                                        </option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/8 D.E. Scoop</option>\r\n                                        <option>1/4 D.E. Scoop</option>\r\n                                        <option>1/2 D.E. Scoop</option>\r\n                                        <option>3/4 D.E. Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Cups Measurement\r\n                                        </option>\r\n                                        <option>1/8 Cup</option>\r\n                                        <option>1/4 Cup</option>\r\n                                        <option>1/3 Cup</option>\r\n                                        <option>1/2 Cup</option>\r\n                                        <option>2/3 Cup</option>\r\n                                        <option>3/4 Cup</option>\r\n                                        <option>1 Cup</option>\r\n                                        <option>1.5 Cups</option>\r\n                                        <option>2 Cups</option>\r\n                                        <option>2.5 Cups</option>\r\n                                        <option>3 Cups</option>\r\n                                        <option>3.5 Cups</option>\r\n                                        <option>4 Cups</option>\r\n                                        <option>4.5 Cups</option>\r\n                                        <option>5 Cups</option>\r\n                                        <option>6 Cups</option>\r\n                                        <option>7 Cups</option>\r\n                                        <option>8 Cups</option>\r\n                                        <option>9 Cups</option>\r\n                                        <option>10 Cups</option>\r\n                                        <option>11 Cups</option>\r\n                                        <option>12 Cups</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Conditioner (Cyanuric Acid)\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='conditioner'\r\n                                        value={values.conditioner}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No Conditioner Added</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/8 D.E. Scoop</option>\r\n                                        <option>1/4 D.E. Scoop</option>\r\n                                        <option>1/2 D.E. Scoop</option>\r\n                                        <option>3/4 D.E. Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Cups Measurement\r\n                                        </option>\r\n                                        <option>1/8 Cup</option>\r\n                                        <option>1/4 Cup</option>\r\n                                        <option>1/3 Cup</option>\r\n                                        <option>1/2 Cup</option>\r\n                                        <option>2/3 Cup</option>\r\n                                        <option>3/4 Cup</option>\r\n                                        <option>1 Cup</option>\r\n                                        <option>1.5 Cups</option>\r\n                                        <option>2 Cups</option>\r\n                                        <option>2.5 Cups</option>\r\n                                        <option>3 Cups</option>\r\n                                        <option>3.5 Cups</option>\r\n                                        <option>4 Cups</option>\r\n                                        <option>4.5 Cups</option>\r\n                                        <option>5 Cups</option>\r\n                                        <option>6 Cups</option>\r\n                                        <option>7 Cups</option>\r\n                                        <option>8 Cups</option>\r\n                                        <option>9 Cups</option>\r\n                                        <option>10 Cups</option>\r\n                                        <option>11 Cups</option>\r\n                                        <option>12 Cups</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Sodium Bicarbonate (baking soda)\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='sodiumBicar'\r\n                                        value={values.sodiumBicar}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Sodium Bicarbonate Added\r\n                                        </option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/8 D.E. Scoop</option>\r\n                                        <option>1/4 D.E. Scoop</option>\r\n                                        <option>1/2 D.E. Scoop</option>\r\n                                        <option>3/4 D.E. Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Cups Measurement\r\n                                        </option>\r\n                                        <option>1/8 Cup</option>\r\n                                        <option>1/4 Cup</option>\r\n                                        <option>1/3 Cup</option>\r\n                                        <option>1/2 Cup</option>\r\n                                        <option>2/3 Cup</option>\r\n                                        <option>3/4 Cup</option>\r\n                                        <option>1 Cup</option>\r\n                                        <option>1.5 Cups</option>\r\n                                        <option>2 Cups</option>\r\n                                        <option>2.5 Cups</option>\r\n                                        <option>3 Cups</option>\r\n                                        <option>3.5 Cups</option>\r\n                                        <option>4 Cups</option>\r\n                                        <option>4.5 Cups</option>\r\n                                        <option>5 Cups</option>\r\n                                        <option>6 Cups</option>\r\n                                        <option>7 Cups</option>\r\n                                        <option>8 Cups</option>\r\n                                        <option>9 Cups</option>\r\n                                        <option>10 Cups</option>\r\n                                        <option>11 Cups</option>\r\n                                        <option>12 Cups</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Diatomaceous Earth\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='diatomaceous'\r\n                                        value={values.diatomaceous}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Diatomaceous Earth Added\r\n                                        </option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/8 D.E. Scoop</option>\r\n                                        <option>1/4 D.E. Scoop</option>\r\n                                        <option>1/2 D.E. Scoop</option>\r\n                                        <option>3/4 D.E. Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Diatomaceous Earth Alternative (Aqua\r\n                                        Perl, FiberClear etc)\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='diatomaceousAlt'\r\n                                        value={values.diatomaceousAlt}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Diatomaceous Earth Alternative\r\n                                          Added\r\n                                        </option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/8 D.E. Scoop</option>\r\n                                        <option>1/4 D.E. Scoop</option>\r\n                                        <option>1/2 D.E. Scoop</option>\r\n                                        <option>3/4 D.E. Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Sodium Bromide\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='sodiumBro'\r\n                                        value={values.sodiumBro}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No Sodium Bromide Added</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/8 D.E. Scoop</option>\r\n                                        <option>1/4 D.E. Scoop</option>\r\n                                        <option>1/2 D.E. Scoop</option>\r\n                                        <option>3/4 D.E. Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Dry Acid\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='dryAcid'\r\n                                        value={values.dryAcid}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No Dry Acid Added</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/8 D.E. Scoop</option>\r\n                                        <option>1/4 D.E. Scoop</option>\r\n                                        <option>1/2 D.E. Scoop</option>\r\n                                        <option>3/4 D.E. Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Clarifier\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='clarifier'\r\n                                        value={values.clarifier}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No Clarifier Added</option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>6 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>10 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>14 Ounces</option>\r\n                                        <option>16 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>20 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>24 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>28 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>32 Ounces</option>\r\n                                        <option>48 Ounces</option>\r\n                                        <option>64 Ounces</option>\r\n                                        <option>96 Ounces</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Phosphate Remover\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='phosphateRemover'\r\n                                        value={values.phosphateRemover}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Phosphate Remover Added\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>6 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>10 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>14 Ounces</option>\r\n                                        <option>16 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>20 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>24 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>28 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>32 Ounces</option>\r\n                                        <option>48 Ounces</option>\r\n                                        <option>64 Ounces</option>\r\n                                        <option>96 Ounces</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Salt\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='salt'\r\n                                        value={values.salt}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No Salt Added</option>\r\n                                        <option>1 bag of Salt</option>\r\n                                        <option>2 bags of Salt</option>\r\n                                        <option>3 bags of Salt</option>\r\n                                        <option>4 bags of Salt</option>\r\n                                        <option>5 bags of Salt</option>\r\n                                        <option>6 bags of Salt</option>\r\n                                        <option>7 bags of Salt</option>\r\n                                        <option>8 bags of Salt</option>\r\n                                        <option>9 bags of Salt</option>\r\n                                        <option>10 bags of Salt</option>\r\n                                        <option>11 bags of Salt</option>\r\n                                        <option>12 bags of Salt</option>\r\n                                        <option>13 bags of Salt</option>\r\n                                        <option>14 bags of Salt</option>\r\n                                        <option>15 bags of Salt</option>\r\n                                        <option>16 bags of Salt</option>\r\n                                        <option>17 bags of Salt</option>\r\n                                        <option>18 bags of Salt</option>\r\n                                        <option>19 bags of Salt</option>\r\n                                        <option>20 bags of Salt</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Pool Enzymes (Pool Perfect, Pool Zyme\r\n                                        etc)\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='enzymes'\r\n                                        value={values.enzymes}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No Pool Enzymes Added</option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>6 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>10 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>14 Ounces</option>\r\n                                        <option>16 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>20 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>24 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>28 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>32 Ounces</option>\r\n                                        <option>48 Ounces</option>\r\n                                        <option>64 Ounces</option>\r\n                                        <option>96 Ounces</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Metal Sequestering Agent\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='metalSequester'\r\n                                        value={values.metalSequester}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Sequestering Agent Added\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>6 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>10 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>14 Ounces</option>\r\n                                        <option>16 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>20 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>24 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>28 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>32 Ounces</option>\r\n                                        <option>48 Ounces</option>\r\n                                        <option>64 Ounces</option>\r\n                                        <option>96 Ounces</option>\r\n                                        <option>128 Ounces</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Bromine Granular\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='bromineGran'\r\n                                        value={values.bromineGran}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Bromine Granular Added\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>6 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>10 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>14 Ounces</option>\r\n                                        <option>16 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>20 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>24 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>28 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>32 Ounces</option>\r\n                                        <option>48 Ounces</option>\r\n                                        <option>64 Ounces</option>\r\n                                        <option>96 Ounces</option>\r\n                                        <option>128 Ounces</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Bromine Tablets\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='bromineTab'\r\n                                        value={values.bromineTab}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No Bromine Tablets Used</option>\r\n                                        <option>1 Tab</option>\r\n                                        <option>2 Tabs</option>\r\n                                        <option>3 Tabs</option>\r\n                                        <option>4 Tabs</option>\r\n                                        <option>5 Tabs</option>\r\n                                        <option>6 Tabs</option>\r\n                                        <option>7 Tabs</option>\r\n                                        <option>8 Tabs</option>\r\n                                        <option>9 Tabs</option>\r\n                                        <option>10 Tabs</option>\r\n                                        <option>11 Tabs</option>\r\n                                        <option>12 Tabs</option>\r\n                                        <option>13 Tabs</option>\r\n                                        <option>14 Tabs</option>\r\n                                        <option>15 Tabs</option>\r\n                                        <option>16 Tabs</option>\r\n                                        <option>17 Tabs</option>\r\n                                        <option>18 Tabs</option>\r\n                                        <option>19 Tabs</option>\r\n                                        <option>20 Tabs</option>\r\n                                        <option>21 Tabs</option>\r\n                                        <option>22 Tabs</option>\r\n                                        <option>23 Tabs</option>\r\n                                        <option>24 Tabs</option>\r\n                                        <option>25 Tabs</option>\r\n                                        <option>26 Tabs</option>\r\n                                        <option>27 Tabs</option>\r\n                                        <option>28 Tabs</option>\r\n                                        <option>29 Tabs</option>\r\n                                        <option>30 Tabs</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Pool Flocculant\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='poolFlocc'\r\n                                        value={values.poolFlocc}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          No Pool Flocculant Added\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>6 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>10 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>14 Ounces</option>\r\n                                        <option>16 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>20 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>24 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>28 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>32 Ounces</option>\r\n                                        <option>48 Ounces</option>\r\n                                        <option>64 Ounces</option>\r\n                                        <option>96 Ounces</option>\r\n                                        <option>128 Ounces</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Borate\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='borate'\r\n                                        value={values.borate}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>No Borate Added</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          D.E. Scoop Measurement\r\n                                        </option>\r\n\r\n                                        <option>1/8 D.E. Scoop</option>\r\n                                        <option>1/4 D.E. Scoop</option>\r\n                                        <option>1/2 D.E. Scoop</option>\r\n                                        <option>3/4 D.E. Scoop</option>\r\n                                        <option>1 Full D.E. Scoop</option>\r\n                                        <option>1.5 D.E. Scoops</option>\r\n                                        <option>2 D.E. Scoops</option>\r\n                                        <option>3 D.E. Scoops</option>\r\n                                        <option>4 D.E. Scoops</option>\r\n                                        <option>5 D.E. Scoops</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Ounces Measurement\r\n                                        </option>\r\n                                        <option>2 Ounces</option>\r\n                                        <option>4 Ounces</option>\r\n                                        <option>8 Ounces</option>\r\n                                        <option>12 Ounces</option>\r\n                                        <option>18 Ounces</option>\r\n                                        <option>22 Ounces</option>\r\n                                        <option>26 Ounces</option>\r\n                                        <option>30 Ounces</option>\r\n                                        <option>36 Ounces</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Pounds Measurement\r\n                                        </option>\r\n                                        <option>1/2 Pound</option>\r\n                                        <option>1 Pound</option>\r\n                                        <option>1.5 Pounds</option>\r\n                                        <option>2 Pounds</option>\r\n                                        <option>2.5 Pounds</option>\r\n                                        <option>3 Pounds</option>\r\n                                        <option>3.5 Pounds</option>\r\n                                        <option>4 Pounds</option>\r\n                                        <option>4.5 Pounds</option>\r\n                                        <option>5 Pounds</option>\r\n                                        <option>6 Pounds</option>\r\n                                        <option>7 Pounds</option>\r\n                                        <option>8 Pounds</option>\r\n                                        <option>9 Pounds</option>\r\n                                        <option>10 Pounds</option>\r\n                                        <option>11 Pounds</option>\r\n                                        <option>12 Pounds</option>\r\n                                        <option>13 Pounds</option>\r\n                                        <option>14 Pounds</option>\r\n                                        <option>15 Pounds</option>\r\n                                        <option>16 Pounds</option>\r\n                                        <option>17 Pounds</option>\r\n                                        <option>18 Pounds</option>\r\n                                        <option>19 Pounds</option>\r\n                                        <option>20 Pounds</option>\r\n                                        <option>21 Pounds</option>\r\n                                        <option>22 Pounds</option>\r\n                                        <option>23 Pounds</option>\r\n                                        <option>24 Pounds</option>\r\n                                        <option>25 Pounds</option>\r\n                                        <option>26 Pounds</option>\r\n                                        <option>27 Pounds</option>\r\n                                        <option>28 Pounds</option>\r\n                                        <option>29 Pounds</option>\r\n                                        <option>30 Pounds</option>\r\n                                        <option>31 Pounds</option>\r\n                                        <option>32 Pounds</option>\r\n                                        <option>33 Pounds</option>\r\n                                        <option>34 Pounds</option>\r\n                                        <option>35 Pounds</option>\r\n                                        <option>36 Pounds</option>\r\n                                        <option>37 Pounds</option>\r\n                                        <option>38 Pounds</option>\r\n                                        <option>39 Pounds</option>\r\n                                        <option>40 Pounds</option>\r\n                                        <option>41 Pounds</option>\r\n                                        <option>42 Pounds</option>\r\n                                        <option>43 Pounds</option>\r\n                                        <option>44 Pounds</option>\r\n                                        <option>45 Pounds</option>\r\n                                        <option>46 Pounds</option>\r\n                                        <option>47 Pounds</option>\r\n                                        <option>48 Pounds</option>\r\n                                        <option>49 Pounds</option>\r\n                                        <option>50 Pounds</option>\r\n                                        <option\r\n                                          className='option-heading'\r\n                                          disabled\r\n                                        >\r\n                                          Cups Measurement\r\n                                        </option>\r\n                                        <option>1/8 Cup</option>\r\n                                        <option>1/4 Cup</option>\r\n                                        <option>1/3 Cup</option>\r\n                                        <option>1/2 Cup</option>\r\n                                        <option>2/3 Cup</option>\r\n                                        <option>3/4 Cup</option>\r\n                                        <option>1 Cup</option>\r\n                                        <option>1.5 Cups</option>\r\n                                        <option>2 Cups</option>\r\n                                        <option>2.5 Cups</option>\r\n                                        <option>3 Cups</option>\r\n                                        <option>3.5 Cups</option>\r\n                                        <option>4 Cups</option>\r\n                                        <option>4.5 Cups</option>\r\n                                        <option>5 Cups</option>\r\n                                        <option>6 Cups</option>\r\n                                        <option>7 Cups</option>\r\n                                        <option>8 Cups</option>\r\n                                        <option>9 Cups</option>\r\n                                        <option>10 Cups</option>\r\n                                        <option>11 Cups</option>\r\n                                        <option>12 Cups</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n                                  </Collapse>\r\n                                </FormGroup>\r\n                              </Fragment>\r\n                            )\r\n                          )}\r\n\r\n                          <Fragment>\r\n                            {notesView && !showChems && (\r\n                              <Fragment>\r\n                                <FormGroup>\r\n                                  <Label className='form-control-label'>\r\n                                    Log Images (Emailed to Customer)\r\n                                  </Label>\r\n                                  <ImageUploader\r\n                                    withIcon={true}\r\n                                    buttonText='Choose images'\r\n                                    onChange={onDrop}\r\n                                    imgExtension={[\r\n                                      '.jpg',\r\n                                      '.gif',\r\n                                      '.png',\r\n                                      '.gif'\r\n                                    ]}\r\n                                    maxFileSize={5242880}\r\n                                    withPreview={true}\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                  <Label className='form-control-label'>\r\n                                    Private Notes (Only Visible to Company)\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='textarea'\r\n                                    name='privateNote'\r\n                                    onChange={handleChange}\r\n                                    value={values.privateNote}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                  <Label className='form-control-label'>\r\n                                    Note To Customer (Emailed to Customer)\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='select'\r\n                                    name='publicNote'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  >\r\n                                    <option disabled selected>\r\n                                      Click Here to Select Quick Note\r\n                                    </option>\r\n                                    <option>\r\n                                      Please add water to your pool immediately.\r\n                                    </option>\r\n                                    <option>\r\n                                      Unable to service the pool due to the gate\r\n                                      being locked.\r\n                                    </option>\r\n                                    <option>\r\n                                      Unable to service the pool due to the gate\r\n                                      being locked.\r\n                                    </option>\r\n                                    <option>\r\n                                      Repairs needed, we were unable to service\r\n                                      the pool due to repairs being needed.\r\n                                    </option>\r\n                                    <option>\r\n                                      Your pool was shocked, no swimming for at\r\n                                      least 24 hours.\r\n                                    </option>\r\n                                    <option>No swimming for 30 minutes.</option>\r\n                                    <option>No swimming for 1 hour.</option>\r\n                                    <option>No swimming for 2 hours.</option>\r\n                                    <option>No swimming for 3 hours.</option>\r\n                                    <option>No swimming for 4 hours.</option>\r\n                                    <option>No swimming for 5 hours.</option>\r\n                                    <option>No swimming for 6 hours.</option>\r\n                                  </Input>\r\n                                  <br />\r\n                                  <Input\r\n                                    type='textarea'\r\n                                    name='publicNote'\r\n                                    onChange={handleChange}\r\n                                    value={values.publicNote}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                </FormGroup>\r\n\r\n                                <Button\r\n                                  color='info'\r\n                                  block\r\n                                  onClick={() => {\r\n                                    setShowRepair(!showRepair);\r\n                                    setFieldValue(\r\n                                      'repairOrder',\r\n                                      !values.repairOrder\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {!showRepair ? (\r\n                                    <span>Add</span>\r\n                                  ) : (\r\n                                    <span>Cancel</span>\r\n                                  )}{' '}\r\n                                  Repair Order\r\n                                </Button>\r\n                                <Collapse isOpen={showRepair}>\r\n                                  <Fragment>\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Repair Type\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='select'\r\n                                        name='repairType'\r\n                                        value={values.repairType}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      >\r\n                                        <option>\r\n                                          Repair Request (Submit a Order for\r\n                                          Future Repair)\r\n                                        </option>\r\n                                        <option>\r\n                                          Repair Request (Requires Part Purchase\r\n                                          / Office Approval)\r\n                                        </option>\r\n                                        <option>Repair Completed</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Notify Customer?\r\n                                      </Label>{' '}\r\n                                      <br />\r\n                                      <label className='custom-toggle'>\r\n                                        <Input\r\n                                          type='checkbox'\r\n                                          name='repairNotify'\r\n                                          value={values.repairNotify}\r\n                                          onChange={handleChange}\r\n                                          onBlur={handleBlur}\r\n                                        />\r\n                                        <span\r\n                                          className='custom-toggle-slider rounded-circle'\r\n                                          data-label-off='No'\r\n                                          data-label-on='Yes'\r\n                                        ></span>\r\n                                      </label>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Enter Description of Repair (Sent to\r\n                                        Customer if \"Notify Customer\" enabled.)\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='textarea'\r\n                                        name='repairDescription'\r\n                                        value={values.repairDescription}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                      <Label className='form-control-label'>\r\n                                        Note for Office (Company Only)\r\n                                      </Label>\r\n                                      <Input\r\n                                        type='textarea'\r\n                                        name='repairOfficeNote'\r\n                                        value={values.repairOfficeNote}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                    </FormGroup>\r\n                                    {/* <Label className='form-control-label'>\r\n                                      Add Picture(s) of Item(s) That Need Repair\r\n                                    </Label>\r\n                                    <ImageUploader\r\n                                      withIcon={true}\r\n                                      buttonText='Choose images'\r\n                                      onChange={onDropRepair}\r\n                                      imgExtension={[\r\n                                        '.jpg',\r\n                                        '.gif',\r\n                                        '.png',\r\n                                        '.gif'\r\n                                      ]}\r\n                                      maxFileSize={5242880}\r\n                                      withPreview={true}\r\n                                    /> */}\r\n                                  </Fragment>\r\n                                </Collapse>\r\n                                <br />\r\n                              </Fragment>\r\n                            )}\r\n                          </Fragment>\r\n\r\n                          <Fragment>\r\n                            {!showChems && !notesView && (\r\n                              <Button\r\n                                color='primary'\r\n                                className='btn-icon'\r\n                                block\r\n                                onClick={() => {\r\n                                  setShowChems(!showChems);\r\n                                }}\r\n                              >\r\n                                <span className='btn-inner--text'>Next</span>\r\n                                <span className='btn-inner--icon'>\r\n                                  <i className='ni ni-bold-right'></i>\r\n                                </span>\r\n                              </Button>\r\n                            )}\r\n                          </Fragment>\r\n\r\n                          <Fragment>\r\n                            {!showChems && notesView && (\r\n                              <Row>\r\n                                <Col>\r\n                                  <Button\r\n                                    color='secondary'\r\n                                    className='btn-icon'\r\n                                    block\r\n                                    onClick={() => {\r\n                                      setShowChems(!showChems);\r\n                                      setNotesView(!notesView);\r\n                                    }}\r\n                                  >\r\n                                    <span className='btn-inner--icon'>\r\n                                      <i className='ni ni-bold-left'></i>\r\n                                    </span>\r\n                                    <span className='btn-inner--text'>\r\n                                      Back\r\n                                    </span>\r\n                                  </Button>\r\n                                </Col>\r\n                                <Col>\r\n                                  <Button\r\n                                    color='success'\r\n                                    className='btn-icon'\r\n                                    block\r\n                                    type='submit'\r\n                                    onClick={handleSubmit}\r\n                                  >\r\n                                    <span className='btn-inner--icon'>\r\n                                      <i className='fas fa-check-circle'></i>\r\n                                    </span>\r\n                                    {isProcessing ? (\r\n                                      <span className='btn-inner--text'>\r\n                                        <SpinnerCircular\r\n                                          size={24}\r\n                                          thickness={180}\r\n                                          speed={100}\r\n                                          color='rgba(57, 125, 172, 1)'\r\n                                          secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                                        />\r\n                                        Processing...\r\n                                      </span>\r\n                                    ) : (\r\n                                      <span className='btn-inner--text'>\r\n                                        Complete Service\r\n                                      </span>\r\n                                    )}\r\n                                  </Button>\r\n                                </Col>\r\n                              </Row>\r\n                            )}\r\n                          </Fragment>\r\n\r\n                          <Fragment>\r\n                            {showChems && !notesView && (\r\n                              <Row>\r\n                                <Col>\r\n                                  <Button\r\n                                    color='secondary'\r\n                                    className='btn-icon'\r\n                                    block\r\n                                    onClick={() => {\r\n                                      setShowChems(!showChems);\r\n                                    }}\r\n                                  >\r\n                                    <span className='btn-inner--icon'>\r\n                                      <i className='ni ni-bold-left'></i>\r\n                                    </span>\r\n                                    <span className='btn-inner--text'>\r\n                                      Back\r\n                                    </span>\r\n                                  </Button>\r\n                                </Col>\r\n                                <Col>\r\n                                  <Button\r\n                                    color='primary'\r\n                                    className='btn-icon'\r\n                                    block\r\n                                    onClick={() => {\r\n                                      setNotesView(!notesView);\r\n                                      setShowChems(!showChems);\r\n                                    }}\r\n                                  >\r\n                                    <span className='btn-inner--text'>\r\n                                      Next\r\n                                    </span>\r\n                                    <span className='btn-inner--icon'>\r\n                                      <i className='ni ni-bold-right'></i>\r\n                                    </span>\r\n                                  </Button>\r\n                                </Col>\r\n                              </Row>\r\n                            )}\r\n                          </Fragment>\r\n                        </Form>\r\n                      </Fragment>\r\n                    )}\r\n                  />\r\n                </ModalBody>\r\n              </Modal>\r\n\r\n              <Col md='8'>\r\n                <Card className='shadow'>\r\n                  <CardHeader>\r\n                    <h3>{routeDay}'s Route</h3>\r\n                    <Progress\r\n                      animated\r\n                      value={\r\n                        (100 *\r\n                          routeList.filter(c =>\r\n                            moment(c.customer.lastServiced).isSame(\r\n                              Date.now(),\r\n                              'day'\r\n                            ) &&\r\n                            (c.customer.scheduledDay === routeDay) === 'Today'\r\n                              ? moment(new Date()).format('dddd')\r\n                              : routeDay &&\r\n                                c.customer.lastServiced !== undefined\r\n                          ).length) /\r\n                        routeList.length\r\n                      }\r\n                    />\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <ListGroup>\r\n                      {isAuthenticated && routeList && (\r\n                        <Fragment>\r\n                          {routeList.map((customer, index) => (\r\n                            <Fragment key={customer._id}>\r\n                              {(customer.customer.scheduledDay === routeDay) ===\r\n                              'Today'\r\n                                ? moment(new Date()).format('dddd')\r\n                                : routeDay && (\r\n                                    <ListGroupItem>\r\n                                      <Row>\r\n                                        <Col md='2'>\r\n                                          {moment(\r\n                                            customer.customer.lastServiced\r\n                                          ).isSame(Date.now(), 'day') &&\r\n                                          customer.customer.lastServiced !=\r\n                                            undefined ? (\r\n                                            <div className='route-box bg-green text-center'>\r\n                                              <h2>\r\n                                                <i className='fas fa-check-circle'></i>\r\n                                              </h2>\r\n                                            </div>\r\n                                          ) : (\r\n                                            <div className='route-box text-center'>\r\n                                              {customer.customer\r\n                                                .unableService !== undefined &&\r\n                                              moment(\r\n                                                customer.customer.unableService\r\n                                              ).isSame(Date.now(), 'day') ? (\r\n                                                <i className='fas fa-times-circle color-white'></i>\r\n                                              ) : (\r\n                                                <h2>{index + 1}</h2>\r\n                                              )}\r\n                                            </div>\r\n                                          )}\r\n                                        </Col>\r\n                                        <Col md='8'>\r\n                                          <div className='text-center'>\r\n                                            <h3>\r\n                                              {customer.customer.firstName}{' '}\r\n                                              {customer.customer.lastName}\r\n                                            </h3>\r\n                                            <p>\r\n                                              {customer.customer.serviceAddress}\r\n                                            </p>\r\n                                            {(moment(\r\n                                              customer.customer.lastServiced\r\n                                            ).isSame(Date.now(), 'day') &&\r\n                                              customer.customer.lastServiced !=\r\n                                                undefined) ||\r\n                                            (routeDay !== 'Today' &&\r\n                                              routeDay !==\r\n                                                moment(new Date()).format(\r\n                                                  'dddd'\r\n                                                )) ? (\r\n                                              <span></span>\r\n                                            ) : (\r\n                                              <Row>\r\n                                                {customer.customer\r\n                                                  .unableService !==\r\n                                                  undefined &&\r\n                                                moment(\r\n                                                  customer.customer\r\n                                                    .unableService\r\n                                                ).isSame(Date.now(), 'day') ? (\r\n                                                  <Fragment></Fragment>\r\n                                                ) : (\r\n                                                  <Fragment>\r\n                                                    <Col>\r\n                                                      {' '}\r\n                                                      <Button\r\n                                                        className='btn-icon mgn-btm-10'\r\n                                                        color='success'\r\n                                                        href={`https://www.google.com/maps/dir/?api=1&origin=Your+Location&destination=${customer.customer.serviceLat},${customer.customer.serviceLng}`}\r\n                                                        target='_blank'\r\n                                                      >\r\n                                                        <span className='btn-inner--icon'>\r\n                                                          <i className='fas fa-directions'></i>\r\n                                                        </span>\r\n                                                        <span className='btn-inner--text'>\r\n                                                          GPS To Stop\r\n                                                        </span>\r\n                                                      </Button>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                      {' '}\r\n                                                      <Button\r\n                                                        className='btn-icon mgn-btm-10'\r\n                                                        color='primary'\r\n                                                        onClick={() => {\r\n                                                          getChecklist(\r\n                                                            customer.customer\r\n                                                              ._id\r\n                                                          );\r\n                                                          getCustomerServiceNotes(\r\n                                                            customer.customer\r\n                                                              ._id\r\n                                                          );\r\n\r\n                                                          setLogModal({\r\n                                                            isServiceInfoOpen: true,\r\n                                                            active:\r\n                                                              customer.customer\r\n                                                                ._id,\r\n                                                            activeName:\r\n                                                              customer.customer\r\n                                                                .firstName +\r\n                                                              ' ' +\r\n                                                              customer.customer\r\n                                                                .lastName,\r\n                                                            customerLock:\r\n                                                              customer.customer\r\n                                                                .gatecode,\r\n                                                            equipment:\r\n                                                              customer.customer\r\n                                                                .poolEquipment\r\n                                                          });\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className='btn-inner--icon'>\r\n                                                          <i className='fas fa-tint'></i>\r\n                                                        </span>\r\n                                                        <span className='btn-inner--text'>\r\n                                                          Start Service\r\n                                                        </span>\r\n                                                      </Button>\r\n                                                    </Col>\r\n                                                  </Fragment>\r\n                                                )}\r\n                                              </Row>\r\n                                            )}\r\n                                          </div>\r\n                                        </Col>\r\n                                      </Row>\r\n                                    </ListGroupItem>\r\n                                  )}\r\n                            </Fragment>\r\n                          ))}\r\n                        </Fragment>\r\n                      )}\r\n                    </ListGroup>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Footer />\r\n          </Container>\r\n        )}\r\n\r\n        {isAuthenticated && !loading && user.role !== 'Technician' && (\r\n          <div className='container-fluid mt--6'>\r\n            <div className='row'>\r\n              <div className='col-xl-8'>\r\n                <Card className='bg-default shadow'>\r\n                  <CardHeader className='bg-transparent border-0'>\r\n                    <Row>\r\n                      <Col>\r\n                        <h6 className='text-light text-uppercase ls-1 mb-1'>\r\n                          Overview\r\n                        </h6>\r\n                        <h5 className='h3 text-white mb-0'>Work Orders</h5>\r\n                      </Col>\r\n                      {/* <Col>\r\n                        <ul className='nav nav-pills justify-content-end'>\r\n                          <li\r\n                            className='nav-item mr-2 mr-md-0'\r\n                            data-toggle='chart'\r\n                            data-target='#chart-sales-dark'\r\n                            data-update='{\"data\":{\"datasets\":[{\"data\":[0, 20, 10, 30, 15, 40, 20, 60, 60]}]}}'\r\n                            data-prefix='$'\r\n                            data-suffix='k'\r\n                          >\r\n                            <a\r\n                              href='#'\r\n                              className='nav-link py-2 px-3 active'\r\n                              data-toggle='tab'\r\n                            >\r\n                              <span className='d-none d-lg-block'>\r\n                                New Customers\r\n                              </span>\r\n                              <span className='d-lg-none'>N</span>\r\n                            </a>\r\n                          </li>\r\n                          <li\r\n                            className='nav-item'\r\n                            data-toggle='chart'\r\n                            data-target='#chart-sales-dark'\r\n                            data-update='{\"data\":{\"datasets\":[{\"data\":[0, 20, 5, 25, 10, 30, 15, 40, 40]}]}}'\r\n                            data-prefix='$'\r\n                            data-suffix='k'\r\n                          >\r\n                            <a\r\n                              href='#'\r\n                              className='nav-link py-2 px-3'\r\n                              data-toggle='tab'\r\n                            >\r\n                              <span className='d-none d-lg-block'>\r\n                                Current Customers\r\n                              </span>\r\n                              <span className='d-lg-none'>C</span>\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </Col> */}\r\n                    </Row>\r\n                  </CardHeader>\r\n                  <div\r\n                    className='table-responsive'\r\n                    id='list-container'\r\n                    style={{ minHeight: '399px' }}\r\n                  >\r\n                    <Table className='align-items-center table-dark table-flush'>\r\n                      <thead className='thead-dark'>\r\n                        <tr>\r\n                          <th className='sort' data-sort='date' scope='col'>\r\n                            Order Date\r\n                          </th>\r\n                          <th className='sort' data-sort='service' scope='col'>\r\n                            Service\r\n                          </th>\r\n                          <th className='sort' data-sort='rate' scope='col'>\r\n                            Rate\r\n                          </th>\r\n                          <th className='sort' data-sort='status' scope='col'>\r\n                            Status\r\n                          </th>\r\n                          <th scope='col' />\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className='list'>\r\n                        {workOrders ? (\r\n                          workOrders.slice(0, 5).map(order => (\r\n                            <tr key={order._id}>\r\n                              <th scope='row'>\r\n                                <Media className='align-items-center'>\r\n                                  <span className='date mb-0 text-sm'>\r\n                                    {moment(order.dateCreated).format(\r\n                                      'MMM Do, YYYY'\r\n                                    )}\r\n                                  </span>\r\n                                </Media>\r\n                              </th>\r\n                              <td className='service'>{order.orderType}</td>\r\n\r\n                              <td className='rate'>\r\n                                {order.rate ? (\r\n                                  <span>{order.price}</span>\r\n                                ) : (\r\n                                  <span>N/A</span>\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                <Badge color='' className='badge-dot mr-4'>\r\n                                  {order.status === 'Closed' ? (\r\n                                    <i className='bg-danger' />\r\n                                  ) : order.status === 'Approved' ? (\r\n                                    <i className='bg-info' />\r\n                                  ) : order.status === 'Completed' ? (\r\n                                    <i className='bg-success' />\r\n                                  ) : order.status === 'Approval Needed' ? (\r\n                                    <i className='bg-warning' />\r\n                                  ) : (\r\n                                    <i className='bg-danger' />\r\n                                  )}\r\n                                  <span className='status'>{order.status}</span>\r\n                                </Badge>\r\n                              </td>\r\n\r\n                              <td className='text-right'>\r\n                                <UncontrolledDropdown>\r\n                                  <DropdownToggle\r\n                                    className='btn-icon-only text-light'\r\n                                    color=''\r\n                                    role='button'\r\n                                    size='sm'\r\n                                  >\r\n                                    <i className='fas fa-ellipsis-v' />\r\n                                  </DropdownToggle>\r\n                                  <DropdownMenu\r\n                                    className='dropdown-menu-arrow'\r\n                                    right\r\n                                  >\r\n                                    <DropdownItem\r\n                                      href='#pablo'\r\n                                      onClick={e => {\r\n                                        e.preventDefault();\r\n                                        setInfoModal({\r\n                                          ...infoModal,\r\n                                          isOpen: true,\r\n                                          active: order._id,\r\n                                          order: workOrders.findIndex(\r\n                                            x => x._id === order._id\r\n                                          )\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      View\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      href='#pablo'\r\n                                      onClick={e => {\r\n                                        e.preventDefault();\r\n                                        setInfoModal({\r\n                                          ...infoModal,\r\n                                          isEditOpen: true,\r\n                                          active: order._id,\r\n                                          order: workOrders.findIndex(\r\n                                            x => x._id === order._id\r\n                                          )\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      Edit\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                        ) : (\r\n                          <Fragment>Loading...</Fragment>\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                  <Button color='primary' href='/work-orders'>\r\n                    View All\r\n                  </Button>\r\n                </Card>\r\n              </div>\r\n              <div className='col-xl-4'>\r\n                <div className='card'>\r\n                  <div className='card-header bg-transparent'>\r\n                    <div className='row align-items-center'>\r\n                      <div className='col'>\r\n                        <h6 className='text-uppercase text-muted ls-1 mb-1'>\r\n                          Performance\r\n                        </h6>\r\n                        <h5 className='h3 mb-0'>Customer Activity</h5>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='card-body'>\r\n                    {/* Chart */}\r\n                    <div className='chart'>\r\n                      <Bar\r\n                        data={chartExample2.data}\r\n                        options={chartExample2.options}\r\n                        className='chart-canvas'\r\n                        id='chart-bars'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='col-xl-12'>\r\n                <div className='card'>\r\n                  <div className='card-header'>\r\n                    <h3 className='mb-0'>Customers</h3>{' '}\r\n                    <Button\r\n                      color='primary'\r\n                      className='float-right mgn-ng-top-28'\r\n                      href='/customers/add'\r\n                    >\r\n                      <span className='btn-inner--icon'>\r\n                        <i className='ni ni-fat-add' />\r\n                      </span>\r\n                      <span className='btn-inner--text'> Add Customer</span>\r\n                    </Button>\r\n                  </div>\r\n\r\n                  {loading ? (\r\n                    <Fragment>\r\n                      <div className='text-center'>\r\n                        <h4>Loading Data...</h4>\r\n                        <SpinnerCircular\r\n                          size={54}\r\n                          thickness={180}\r\n                          speed={100}\r\n                          color='rgba(57, 125, 172, 1)'\r\n                          secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                        />\r\n                      </div>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <ToolkitProvider\r\n                      data={customers}\r\n                      keyField='_id'\r\n                      columns={columns}\r\n                      search\r\n                      exportCSV={{ fileName: 'PP360 | Customers.csv' }}\r\n                    >\r\n                      {props => (\r\n                        <div\r\n                          className='py-4 table-responsive'\r\n                          style={{ padding: '25px' }}\r\n                        >\r\n                          <div\r\n                            id='datatable-basic_filter'\r\n                            className='px-4 pb-1'\r\n                          >\r\n                            <Row>\r\n                              <Col md='6'>\r\n                                <ExportCSVButton\r\n                                  className='buttons-copy buttons-html5 btn-sm'\r\n                                  {...props.csvProps}\r\n                                >\r\n                                  <i className='ni ni-align-left-2'></i> Export\r\n                                  CSV\r\n                                </ExportCSVButton>\r\n                              </Col>\r\n                              <Col md={{ size: 'auto', offset: 3 }}>\r\n                                <SearchBar\r\n                                  className='form-control-sm'\r\n                                  placeholder='Search Customers'\r\n                                  {...props.searchProps}\r\n                                />\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            bootstrap4={true}\r\n                            pagination={pagination}\r\n                            bordered={false}\r\n                            wrapperClasses='table-responsive mh-330'\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>{' '}\r\n            <Footer />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  addServiceLog: PropTypes.func.isRequired,\r\n  getChecklist: PropTypes.func.isRequired,\r\n  getCustomerServiceNotes: PropTypes.func.isRequired,\r\n  getEmployeeRoute: PropTypes.func.isRequired,\r\n  sendServiceReport: PropTypes.func.isRequired,\r\n  unableService: PropTypes.func.isRequired,\r\n  getWorkOrders: PropTypes.func.isRequired,\r\n  approveWorkOrder: PropTypes.func.isRequired,\r\n  getEmployees: PropTypes.func.isRequired,\r\n  updateWorkOrder: PropTypes.func.isRequired,\r\n  customers: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  customers: state.customer,\r\n  employees: state.employee\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addServiceLog,\r\n  getChecklist,\r\n  getCustomerServiceNotes,\r\n  getEmployeeRoute,\r\n  sendServiceReport,\r\n  unableService,\r\n  getWorkOrders,\r\n  approveWorkOrder,\r\n  updateWorkOrder,\r\n  getEmployees,\r\n  getCustomers\r\n})(Dashboard);\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\employee.js",["466"],"import { GET_EMPLOYEES, GET_SINGLE_EMPLOYEE } from '../actions/types';\r\n\r\nconst initialState = {\r\n  employees: [],\r\n  singleEmployee: [],\r\n  loading: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_EMPLOYEES:\r\n      return {\r\n        ...state,\r\n        employees: payload,\r\n        loading: false\r\n      };\r\n    case GET_SINGLE_EMPLOYEE:\r\n      return {\r\n        ...state,\r\n        singleEmployee: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\landing\\LandingContent.js",["467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\BookingForms.js",["484","485","486","487","488"],"import React, { Fragment, useEffect, useState } from 'react';\r\n\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Sidebar from '../dashboard/Sidebar';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport\r\n} from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  CardBody,\r\n  Card,\r\n  CardTitle,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from 'reactstrap';\r\n\r\nconst pagination = paginationFactory({\r\n  page: 1,\r\n  alwaysShowAllBtns: true,\r\n  showTotal: false,\r\n  withFirstAndLast: false,\r\n  sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <div className='dataTables_length' id='datatable-basic_length'>\r\n      <select\r\n        name='datatable-basic_length'\r\n        aria-controls='datatable-basic'\r\n        className='form-control form-control-sm'\r\n        style={{ width: '30%' }}\r\n        onChange={e => onSizePerPageChange(e.target.value)}\r\n      >\r\n        <option value='10'>10</option>\r\n        <option value='25'>25</option>\r\n        <option value='50'>50</option>\r\n        <option value='100'>100</option>\r\n      </select>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst dataTable = [\r\n  {\r\n    id: 1,\r\n    name: 'Weekly Pool Maintenance (Riverside)',\r\n    url: 'https://example.com/booking/a123dfj38rnxiofn',\r\n    type: 'Residential',\r\n    created: 'Aug 01, 2020',\r\n    responses: '4'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Weekly Pool Maintenance (Bakersfield)',\r\n    url: 'https://example.com/booking/ahvrhi3r7347fhjd',\r\n    created: 'Aug 01, 2020',\r\n    responses: '12'\r\n  }\r\n];\r\n\r\nconst urlFormatter = cell => {\r\n  return (\r\n    <input\r\n      type='text'\r\n      className='form-control'\r\n      aria-label='Form Url'\r\n      value={cell}\r\n    />\r\n  );\r\n};\r\n\r\nconst actionFormatter = cell => {\r\n  return (\r\n    <UncontrolledDropdown>\r\n      <DropdownToggle\r\n        className='btn-icon-only text-light'\r\n        color=''\r\n        role='button'\r\n        size='sm'\r\n      >\r\n        <i className='fas fa-ellipsis-v' />\r\n      </DropdownToggle>\r\n      <DropdownMenu className='dropdown-menu-arrow' right>\r\n        <DropdownItem\r\n          href={`/booking-forms/${cell}`}\r\n          onClick={e => e.preventDefault()}\r\n        >\r\n          View\r\n        </DropdownItem>\r\n        <DropdownItem\r\n          href={`/booking-forms/edit/${cell}`}\r\n          onClick={e => e.preventDefault()}\r\n        >\r\n          Edit\r\n        </DropdownItem>\r\n        <DropdownItem\r\n          href={`/booking-forms/delete/${cell}`}\r\n          onClick={e => e.preventDefault()}\r\n        >\r\n          Delete\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  );\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    dataField: 'name',\r\n    text: 'Form Name'\r\n  },\r\n  {\r\n    dataField: 'url',\r\n    text: 'Form URL',\r\n    formatter: urlFormatter\r\n  },\r\n  {\r\n    dataField: 'created',\r\n    text: 'Created On'\r\n  },\r\n  {\r\n    dataField: 'responses',\r\n    text: 'Responses'\r\n  },\r\n  {\r\n    dataField: 'id',\r\n    text: 'Actions',\r\n    formatter: actionFormatter\r\n  }\r\n];\r\n\r\nconst BookingForms = () => {\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='bookingforms' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/booking-forms'>Booking Forms</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col>\r\n              <Card className='mgn-top-50'>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <div className='card-header bg-transparent'>\r\n                      <div className='row align-items-center'>\r\n                        <div className='col'>\r\n                          <h6 className='text-uppercase text-muted ls-1 mb-1'>\r\n                            Overview\r\n                          </h6>\r\n                          <h5 className='h3 mb-0'>Booking Forms</h5>\r\n                        </div>\r\n                        <span className='float-right'>\r\n                          <Button color='primary' href='/booking-forms/add'>\r\n                            <span class='btn-inner--icon'>\r\n                              <i class='ni ni-fat-add'></i>\r\n                            </span>\r\n                            <span class='btn-inner--text'> Add New Form</span>\r\n                          </Button>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </CardTitle>\r\n\r\n                  <div\r\n                    className='py-4 table-responsive'\r\n                    style={{ padding: '25px' }}\r\n                  >\r\n                    <div id='datatable-basic_filter' className='px-4 pb-1'>\r\n                      <BootstrapTable\r\n                        data={dataTable}\r\n                        keyField='property'\r\n                        columns={columns}\r\n                        bootstrap4={true}\r\n                        pagination={pagination}\r\n                        bordered={false}\r\n                        wrapperClasses='table-responsive'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BookingForms;\r\n",["489","490"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\index.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Pricing.js",[],["491","492"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\dashboard\\Sidebar.js",["493","494","495","496"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewMyRoute.js",["497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\RouteBuilder.js",["521","522","523","524","525","526","527","528","529"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Settings.js",["530","531","532","533","534","535","536","537","538","539","540","541","542"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\employee.js",["543","544"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\user.js",["545","546"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\types.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\user.js",["547"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewLogs.js",["548","549","550"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\landing\\Landing.js",["551","552","553","554","555","556","557","558"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ChangeEmail.js",["559","560","561"],"import React, { Fragment, useState, useEffect, useRef } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Navbar from '../Layout/Navbar';\r\nimport Footer from '../Layout/Footer';\r\nimport Alert from '../Layout/Alert';\r\n\r\nimport { updateMyEmail } from '../../actions/user';\r\n\r\nimport {\r\n  Button,\r\n  Input,\r\n  Form,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText\r\n} from 'reactstrap';\r\n\r\nconst ChangeEmail = ({ updateMyEmail, match }) => {\r\n  const formSchema = Yup.object().shape({\r\n    currentEmail: Yup.string()\r\n      .email('Please enter a valid email')\r\n      .required('Please enter your current email'),\r\n    newEmail: Yup.string()\r\n      .email('Please enter a valid email')\r\n      .required('Please enter a new email'),\r\n    confirmEmail: Yup.string()\r\n      .email('Please enter a valid email')\r\n      .oneOf([Yup.ref('newEmail')], 'Emails do not match')\r\n      .required('Please confirm your email')\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Alert />\r\n      <div className='main-content' style={{ background: '#172b4d' }}>\r\n        <div className='header bg-gradient-primary py-7 py-lg-8 pt-lg-9'>\r\n          <div className='container'>\r\n            <div className='header-body text-center mb-7'>\r\n              <div className='row justify-content-center'>\r\n                <div className='col-xl-5 col-lg-6 col-md-8 px-5'>\r\n                  <h1 className='text-white'>Change Email</h1>\r\n                  <p className='text-lead text-white'>\r\n                    Enter Your Current & New Email Below.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='separator separator-bottom separator-skew zindex-100'>\r\n            <svg\r\n              x='0'\r\n              y='0'\r\n              viewBox='0 0 2560 100'\r\n              preserveAspectRatio='none'\r\n              version='1.1'\r\n              xmlns='http://www.w3.org/2000/svg'\r\n            >\r\n              <polygon\r\n                className='fill-default'\r\n                points='2560 0 2560 100 0 100'\r\n              ></polygon>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='container mt--8 pb-5'>\r\n          <div className='row justify-content-center'>\r\n            <div className='col-lg-5 col-md-7'>\r\n              <div className='card bg-secondary border-0 mb-0'>\r\n                <div className='card-body px-lg-5 py-lg-5'>\r\n                  <div className='text-center text-muted mb-4'>\r\n                    <small>Enter Your Information:</small>\r\n                  </div>\r\n\r\n                  <Formik\r\n                    initialValues={{\r\n                      currentEmail: '',\r\n                      newEmail: '',\r\n                      confirmEmail: ''\r\n                    }}\r\n                    validationSchema={formSchema}\r\n                    onSubmit={async data => {\r\n                      await updateMyEmail(data, match.params.token);\r\n                      history.push('/dashboard');\r\n                    }}\r\n                    render={({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      values,\r\n                      errors,\r\n                      touched\r\n                    }) => (\r\n                      <Form onSubmit={handleSubmit}>\r\n                        <FormGroup>\r\n                          <InputGroup>\r\n                            <InputGroupAddon addonType='prepend'>\r\n                              <InputGroupText>\r\n                                <i className='ni ni-email-83'></i>\r\n                              </InputGroupText>\r\n                            </InputGroupAddon>\r\n                            <Input\r\n                              placeholder='Current Email'\r\n                              type='email'\r\n                              name='currentEmail'\r\n                              value={values.currentEmail}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </InputGroup>\r\n                          {errors.currentEmail && touched.currentEmail && (\r\n                            <p className='color-red'>{errors.currentEmail}</p>\r\n                          )}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <InputGroup>\r\n                            <InputGroupAddon addonType='prepend'>\r\n                              <InputGroupText>\r\n                                <i className='ni ni-email-83'></i>\r\n                              </InputGroupText>\r\n                            </InputGroupAddon>\r\n                            <Input\r\n                              placeholder='New Email'\r\n                              type='email'\r\n                              name='newEmail'\r\n                              value={values.newEmail}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </InputGroup>\r\n                          {errors.newEmail && touched.newEmail && (\r\n                            <p className='color-red'>{errors.newEmail}</p>\r\n                          )}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <InputGroup>\r\n                            <InputGroupAddon addonType='prepend'>\r\n                              <InputGroupText>\r\n                                <i className='ni ni-email-83'></i>\r\n                              </InputGroupText>\r\n                            </InputGroupAddon>\r\n                            <Input\r\n                              placeholder='Confirm New Email'\r\n                              type='email'\r\n                              name='confirmEmail'\r\n                              value={values.confirmEmail}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </InputGroup>\r\n                          {errors.confirmEmail && touched.confirmEmail && (\r\n                            <p className='color-red'>{errors.confirmEmail}</p>\r\n                          )}\r\n                        </FormGroup>\r\n                        <div className='text-center'>\r\n                          <Button type='submit' color='primary'>\r\n                            Save Changes\r\n                          </Button>\r\n                        </div>\r\n                      </Form>\r\n                    )}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer cssClass='footer-dark' />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nChangeEmail.propTypes = {\r\n  updateMyEmail: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { updateMyEmail })(ChangeEmail);\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Navbar.js",["562","563","564","565","566","567","568","569","570","571","572","573"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\dashboard\\Dashnav.js",["574","575","576","577","578","579","580","581","582","583"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\WorkOrders.js",["584","585","586","587","588","589","590","591","592","593","594"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\alert.js",[],{"ruleId":"595","replacedBy":"596"},{"ruleId":"597","replacedBy":"598"},{"ruleId":"595","replacedBy":"599"},{"ruleId":"597","replacedBy":"600"},{"ruleId":"601","severity":1,"message":"602","line":13,"column":3,"nodeType":"603","messageId":"604","endLine":13,"endColumn":23},{"ruleId":"601","severity":1,"message":"605","line":14,"column":3,"nodeType":"603","messageId":"604","endLine":14,"endColumn":15},{"ruleId":"601","severity":1,"message":"606","line":15,"column":3,"nodeType":"603","messageId":"604","endLine":15,"endColumn":15},{"ruleId":"601","severity":1,"message":"607","line":16,"column":3,"nodeType":"603","messageId":"604","endLine":16,"endColumn":17},{"ruleId":"601","severity":1,"message":"608","line":17,"column":3,"nodeType":"603","messageId":"604","endLine":17,"endColumn":8},{"ruleId":"601","severity":1,"message":"609","line":18,"column":3,"nodeType":"603","messageId":"604","endLine":18,"endColumn":14},{"ruleId":"601","severity":1,"message":"610","line":19,"column":3,"nodeType":"603","messageId":"604","endLine":19,"endColumn":12},{"ruleId":"601","severity":1,"message":"611","line":20,"column":3,"nodeType":"603","messageId":"604","endLine":20,"endColumn":14},{"ruleId":"601","severity":1,"message":"612","line":21,"column":3,"nodeType":"603","messageId":"604","endLine":21,"endColumn":7},{"ruleId":"601","severity":1,"message":"613","line":22,"column":3,"nodeType":"603","messageId":"604","endLine":22,"endColumn":8},{"ruleId":"601","severity":1,"message":"614","line":23,"column":3,"nodeType":"603","messageId":"604","endLine":23,"endColumn":8},{"ruleId":"601","severity":1,"message":"615","line":24,"column":3,"nodeType":"603","messageId":"604","endLine":24,"endColumn":12},{"ruleId":"601","severity":1,"message":"616","line":25,"column":3,"nodeType":"603","messageId":"604","endLine":25,"endColumn":8},{"ruleId":"617","severity":1,"message":"618","line":132,"column":25,"nodeType":"619","endLine":135,"endColumn":27},{"ruleId":"595","replacedBy":"620"},{"ruleId":"597","replacedBy":"621"},{"ruleId":"622","severity":1,"message":"623","line":42,"column":6,"nodeType":"624","endLine":42,"endColumn":39,"suggestions":"625"},{"ruleId":"595","replacedBy":"626"},{"ruleId":"597","replacedBy":"627"},{"ruleId":"601","severity":1,"message":"628","line":8,"column":3,"nodeType":"603","messageId":"604","endLine":8,"endColumn":9},{"ruleId":"601","severity":1,"message":"602","line":15,"column":3,"nodeType":"603","messageId":"604","endLine":15,"endColumn":23},{"ruleId":"601","severity":1,"message":"605","line":16,"column":3,"nodeType":"603","messageId":"604","endLine":16,"endColumn":15},{"ruleId":"601","severity":1,"message":"606","line":17,"column":3,"nodeType":"603","messageId":"604","endLine":17,"endColumn":15},{"ruleId":"601","severity":1,"message":"607","line":18,"column":3,"nodeType":"603","messageId":"604","endLine":18,"endColumn":17},{"ruleId":"601","severity":1,"message":"608","line":19,"column":3,"nodeType":"603","messageId":"604","endLine":19,"endColumn":8},{"ruleId":"601","severity":1,"message":"609","line":20,"column":3,"nodeType":"603","messageId":"604","endLine":20,"endColumn":14},{"ruleId":"601","severity":1,"message":"610","line":21,"column":3,"nodeType":"603","messageId":"604","endLine":21,"endColumn":12},{"ruleId":"601","severity":1,"message":"611","line":22,"column":3,"nodeType":"603","messageId":"604","endLine":22,"endColumn":14},{"ruleId":"601","severity":1,"message":"612","line":23,"column":3,"nodeType":"603","messageId":"604","endLine":23,"endColumn":7},{"ruleId":"601","severity":1,"message":"613","line":24,"column":3,"nodeType":"603","messageId":"604","endLine":24,"endColumn":8},{"ruleId":"601","severity":1,"message":"614","line":25,"column":3,"nodeType":"603","messageId":"604","endLine":25,"endColumn":8},{"ruleId":"601","severity":1,"message":"615","line":26,"column":3,"nodeType":"603","messageId":"604","endLine":26,"endColumn":12},{"ruleId":"622","severity":1,"message":"629","line":54,"column":6,"nodeType":"624","endLine":54,"endColumn":25,"suggestions":"630"},{"ruleId":"595","replacedBy":"631"},{"ruleId":"597","replacedBy":"632"},{"ruleId":"601","severity":1,"message":"633","line":30,"column":3,"nodeType":"603","messageId":"604","endLine":30,"endColumn":13},{"ruleId":"622","severity":1,"message":"623","line":47,"column":6,"nodeType":"624","endLine":47,"endColumn":25,"suggestions":"634"},{"ruleId":"595","replacedBy":"635"},{"ruleId":"597","replacedBy":"636"},{"ruleId":"601","severity":1,"message":"602","line":20,"column":3,"nodeType":"603","messageId":"604","endLine":20,"endColumn":23},{"ruleId":"601","severity":1,"message":"605","line":21,"column":3,"nodeType":"603","messageId":"604","endLine":21,"endColumn":15},{"ruleId":"601","severity":1,"message":"606","line":22,"column":3,"nodeType":"603","messageId":"604","endLine":22,"endColumn":15},{"ruleId":"601","severity":1,"message":"607","line":23,"column":3,"nodeType":"603","messageId":"604","endLine":23,"endColumn":17},{"ruleId":"601","severity":1,"message":"616","line":35,"column":3,"nodeType":"603","messageId":"604","endLine":35,"endColumn":8},{"ruleId":"622","severity":1,"message":"623","line":65,"column":6,"nodeType":"624","endLine":65,"endColumn":25,"suggestions":"637"},{"ruleId":"601","severity":1,"message":"638","line":4,"column":3,"nodeType":"603","messageId":"604","endLine":4,"endColumn":16},{"ruleId":"601","severity":1,"message":"639","line":5,"column":3,"nodeType":"603","messageId":"604","endLine":5,"endColumn":12},{"ruleId":"601","severity":1,"message":"640","line":6,"column":3,"nodeType":"603","messageId":"604","endLine":6,"endColumn":15},{"ruleId":"601","severity":1,"message":"641","line":7,"column":3,"nodeType":"603","messageId":"604","endLine":7,"endColumn":9},{"ruleId":"622","severity":1,"message":"642","line":53,"column":6,"nodeType":"624","endLine":53,"endColumn":20,"suggestions":"643"},{"ruleId":"595","replacedBy":"644"},{"ruleId":"597","replacedBy":"645"},{"ruleId":"601","severity":1,"message":"646","line":9,"column":10,"nodeType":"603","messageId":"604","endLine":9,"endColumn":16},{"ruleId":"601","severity":1,"message":"628","line":19,"column":3,"nodeType":"603","messageId":"604","endLine":19,"endColumn":9},{"ruleId":"601","severity":1,"message":"608","line":28,"column":3,"nodeType":"603","messageId":"604","endLine":28,"endColumn":8},{"ruleId":"601","severity":1,"message":"609","line":29,"column":3,"nodeType":"603","messageId":"604","endLine":29,"endColumn":14},{"ruleId":"601","severity":1,"message":"610","line":30,"column":3,"nodeType":"603","messageId":"604","endLine":30,"endColumn":12},{"ruleId":"601","severity":1,"message":"611","line":31,"column":3,"nodeType":"603","messageId":"604","endLine":31,"endColumn":14},{"ruleId":"601","severity":1,"message":"612","line":32,"column":3,"nodeType":"603","messageId":"604","endLine":32,"endColumn":7},{"ruleId":"601","severity":1,"message":"615","line":33,"column":3,"nodeType":"603","messageId":"604","endLine":33,"endColumn":12},{"ruleId":"601","severity":1,"message":"614","line":34,"column":3,"nodeType":"603","messageId":"604","endLine":34,"endColumn":8},{"ruleId":"601","severity":1,"message":"613","line":35,"column":3,"nodeType":"603","messageId":"604","endLine":35,"endColumn":8},{"ruleId":"595","replacedBy":"647"},{"ruleId":"597","replacedBy":"648"},{"ruleId":"595","replacedBy":"649"},{"ruleId":"597","replacedBy":"650"},{"ruleId":"601","severity":1,"message":"651","line":2,"column":10,"nodeType":"603","messageId":"604","endLine":2,"endColumn":14},{"ruleId":"652","severity":1,"message":"653","line":79,"column":19,"nodeType":"619","endLine":79,"endColumn":57},{"ruleId":"654","severity":1,"message":"655","line":130,"column":25,"nodeType":"656","endLine":130,"endColumn":38},{"ruleId":"657","severity":1,"message":"658","line":141,"column":19,"nodeType":"619","endLine":141,"endColumn":54},{"ruleId":"657","severity":1,"message":"658","line":146,"column":19,"nodeType":"619","endLine":146,"endColumn":54},{"ruleId":"595","replacedBy":"659"},{"ruleId":"597","replacedBy":"660"},{"ruleId":"601","severity":1,"message":"661","line":1,"column":10,"nodeType":"603","messageId":"604","endLine":1,"endColumn":18},{"ruleId":"595","replacedBy":"662"},{"ruleId":"597","replacedBy":"663"},{"ruleId":"664","severity":1,"message":"665","line":19,"column":1,"nodeType":"666","endLine":54,"endColumn":2},{"ruleId":"664","severity":1,"message":"665","line":5,"column":1,"nodeType":"666","endLine":16,"endColumn":2},{"ruleId":"595","replacedBy":"667"},{"ruleId":"597","replacedBy":"668"},{"ruleId":"601","severity":1,"message":"608","line":8,"column":3,"nodeType":"603","messageId":"604","endLine":8,"endColumn":8},{"ruleId":"601","severity":1,"message":"609","line":9,"column":3,"nodeType":"603","messageId":"604","endLine":9,"endColumn":14},{"ruleId":"601","severity":1,"message":"610","line":10,"column":3,"nodeType":"603","messageId":"604","endLine":10,"endColumn":12},{"ruleId":"601","severity":1,"message":"611","line":11,"column":3,"nodeType":"603","messageId":"604","endLine":11,"endColumn":14},{"ruleId":"601","severity":1,"message":"612","line":12,"column":3,"nodeType":"603","messageId":"604","endLine":12,"endColumn":7},{"ruleId":"601","severity":1,"message":"615","line":13,"column":3,"nodeType":"603","messageId":"604","endLine":13,"endColumn":12},{"ruleId":"601","severity":1,"message":"669","line":16,"column":3,"nodeType":"603","messageId":"604","endLine":16,"endColumn":11},{"ruleId":"601","severity":1,"message":"651","line":9,"column":10,"nodeType":"603","messageId":"604","endLine":9,"endColumn":14},{"ruleId":"657","severity":1,"message":"658","line":99,"column":19,"nodeType":"619","endLine":99,"endColumn":66},{"ruleId":"657","severity":1,"message":"658","line":102,"column":19,"nodeType":"619","endLine":102,"endColumn":66},{"ruleId":"595","replacedBy":"670"},{"ruleId":"597","replacedBy":"671"},{"ruleId":"595","replacedBy":"672"},{"ruleId":"597","replacedBy":"673"},{"ruleId":"601","severity":1,"message":"674","line":1,"column":27,"nodeType":"603","messageId":"604","endLine":1,"endColumn":35},{"ruleId":"601","severity":1,"message":"675","line":1,"column":37,"nodeType":"603","messageId":"604","endLine":1,"endColumn":46},{"ruleId":"601","severity":1,"message":"676","line":3,"column":3,"nodeType":"603","messageId":"604","endLine":3,"endColumn":12},{"ruleId":"601","severity":1,"message":"651","line":3,"column":10,"nodeType":"603","messageId":"604","endLine":3,"endColumn":14},{"ruleId":"601","severity":1,"message":"633","line":26,"column":3,"nodeType":"603","messageId":"604","endLine":26,"endColumn":13},{"ruleId":"657","severity":1,"message":"658","line":115,"column":19,"nodeType":"619","endLine":115,"endColumn":66},{"ruleId":"657","severity":1,"message":"658","line":118,"column":19,"nodeType":"619","endLine":118,"endColumn":66},{"ruleId":"595","replacedBy":"677"},{"ruleId":"597","replacedBy":"678"},{"ruleId":"595","replacedBy":"679"},{"ruleId":"597","replacedBy":"680"},{"ruleId":"601","severity":1,"message":"676","line":9,"column":3,"nodeType":"603","messageId":"604","endLine":9,"endColumn":12},{"ruleId":"601","severity":1,"message":"669","line":18,"column":3,"nodeType":"603","messageId":"604","endLine":18,"endColumn":11},{"ruleId":"601","severity":1,"message":"675","line":20,"column":10,"nodeType":"603","messageId":"604","endLine":20,"endColumn":19},{"ruleId":"681","severity":1,"message":"682","line":74,"column":49,"nodeType":"683","messageId":"684","endLine":74,"endColumn":51},{"ruleId":"681","severity":1,"message":"682","line":89,"column":49,"nodeType":"683","messageId":"684","endLine":89,"endColumn":51},{"ruleId":"681","severity":1,"message":"682","line":101,"column":49,"nodeType":"683","messageId":"684","endLine":101,"endColumn":51},{"ruleId":"681","severity":1,"message":"685","line":311,"column":21,"nodeType":"683","messageId":"684","endLine":311,"endColumn":23},{"ruleId":"681","severity":1,"message":"685","line":311,"column":58,"nodeType":"683","messageId":"684","endLine":311,"endColumn":60},{"ruleId":"601","severity":1,"message":"686","line":2,"column":8,"nodeType":"603","messageId":"604","endLine":2,"endColumn":16},{"ruleId":"601","severity":1,"message":"628","line":8,"column":3,"nodeType":"603","messageId":"604","endLine":8,"endColumn":9},{"ruleId":"601","severity":1,"message":"687","line":9,"column":3,"nodeType":"603","messageId":"604","endLine":9,"endColumn":6},{"ruleId":"601","severity":1,"message":"688","line":10,"column":3,"nodeType":"603","messageId":"604","endLine":10,"endColumn":6},{"ruleId":"601","severity":1,"message":"608","line":11,"column":3,"nodeType":"603","messageId":"604","endLine":11,"endColumn":8},{"ruleId":"601","severity":1,"message":"609","line":12,"column":3,"nodeType":"603","messageId":"604","endLine":12,"endColumn":14},{"ruleId":"601","severity":1,"message":"610","line":13,"column":3,"nodeType":"603","messageId":"604","endLine":13,"endColumn":12},{"ruleId":"601","severity":1,"message":"611","line":14,"column":3,"nodeType":"603","messageId":"604","endLine":14,"endColumn":14},{"ruleId":"601","severity":1,"message":"689","line":54,"column":7,"nodeType":"603","messageId":"604","endLine":54,"endColumn":11},{"ruleId":"681","severity":1,"message":"682","line":203,"column":52,"nodeType":"683","messageId":"684","endLine":203,"endColumn":54},{"ruleId":"681","severity":1,"message":"682","line":218,"column":52,"nodeType":"683","messageId":"684","endLine":218,"endColumn":54},{"ruleId":"681","severity":1,"message":"682","line":229,"column":52,"nodeType":"683","messageId":"684","endLine":229,"endColumn":54},{"ruleId":"595","replacedBy":"690"},{"ruleId":"597","replacedBy":"691"},{"ruleId":"664","severity":1,"message":"665","line":31,"column":1,"nodeType":"666","endLine":110,"endColumn":2},{"ruleId":"601","severity":1,"message":"692","line":5,"column":19,"nodeType":"603","messageId":"604","endLine":5,"endColumn":26},{"ruleId":"601","severity":1,"message":"693","line":8,"column":10,"nodeType":"603","messageId":"604","endLine":8,"endColumn":16},{"ruleId":"601","severity":1,"message":"639","line":4,"column":3,"nodeType":"603","messageId":"604","endLine":4,"endColumn":12},{"ruleId":"601","severity":1,"message":"694","line":5,"column":3,"nodeType":"603","messageId":"604","endLine":5,"endColumn":13},{"ruleId":"601","severity":1,"message":"641","line":6,"column":3,"nodeType":"603","messageId":"604","endLine":6,"endColumn":9},{"ruleId":"601","severity":1,"message":"695","line":7,"column":3,"nodeType":"603","messageId":"604","endLine":7,"endColumn":13},{"ruleId":"601","severity":1,"message":"696","line":8,"column":3,"nodeType":"603","messageId":"604","endLine":8,"endColumn":21},{"ruleId":"601","severity":1,"message":"697","line":9,"column":3,"nodeType":"603","messageId":"604","endLine":9,"endColumn":20},{"ruleId":"601","severity":1,"message":"698","line":10,"column":3,"nodeType":"603","messageId":"604","endLine":10,"endColumn":11},{"ruleId":"601","severity":1,"message":"699","line":13,"column":8,"nodeType":"603","messageId":"604","endLine":13,"endColumn":29},{"ruleId":"601","severity":1,"message":"700","line":22,"column":8,"nodeType":"603","messageId":"604","endLine":22,"endColumn":14},{"ruleId":"601","severity":1,"message":"701","line":28,"column":8,"nodeType":"603","messageId":"604","endLine":28,"endColumn":22},{"ruleId":"601","severity":1,"message":"702","line":35,"column":8,"nodeType":"603","messageId":"604","endLine":35,"endColumn":18},{"ruleId":"601","severity":1,"message":"703","line":37,"column":5,"nodeType":"603","messageId":"604","endLine":37,"endColumn":8},{"ruleId":"601","severity":1,"message":"704","line":39,"column":7,"nodeType":"603","messageId":"604","endLine":39,"endColumn":17},{"ruleId":"601","severity":1,"message":"705","line":48,"column":7,"nodeType":"603","messageId":"604","endLine":48,"endColumn":21},{"ruleId":"601","severity":1,"message":"706","line":53,"column":7,"nodeType":"603","messageId":"604","endLine":53,"endColumn":16},{"ruleId":"601","severity":1,"message":"707","line":86,"column":10,"nodeType":"603","messageId":"604","endLine":86,"endColumn":13},{"ruleId":"601","severity":1,"message":"708","line":92,"column":10,"nodeType":"603","messageId":"604","endLine":92,"endColumn":18},{"ruleId":"601","severity":1,"message":"709","line":97,"column":9,"nodeType":"603","messageId":"604","endLine":97,"endColumn":22},{"ruleId":"601","severity":1,"message":"710","line":104,"column":9,"nodeType":"603","messageId":"604","endLine":104,"endColumn":26},{"ruleId":"601","severity":1,"message":"711","line":111,"column":9,"nodeType":"603","messageId":"604","endLine":111,"endColumn":15},{"ruleId":"601","severity":1,"message":"712","line":117,"column":9,"nodeType":"603","messageId":"604","endLine":117,"endColumn":18},{"ruleId":"601","severity":1,"message":"713","line":143,"column":10,"nodeType":"603","messageId":"604","endLine":143,"endColumn":21},{"ruleId":"601","severity":1,"message":"714","line":143,"column":23,"nodeType":"603","messageId":"604","endLine":143,"endColumn":37},{"ruleId":"601","severity":1,"message":"715","line":147,"column":9,"nodeType":"603","messageId":"604","endLine":147,"endColumn":19},{"ruleId":"601","severity":1,"message":"716","line":148,"column":9,"nodeType":"603","messageId":"604","endLine":148,"endColumn":15},{"ruleId":"601","severity":1,"message":"628","line":13,"column":3,"nodeType":"603","messageId":"604","endLine":13,"endColumn":9},{"ruleId":"601","severity":1,"message":"717","line":58,"column":3,"nodeType":"603","messageId":"604","endLine":58,"endColumn":23},{"ruleId":"601","severity":1,"message":"718","line":59,"column":3,"nodeType":"603","messageId":"604","endLine":59,"endColumn":20},{"ruleId":"601","severity":1,"message":"719","line":70,"column":13,"nodeType":"603","messageId":"604","endLine":70,"endColumn":16},{"ruleId":"664","severity":1,"message":"665","line":8,"column":1,"nodeType":"666","endLine":20,"endColumn":2},{"ruleId":"601","severity":1,"message":"720","line":22,"column":10,"nodeType":"603","messageId":"604","endLine":22,"endColumn":20},{"ruleId":"601","severity":1,"message":"721","line":31,"column":3,"nodeType":"603","messageId":"604","endLine":31,"endColumn":14},{"ruleId":"601","severity":1,"message":"633","line":36,"column":3,"nodeType":"603","messageId":"604","endLine":36,"endColumn":13},{"ruleId":"601","severity":1,"message":"722","line":46,"column":3,"nodeType":"603","messageId":"604","endLine":46,"endColumn":13},{"ruleId":"601","severity":1,"message":"723","line":47,"column":3,"nodeType":"603","messageId":"604","endLine":47,"endColumn":17},{"ruleId":"601","severity":1,"message":"724","line":48,"column":3,"nodeType":"603","messageId":"604","endLine":48,"endColumn":17},{"ruleId":"601","severity":1,"message":"725","line":51,"column":3,"nodeType":"603","messageId":"604","endLine":51,"endColumn":10},{"ruleId":"601","severity":1,"message":"726","line":55,"column":3,"nodeType":"603","messageId":"604","endLine":55,"endColumn":22},{"ruleId":"601","severity":1,"message":"611","line":62,"column":3,"nodeType":"603","messageId":"604","endLine":62,"endColumn":14},{"ruleId":"601","severity":1,"message":"727","line":79,"column":15,"nodeType":"603","messageId":"604","endLine":79,"endColumn":19},{"ruleId":"601","severity":1,"message":"728","line":87,"column":8,"nodeType":"603","messageId":"604","endLine":87,"endColumn":14},{"ruleId":"601","severity":1,"message":"729","line":92,"column":8,"nodeType":"603","messageId":"604","endLine":92,"endColumn":12},{"ruleId":"601","severity":1,"message":"730","line":97,"column":3,"nodeType":"603","messageId":"604","endLine":97,"endColumn":16},{"ruleId":"601","severity":1,"message":"731","line":100,"column":8,"nodeType":"603","messageId":"604","endLine":100,"endColumn":11},{"ruleId":"601","severity":1,"message":"732","line":101,"column":10,"nodeType":"603","messageId":"604","endLine":101,"endColumn":13},{"ruleId":"601","severity":1,"message":"733","line":102,"column":8,"nodeType":"603","messageId":"604","endLine":102,"endColumn":16},{"ruleId":"622","severity":1,"message":"734","line":160,"column":6,"nodeType":"624","endLine":160,"endColumn":12,"suggestions":"735"},{"ruleId":"601","severity":1,"message":"736","line":194,"column":9,"nodeType":"603","messageId":"604","endLine":194,"endColumn":27},{"ruleId":"601","severity":1,"message":"737","line":196,"column":9,"nodeType":"603","messageId":"604","endLine":196,"endColumn":14},{"ruleId":"622","severity":1,"message":"738","line":388,"column":13,"nodeType":"739","endLine":399,"endColumn":4},{"ruleId":"622","severity":1,"message":"740","line":399,"column":6,"nodeType":"624","endLine":399,"endColumn":16,"suggestions":"741"},{"ruleId":"601","severity":1,"message":"742","line":402,"column":10,"nodeType":"603","messageId":"604","endLine":402,"endColumn":28},{"ruleId":"601","severity":1,"message":"743","line":438,"column":9,"nodeType":"603","messageId":"604","endLine":438,"endColumn":21},{"ruleId":"622","severity":1,"message":"744","line":447,"column":6,"nodeType":"624","endLine":447,"endColumn":17,"suggestions":"745"},{"ruleId":"622","severity":1,"message":"744","line":454,"column":6,"nodeType":"624","endLine":454,"endColumn":20,"suggestions":"746"},{"ruleId":"681","severity":1,"message":"682","line":1518,"column":61,"nodeType":"683","messageId":"684","endLine":1518,"endColumn":63},{"ruleId":"681","severity":1,"message":"685","line":4543,"column":74,"nodeType":"683","messageId":"684","endLine":4543,"endColumn":76},{"ruleId":"681","severity":1,"message":"685","line":4576,"column":78,"nodeType":"683","messageId":"684","endLine":4576,"endColumn":80},{"ruleId":"664","severity":1,"message":"665","line":9,"column":1,"nodeType":"666","endLine":26,"endColumn":2},{"ruleId":"601","severity":1,"message":"676","line":3,"column":20,"nodeType":"603","messageId":"604","endLine":3,"endColumn":29},{"ruleId":"601","severity":1,"message":"628","line":3,"column":31,"nodeType":"603","messageId":"604","endLine":3,"endColumn":37},{"ruleId":"601","severity":1,"message":"747","line":3,"column":39,"nodeType":"603","messageId":"604","endLine":3,"endColumn":42},{"ruleId":"617","severity":1,"message":"618","line":239,"column":17,"nodeType":"619","endLine":242,"endColumn":19},{"ruleId":"617","severity":1,"message":"618","line":300,"column":17,"nodeType":"619","endLine":303,"endColumn":19},{"ruleId":"617","severity":1,"message":"618","line":328,"column":17,"nodeType":"619","endLine":331,"endColumn":19},{"ruleId":"748","severity":1,"message":"749","line":374,"column":21,"nodeType":"656","endLine":374,"endColumn":36},{"ruleId":"748","severity":1,"message":"749","line":430,"column":21,"nodeType":"656","endLine":430,"endColumn":36},{"ruleId":"748","severity":1,"message":"749","line":452,"column":25,"nodeType":"656","endLine":452,"endColumn":40},{"ruleId":"617","severity":1,"message":"618","line":456,"column":25,"nodeType":"619","endLine":459,"endColumn":27},{"ruleId":"617","severity":1,"message":"618","line":469,"column":25,"nodeType":"619","endLine":472,"endColumn":27},{"ruleId":"617","severity":1,"message":"618","line":482,"column":25,"nodeType":"619","endLine":485,"endColumn":27},{"ruleId":"617","severity":1,"message":"618","line":495,"column":25,"nodeType":"619","endLine":498,"endColumn":27},{"ruleId":"617","severity":1,"message":"618","line":508,"column":25,"nodeType":"619","endLine":511,"endColumn":27},{"ruleId":"617","severity":1,"message":"618","line":521,"column":25,"nodeType":"619","endLine":524,"endColumn":27},{"ruleId":"617","severity":1,"message":"618","line":536,"column":25,"nodeType":"619","endLine":539,"endColumn":27},{"ruleId":"617","severity":1,"message":"618","line":549,"column":25,"nodeType":"619","endLine":552,"endColumn":27},{"ruleId":"601","severity":1,"message":"675","line":1,"column":27,"nodeType":"603","messageId":"604","endLine":1,"endColumn":36},{"ruleId":"601","severity":1,"message":"674","line":1,"column":38,"nodeType":"603","messageId":"604","endLine":1,"endColumn":46},{"ruleId":"601","severity":1,"message":"750","line":7,"column":8,"nodeType":"603","messageId":"604","endLine":7,"endColumn":23},{"ruleId":"601","severity":1,"message":"751","line":8,"column":3,"nodeType":"603","messageId":"604","endLine":8,"endColumn":9},{"ruleId":"601","severity":1,"message":"752","line":9,"column":3,"nodeType":"603","messageId":"604","endLine":9,"endColumn":12},{"ruleId":"595","replacedBy":"753"},{"ruleId":"597","replacedBy":"754"},{"ruleId":"595","replacedBy":"755"},{"ruleId":"597","replacedBy":"756"},{"ruleId":"601","severity":1,"message":"628","line":11,"column":20,"nodeType":"603","messageId":"604","endLine":11,"endColumn":26},{"ruleId":"601","severity":1,"message":"757","line":11,"column":28,"nodeType":"603","messageId":"604","endLine":11,"endColumn":36},{"ruleId":"601","severity":1,"message":"758","line":11,"column":38,"nodeType":"603","messageId":"604","endLine":11,"endColumn":42},{"ruleId":"622","severity":1,"message":"759","line":45,"column":6,"nodeType":"624","endLine":45,"endColumn":8,"suggestions":"760"},{"ruleId":"601","severity":1,"message":"605","line":10,"column":3,"nodeType":"603","messageId":"604","endLine":10,"endColumn":15},{"ruleId":"601","severity":1,"message":"606","line":11,"column":3,"nodeType":"603","messageId":"604","endLine":11,"endColumn":15},{"ruleId":"601","severity":1,"message":"607","line":12,"column":3,"nodeType":"603","messageId":"604","endLine":12,"endColumn":17},{"ruleId":"601","severity":1,"message":"602","line":17,"column":3,"nodeType":"603","messageId":"604","endLine":17,"endColumn":23},{"ruleId":"601","severity":1,"message":"761","line":18,"column":3,"nodeType":"603","messageId":"604","endLine":18,"endColumn":8},{"ruleId":"601","severity":1,"message":"762","line":20,"column":3,"nodeType":"603","messageId":"604","endLine":20,"endColumn":8},{"ruleId":"601","severity":1,"message":"725","line":21,"column":3,"nodeType":"603","messageId":"604","endLine":21,"endColumn":10},{"ruleId":"601","severity":1,"message":"719","line":54,"column":13,"nodeType":"603","messageId":"604","endLine":54,"endColumn":16},{"ruleId":"601","severity":1,"message":"763","line":60,"column":8,"nodeType":"603","messageId":"604","endLine":60,"endColumn":22},{"ruleId":"601","severity":1,"message":"750","line":61,"column":8,"nodeType":"603","messageId":"604","endLine":61,"endColumn":23},{"ruleId":"601","severity":1,"message":"751","line":62,"column":3,"nodeType":"603","messageId":"604","endLine":62,"endColumn":9},{"ruleId":"601","severity":1,"message":"752","line":63,"column":3,"nodeType":"603","messageId":"604","endLine":63,"endColumn":12},{"ruleId":"622","severity":1,"message":"734","line":85,"column":6,"nodeType":"624","endLine":85,"endColumn":12,"suggestions":"764"},{"ruleId":"601","severity":1,"message":"765","line":91,"column":9,"nodeType":"603","messageId":"604","endLine":91,"endColumn":19},{"ruleId":"601","severity":1,"message":"766","line":136,"column":9,"nodeType":"603","messageId":"604","endLine":136,"endColumn":16},{"ruleId":"622","severity":1,"message":"738","line":221,"column":13,"nodeType":"739","endLine":235,"endColumn":4},{"ruleId":"622","severity":1,"message":"767","line":235,"column":6,"nodeType":"624","endLine":235,"endColumn":16,"suggestions":"768"},{"ruleId":"601","severity":1,"message":"742","line":238,"column":10,"nodeType":"603","messageId":"604","endLine":238,"endColumn":28},{"ruleId":"601","severity":1,"message":"743","line":274,"column":9,"nodeType":"603","messageId":"604","endLine":274,"endColumn":21},{"ruleId":"622","severity":1,"message":"744","line":283,"column":6,"nodeType":"624","endLine":283,"endColumn":17,"suggestions":"769"},{"ruleId":"622","severity":1,"message":"744","line":290,"column":6,"nodeType":"624","endLine":290,"endColumn":20,"suggestions":"770"},{"ruleId":"681","severity":1,"message":"682","line":1138,"column":61,"nodeType":"683","messageId":"684","endLine":1138,"endColumn":63},{"ruleId":"681","severity":1,"message":"685","line":4156,"column":74,"nodeType":"683","messageId":"684","endLine":4156,"endColumn":76},{"ruleId":"681","severity":1,"message":"685","line":4210,"column":76,"nodeType":"683","messageId":"684","endLine":4210,"endColumn":78},{"ruleId":"601","severity":1,"message":"696","line":20,"column":3,"nodeType":"603","messageId":"604","endLine":20,"endColumn":21},{"ruleId":"601","severity":1,"message":"697","line":21,"column":3,"nodeType":"603","messageId":"604","endLine":21,"endColumn":20},{"ruleId":"601","severity":1,"message":"698","line":22,"column":3,"nodeType":"603","messageId":"604","endLine":22,"endColumn":11},{"ruleId":"601","severity":1,"message":"707","line":94,"column":10,"nodeType":"603","messageId":"604","endLine":94,"endColumn":13},{"ruleId":"601","severity":1,"message":"771","line":112,"column":9,"nodeType":"603","messageId":"604","endLine":112,"endColumn":21},{"ruleId":"622","severity":1,"message":"772","line":143,"column":6,"nodeType":"624","endLine":143,"endColumn":17,"suggestions":"773"},{"ruleId":"622","severity":1,"message":"774","line":162,"column":6,"nodeType":"624","endLine":162,"endColumn":17,"suggestions":"775"},{"ruleId":"601","severity":1,"message":"776","line":176,"column":11,"nodeType":"603","messageId":"604","endLine":176,"endColumn":17},{"ruleId":"601","severity":1,"message":"777","line":218,"column":10,"nodeType":"603","messageId":"604","endLine":218,"endColumn":19},{"ruleId":"601","severity":1,"message":"602","line":34,"column":3,"nodeType":"603","messageId":"604","endLine":34,"endColumn":23},{"ruleId":"601","severity":1,"message":"605","line":35,"column":3,"nodeType":"603","messageId":"604","endLine":35,"endColumn":15},{"ruleId":"601","severity":1,"message":"606","line":36,"column":3,"nodeType":"603","messageId":"604","endLine":36,"endColumn":15},{"ruleId":"601","severity":1,"message":"607","line":37,"column":3,"nodeType":"603","messageId":"604","endLine":37,"endColumn":17},{"ruleId":"601","severity":1,"message":"608","line":38,"column":3,"nodeType":"603","messageId":"604","endLine":38,"endColumn":8},{"ruleId":"601","severity":1,"message":"609","line":39,"column":3,"nodeType":"603","messageId":"604","endLine":39,"endColumn":14},{"ruleId":"601","severity":1,"message":"610","line":40,"column":3,"nodeType":"603","messageId":"604","endLine":40,"endColumn":12},{"ruleId":"601","severity":1,"message":"611","line":41,"column":3,"nodeType":"603","messageId":"604","endLine":41,"endColumn":14},{"ruleId":"601","severity":1,"message":"616","line":46,"column":3,"nodeType":"603","messageId":"604","endLine":46,"endColumn":8},{"ruleId":"601","severity":1,"message":"778","line":52,"column":3,"nodeType":"603","messageId":"604","endLine":52,"endColumn":11},{"ruleId":"601","severity":1,"message":"779","line":53,"column":3,"nodeType":"603","messageId":"604","endLine":53,"endColumn":12},{"ruleId":"601","severity":1,"message":"780","line":87,"column":9,"nodeType":"603","messageId":"604","endLine":87,"endColumn":26},{"ruleId":"617","severity":1,"message":"618","line":1051,"column":49,"nodeType":"619","endLine":1051,"endColumn":75},{"ruleId":"601","severity":1,"message":"781","line":173,"column":11,"nodeType":"603","messageId":"604","endLine":173,"endColumn":17},{"ruleId":"601","severity":1,"message":"781","line":192,"column":11,"nodeType":"603","messageId":"604","endLine":192,"endColumn":17},{"ruleId":"601","severity":1,"message":"781","line":103,"column":11,"nodeType":"603","messageId":"604","endLine":103,"endColumn":17},{"ruleId":"601","severity":1,"message":"781","line":129,"column":11,"nodeType":"603","messageId":"604","endLine":129,"endColumn":17},{"ruleId":"664","severity":1,"message":"665","line":10,"column":1,"nodeType":"666","endLine":28,"endColumn":2},{"ruleId":"601","severity":1,"message":"611","line":19,"column":3,"nodeType":"603","messageId":"604","endLine":19,"endColumn":14},{"ruleId":"601","severity":1,"message":"728","line":27,"column":8,"nodeType":"603","messageId":"604","endLine":27,"endColumn":14},{"ruleId":"622","severity":1,"message":"782","line":270,"column":6,"nodeType":"624","endLine":270,"endColumn":28,"suggestions":"783"},{"ruleId":"601","severity":1,"message":"675","line":1,"column":27,"nodeType":"603","messageId":"604","endLine":1,"endColumn":36},{"ruleId":"601","severity":1,"message":"674","line":1,"column":38,"nodeType":"603","messageId":"604","endLine":1,"endColumn":46},{"ruleId":"601","severity":1,"message":"651","line":2,"column":10,"nodeType":"603","messageId":"604","endLine":2,"endColumn":14},{"ruleId":"601","severity":1,"message":"687","line":4,"column":10,"nodeType":"603","messageId":"604","endLine":4,"endColumn":13},{"ruleId":"601","severity":1,"message":"688","line":4,"column":15,"nodeType":"603","messageId":"604","endLine":4,"endColumn":18},{"ruleId":"601","severity":1,"message":"676","line":4,"column":20,"nodeType":"603","messageId":"604","endLine":4,"endColumn":29},{"ruleId":"601","severity":1,"message":"628","line":4,"column":31,"nodeType":"603","messageId":"604","endLine":4,"endColumn":37},{"ruleId":"601","severity":1,"message":"747","line":4,"column":39,"nodeType":"603","messageId":"604","endLine":4,"endColumn":42},{"ruleId":"601","severity":1,"message":"674","line":1,"column":27,"nodeType":"603","messageId":"604","endLine":1,"endColumn":35},{"ruleId":"601","severity":1,"message":"675","line":1,"column":37,"nodeType":"603","messageId":"604","endLine":1,"endColumn":46},{"ruleId":"601","severity":1,"message":"784","line":1,"column":48,"nodeType":"603","messageId":"604","endLine":1,"endColumn":54},{"ruleId":"601","severity":1,"message":"674","line":1,"column":27,"nodeType":"603","messageId":"604","endLine":1,"endColumn":35},{"ruleId":"601","severity":1,"message":"687","line":2,"column":10,"nodeType":"603","messageId":"604","endLine":2,"endColumn":13},{"ruleId":"601","severity":1,"message":"688","line":2,"column":15,"nodeType":"603","messageId":"604","endLine":2,"endColumn":18},{"ruleId":"601","severity":1,"message":"676","line":2,"column":20,"nodeType":"603","messageId":"604","endLine":2,"endColumn":29},{"ruleId":"601","severity":1,"message":"628","line":2,"column":31,"nodeType":"603","messageId":"604","endLine":2,"endColumn":37},{"ruleId":"601","severity":1,"message":"747","line":2,"column":39,"nodeType":"603","messageId":"604","endLine":2,"endColumn":42},{"ruleId":"617","severity":1,"message":"618","line":23,"column":13,"nodeType":"619","endLine":23,"endColumn":31},{"ruleId":"617","severity":1,"message":"618","line":44,"column":21,"nodeType":"619","endLine":44,"endColumn":40},{"ruleId":"748","severity":1,"message":"749","line":86,"column":19,"nodeType":"656","endLine":86,"endColumn":34},{"ruleId":"748","severity":1,"message":"749","line":101,"column":19,"nodeType":"656","endLine":101,"endColumn":34},{"ruleId":"748","severity":1,"message":"749","line":116,"column":19,"nodeType":"656","endLine":116,"endColumn":34},{"ruleId":"748","severity":1,"message":"749","line":131,"column":19,"nodeType":"656","endLine":131,"endColumn":34},{"ruleId":"657","severity":1,"message":"658","line":94,"column":17,"nodeType":"619","endLine":99,"endColumn":18},{"ruleId":"657","severity":1,"message":"658","line":104,"column":17,"nodeType":"619","endLine":111,"endColumn":18},{"ruleId":"785","severity":1,"message":"786","line":131,"column":27,"nodeType":"619","endLine":135,"endColumn":29},{"ruleId":"785","severity":1,"message":"786","line":159,"column":27,"nodeType":"619","endLine":163,"endColumn":29},{"ruleId":"785","severity":1,"message":"786","line":187,"column":27,"nodeType":"619","endLine":191,"endColumn":29},{"ruleId":"785","severity":1,"message":"786","line":215,"column":27,"nodeType":"619","endLine":219,"endColumn":29},{"ruleId":"785","severity":1,"message":"786","line":243,"column":27,"nodeType":"619","endLine":247,"endColumn":29},{"ruleId":"657","severity":1,"message":"658","line":275,"column":17,"nodeType":"619","endLine":282,"endColumn":18},{"ruleId":"657","severity":1,"message":"658","line":329,"column":17,"nodeType":"619","endLine":336,"endColumn":18},{"ruleId":"785","severity":1,"message":"786","line":339,"column":23,"nodeType":"619","endLine":339,"endColumn":68},{"ruleId":"601","severity":1,"message":"784","line":1,"column":48,"nodeType":"603","messageId":"604","endLine":1,"endColumn":54},{"ruleId":"601","severity":1,"message":"611","line":32,"column":3,"nodeType":"603","messageId":"604","endLine":32,"endColumn":14},{"ruleId":"601","severity":1,"message":"787","line":38,"column":3,"nodeType":"603","messageId":"604","endLine":38,"endColumn":13},{"ruleId":"601","severity":1,"message":"788","line":39,"column":3,"nodeType":"603","messageId":"604","endLine":39,"endColumn":10},{"ruleId":"601","severity":1,"message":"747","line":40,"column":3,"nodeType":"603","messageId":"604","endLine":40,"endColumn":6},{"ruleId":"601","severity":1,"message":"789","line":41,"column":3,"nodeType":"603","messageId":"604","endLine":41,"endColumn":10},{"ruleId":"601","severity":1,"message":"790","line":42,"column":3,"nodeType":"603","messageId":"604","endLine":42,"endColumn":10},{"ruleId":"601","severity":1,"message":"778","line":43,"column":3,"nodeType":"603","messageId":"604","endLine":43,"endColumn":11},{"ruleId":"601","severity":1,"message":"779","line":44,"column":3,"nodeType":"603","messageId":"604","endLine":44,"endColumn":12},{"ruleId":"622","severity":1,"message":"791","line":149,"column":6,"nodeType":"624","endLine":149,"endColumn":65,"suggestions":"792"},{"ruleId":"793","severity":1,"message":"794","line":347,"column":19,"nodeType":"795","messageId":"684","endLine":347,"endColumn":32},"no-native-reassign",["796"],"no-negated-in-lhs",["797"],["796"],["797"],"no-unused-vars","'UncontrolledDropdown' is defined but never used.","Identifier","unusedVar","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownToggle' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'FormGroup' is defined but never used.","'Badge' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["796"],["797"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["798"],["796"],["797"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'getEmployeeCustomers' and 'match.params.id'. Either include them or remove the dependency array. If 'getEmployeeCustomers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["799"],["796"],["797"],"'CardFooter' is defined but never used.",["800"],["796"],["797"],["801"],"'withGoogleMap' is defined but never used.","'GoogleMap' is defined but never used.","'withScriptjs' is defined but never used.","'Marker' is defined but never used.","React Hook useEffect has missing dependencies: 'places' and 'travelMode'. Either include them or remove the dependency array.",["802"],["796"],["797"],"'Formik' is defined but never used.",["796"],["797"],["796"],["797"],"'Link' is defined but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["796"],["797"],"'setAlert' is defined but never used.",["796"],["797"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["796"],["797"],"'FormText' is defined but never used.",["796"],["797"],["796"],["797"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Container' is defined but never used.",["796"],["797"],["796"],["797"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'ReactDOM' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'grid' is assigned a value but never used.",["796"],["797"],"'BSAlert' is defined but never used.","'notify' is defined but never used.","'LoadScript' is defined but never used.","'InfoWindow' is defined but never used.","'DirectionsRenderer' is defined but never used.","'DirectionsService' is defined but never used.","'Polyline' is defined but never used.","'MapDirectionsRenderer' is defined but never used.","'Footer' is defined but never used.","'RoutingMachine' is defined but never used.","'LeafletMap' is defined but never used.","'key' is assigned a value but never used.","'markerIcon' is assigned a value but never used.","'containerStyle' is assigned a value but never used.","'locations' is assigned a value but never used.","'map' is assigned a value but never used.","'mapState' is assigned a value but never used.","'onMarkerClick' is assigned a value but never used.","'onInfoWindowClose' is assigned a value but never used.","'onLoad' is assigned a value but never used.","'onUnmount' is assigned a value but never used.","'centerPoint' is assigned a value but never used.","'setCenterPoint' is assigned a value but never used.","'ZOOM_LEVEL' is assigned a value but never used.","'mapRef' is assigned a value but never used.","'ListGroupItemHeading' is defined but never used.","'ListGroupItemText' is defined but never used.","'Yup' is defined but never used.","'Scrollbars' is defined but never used.","'ButtonGroup' is defined but never used.","'Pagination' is defined but never used.","'PaginationItem' is defined but never used.","'PaginationLink' is defined but never used.","'Tooltip' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'Line' is defined but never used.","'Moment' is defined but never used.","'List' is defined but never used.","'chartExample1' is defined but never used.","'map' is defined but never used.","'set' is defined but never used.","'customer' is defined but never used.","React Hook useEffect has a missing dependency: 'getEmployeeRoute'. Either include it or remove the dependency array. If 'getEmployeeRoute' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["803"],"'dontBookWithinDays' is assigned a value but never used.","'slots' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getEmployeeRoute' and 'user'. Either include them or remove the dependency array. If 'getEmployeeRoute' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["804"],"'repairPictureState' is assigned a value but never used.","'onDropRepair' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'logModal'. Either include it or remove the dependency array. You can also do a functional update 'setLogModal(l => ...)' if you only need 'logModal' in the 'setLogModal' call.",["805"],["806"],"'Nav' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'ToolkitProvider' is defined but never used.","'Search' is defined but never used.","'CSVExport' is defined but never used.",["796"],["797"],["796"],["797"],"'CardBody' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.",["807"],"'Media' is defined but never used.","'Table' is defined but never used.","'BootstrapTable' is defined but never used.",["808"],"'pagination' is assigned a value but never used.","'columns' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getEmployeeRoute', 'getEmployeeRouteRB', and 'user'. Either include them or remove the dependency array. If 'getEmployeeRouteRB' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["809"],["810"],["811"],"'routeBuilder' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dateSelected', 'getEmployeeRouteRB', 'loading', and 'selectedTech'. Either include them or remove the dependency array. If 'getEmployeeRouteRB' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["812"],"React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["813"],"'bounds' is assigned a value but never used.","'frequency' is assigned a value but never used.","'CardText' is defined but never used.","'CardTitle' is defined but never used.","'handleEmailSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.",["814"],"'useRef' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'clearCustomers'. Either exclude it or remove the dependency array. Outer scope values like 'clearCustomers' aren't valid dependencies because mutating them doesn't re-render the component.",["815"],"no-dupe-keys","Duplicate key 'scheduledDate'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"816","fix":"817"},{"desc":"818","fix":"819"},{"desc":"820","fix":"821"},{"desc":"822","fix":"823"},{"desc":"824","fix":"825"},{"desc":"826","fix":"827"},{"desc":"828","fix":"829"},{"desc":"830","fix":"831"},{"desc":"832","fix":"833"},{"desc":"834","fix":"835"},{"desc":"826","fix":"836"},{"desc":"837","fix":"838"},{"desc":"830","fix":"839"},{"desc":"832","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"desc":"845","fix":"846"},{"desc":"847","fix":"848"},"Update the dependencies array to be: [getSingleCustomer, getEmployees, match.params.id]",{"range":"849","text":"850"},"Update the dependencies array to be: [getEmployeeCustomers, getSingleEmployee, match.params.id]",{"range":"851","text":"852"},"Update the dependencies array to be: [getSingleEmployee, match.params.id]",{"range":"853","text":"854"},"Update the dependencies array to be: [getSingleCustomer, match.params.id]",{"range":"855","text":"856"},"Update the dependencies array to be: [getRouteLegs, places, travelMode]",{"range":"857","text":"858"},"Update the dependencies array to be: [getEmployeeRoute, user]",{"range":"859","text":"860"},"Update the dependencies array to be: [getEmployeeRoute, routeDay, user]",{"range":"861","text":"862"},"Update the dependencies array to be: [checklist, logModal]",{"range":"863","text":"864"},"Update the dependencies array to be: [logModal, serviceNotes]",{"range":"865","text":"866"},"Update the dependencies array to be: [active]",{"range":"867","text":"868"},{"range":"869","text":"860"},"Update the dependencies array to be: [getEmployeeRoute, getEmployeeRouteRB, routeDay, user]",{"range":"870","text":"871"},{"range":"872","text":"864"},{"range":"873","text":"866"},"Update the dependencies array to be: [customers, dateSelected, getEmployeeRouteRB, loading, selectedTech]",{"range":"874","text":"875"},"Update the dependencies array to be: [loading, routeList]",{"range":"876","text":"877"},"Update the dependencies array to be: [getServiceLogs, isAuthenticated, user]",{"range":"878","text":"879"},"Update the dependencies array to be: [getWorkOrders, getCustomers, getEmployees]",{"range":"880","text":"881"},[980,1013],"[getSingleCustomer, getEmployees, match.params.id]",[1069,1088],"[getEmployeeCustomers, getSingleEmployee, match.params.id]",[959,978],"[getSingleEmployee, match.params.id]",[1541,1560],"[getSingleCustomer, match.params.id]",[1424,1438],"[getRouteLegs, places, travelMode]",[3852,3858],"[getEmployeeRoute, user]",[10185,10195],"[getEmployeeRoute, routeDay, user]",[11291,11302],"[checklist, logModal]",[11417,11431],"[logModal, serviceNotes]",[1208,1210],"[active]",[1901,1907],[5869,5879],"[getEmployeeRoute, getEmployeeRouteRB, routeDay, user]",[6975,6986],[7101,7115],[3641,3652],"[customers, dateSelected, getEmployeeRouteRB, loading, selectedTech]",[4195,4206],"[loading, routeList]",[8259,8281],"[getServiceLogs, isAuthenticated, user]",[3594,3653],"[getWorkOrders, getCustomers, getEmployees]"]