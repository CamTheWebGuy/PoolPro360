[{"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\utils\\setAuthToken.js":"1","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\PumpManager.js":"2","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\index.js":"3","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\DeleteCustomerImage.js":"4","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditCustomerInformation.js":"5","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewUser.js":"6","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditUser.js":"7","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\routing\\PrivateRoute.js":"8","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ManageChecklist.js":"9","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\CustomManager.js":"10","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\App.js":"11","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ManageEquipment.js":"12","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\MapDirectionsRenderer.js":"13","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Users.js":"14","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\utils\\RoutingMachine.js":"15","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Login.js":"16","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\map.js":"17","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\auth.js":"18","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\alert.js":"19","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormSettingsController.js":"20","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\AddCustomers.js":"21","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\variables\\chart.js":"22","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditServiceNoteModal.js":"23","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\AddUser.js":"24","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\FilterManager.js":"25","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\LeafletMap.js":"26","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormItemController.js":"27","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\HeaterManager.js":"28","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormCreator.js":"29","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\customer.js":"30","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Alert.js":"31","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Routing.js":"32","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\CleanerManager..js":"33","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\customer.js":"34","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Customers.js":"35","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewCustomer.js":"36","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\map.js":"37","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\dashboard\\Dashboard.js":"38","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\employee.js":"39","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\landing\\LandingContent.js":"40","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\BookingForms.js":"41","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\index.js":"42","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Pricing.js":"43","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\dashboard\\Sidebar.js":"44","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewMyRoute.js":"45","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\RouteBuilder.js":"46"},{"size":251,"mtime":1607810175854,"results":"47","hashOfConfig":"48"},{"size":31841,"mtime":1611560604114,"results":"49","hashOfConfig":"48"},{"size":193,"mtime":1608277914563,"results":"50","hashOfConfig":"48"},{"size":6621,"mtime":1609984630990,"results":"51","hashOfConfig":"48"},{"size":20895,"mtime":1611882314629,"results":"52","hashOfConfig":"48"},{"size":7873,"mtime":1612486761185,"results":"53","hashOfConfig":"48"},{"size":15595,"mtime":1611864494003,"results":"54","hashOfConfig":"48"},{"size":656,"mtime":1607929043071,"results":"55","hashOfConfig":"48"},{"size":17827,"mtime":1610845489210,"results":"56","hashOfConfig":"48"},{"size":310882,"mtime":1611610616445,"results":"57","hashOfConfig":"48"},{"size":4009,"mtime":1612231631490,"results":"58","hashOfConfig":"48"},{"size":20464,"mtime":1612642905643,"results":"59","hashOfConfig":"48"},{"size":1782,"mtime":1612079344403,"results":"60","hashOfConfig":"48"},{"size":8508,"mtime":1611909926558,"results":"61","hashOfConfig":"48"},{"size":618,"mtime":1612040618363,"results":"62","hashOfConfig":"48"},{"size":6051,"mtime":1607980867195,"results":"63","hashOfConfig":"48"},{"size":229,"mtime":1609440617664,"results":"64","hashOfConfig":"48"},{"size":1135,"mtime":1612654164168,"results":"65","hashOfConfig":"48"},{"size":388,"mtime":1603849544318,"results":"66","hashOfConfig":"48"},{"size":1528,"mtime":1607641461449,"results":"67","hashOfConfig":"48"},{"size":23754,"mtime":1612061547549,"results":"68","hashOfConfig":"48"},{"size":16282,"mtime":1606983872075,"results":"69","hashOfConfig":"48"},{"size":3875,"mtime":1610583173823,"results":"70","hashOfConfig":"48"},{"size":14775,"mtime":1611792910356,"results":"71","hashOfConfig":"48"},{"size":23820,"mtime":1611460371256,"results":"72","hashOfConfig":"48"},{"size":883,"mtime":1612040727773,"results":"73","hashOfConfig":"48"},{"size":12118,"mtime":1612039260163,"results":"74","hashOfConfig":"48"},{"size":45331,"mtime":1611460298205,"results":"75","hashOfConfig":"48"},{"size":12996,"mtime":1612039225983,"results":"76","hashOfConfig":"48"},{"size":1997,"mtime":1612484246959,"results":"77","hashOfConfig":"48"},{"size":837,"mtime":1607915838635,"results":"78","hashOfConfig":"48"},{"size":5657,"mtime":1612341693260,"results":"79","hashOfConfig":"48"},{"size":16370,"mtime":1611479173382,"results":"80","hashOfConfig":"48"},{"size":18189,"mtime":1612943779592,"results":"81","hashOfConfig":"48"},{"size":8413,"mtime":1612053439841,"results":"82","hashOfConfig":"48"},{"size":67578,"mtime":1612944140385,"results":"83","hashOfConfig":"48"},{"size":389,"mtime":1609440084910,"results":"84","hashOfConfig":"48"},{"size":200974,"mtime":1612991098798,"results":"85","hashOfConfig":"48"},{"size":550,"mtime":1611801911168,"results":"86","hashOfConfig":"48"},{"size":26123,"mtime":1606952337934,"results":"87","hashOfConfig":"48"},{"size":6614,"mtime":1607224832048,"results":"88","hashOfConfig":"48"},{"size":291,"mtime":1609440579433,"results":"89","hashOfConfig":"48"},{"size":12447,"mtime":1606954658913,"results":"90","hashOfConfig":"48"},{"size":12697,"mtime":1612911484783,"results":"91","hashOfConfig":"48"},{"size":2376,"mtime":1612646495317,"results":"92","hashOfConfig":"48"},{"size":37537,"mtime":1612910025501,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1ixd2dz",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"161"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\utils\\setAuthToken.js",[],["224","225"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\PumpManager.js",[],["226","227"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\index.js",[],["228","229"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\DeleteCustomerImage.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243"],"import React, { useState, useEffect, Fragment } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  Badge\r\n} from 'reactstrap';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getSingleCustomer } from '../../actions/customer';\r\n\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Footer from '../Layout/Footer';\r\n\r\nconst DeleteCustomerImage = ({\r\n  getSingleCustomer,\r\n  customer: { customer, singleLoading },\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getSingleCustomer(match.params.id);\r\n  }, [getSingleCustomer, match.params.id]);\r\n\r\n  const [loadingDeleteImage, setLoadingDeleteImage] = useState(false);\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='customers' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-12 col-12'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/'>\r\n                          <i className='fas fa-home' />\r\n                        </Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/dashboard'>Dashboard</Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/customers'>Customers</Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to={`/customers/${match.params.id}`}>\r\n                          {match.params.id}\r\n                        </Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <Link to={`/customers/${match.params.id}/deleteImage`}>\r\n                          Delete Customer Image\r\n                        </Link>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Container className='mgn-ng-top-60'>\r\n          <Card>\r\n            <CardHeader>\r\n              {' '}\r\n              <div className='row align-items-center'>\r\n                <div className='col-8'>\r\n                  <h3 className='mb-0'>Delete Customer Image(s)</h3>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {!customer || singleLoading ? (\r\n                <Fragment>\r\n                  <div className='text-center'>\r\n                    <h4>Loading Data...</h4>\r\n                    <SpinnerCircular\r\n                      size={54}\r\n                      thickness={180}\r\n                      speed={100}\r\n                      color='rgba(57, 125, 172, 1)'\r\n                      secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                    />\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                <Row>\r\n                  {/* <img\r\n                  src='https://di2ponv0v5otw.cloudfront.net/posts/2019/10/22/5daf2816edb3b7766f83f1af/s_5daf2819edb3b7766f83f1b7.jpg'\r\n                  alt=''\r\n                /> */}\r\n                  {customer[0].images.map(image => (\r\n                    <Fragment key={image._id}>\r\n                      <Col lg='auto' className='mgn-btm-50'>\r\n                        {' '}\r\n                        <img\r\n                          src={image.url}\r\n                          className='max-width-250 max-height-127 mgn-btm-10'\r\n                        />\r\n                        <div className='text-center'>\r\n                          <Button\r\n                            color='danger'\r\n                            onClick={async e => {\r\n                              setLoadingDeleteImage(true);\r\n                              const config = {\r\n                                headers: {\r\n                                  'Content-Type': 'application/json'\r\n                                }\r\n                              };\r\n                              const s3Object = image.url.split('poolpro360/');\r\n\r\n                              const s3ObjectId = s3Object[1];\r\n\r\n                              const body = JSON.stringify({\r\n                                objectId: image._id,\r\n                                s3Object: s3ObjectId\r\n                              });\r\n                              await axios.post(\r\n                                `/api/customers/${match.params.id}/deleteImage`,\r\n                                body,\r\n                                config\r\n                              );\r\n                              setLoadingDeleteImage(false);\r\n                              await getSingleCustomer(match.params.id);\r\n                            }}\r\n                          >\r\n                            {loadingDeleteImage ? (\r\n                              <span>Processing...</span>\r\n                            ) : (\r\n                              <span>Delete Image</span>\r\n                            )}\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Fragment>\r\n                  ))}\r\n                </Row>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n\r\n          <Footer />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDeleteCustomerImage.propTypes = {\r\n  getSingleCustomer: PropTypes.func.isRequired,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  customer: state.customer.singleCustomer\r\n});\r\n\r\nexport default connect(mapStateToProps, { getSingleCustomer })(\r\n  DeleteCustomerImage\r\n);\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditCustomerInformation.js",["244"],"import React, { Fragment, useState, useRef, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Formik } from 'formik';\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Alert from '../Layout/Alert';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Input,\r\n  Form,\r\n  Label,\r\n  FormGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody\r\n} from 'reactstrap';\r\n\r\nimport { getSingleCustomer, updateCustomer } from '../../actions/customer';\r\nimport { getEmployees } from '../../actions/employee';\r\n\r\nconst EditCustomerInformation = ({\r\n  getSingleCustomer,\r\n  updateCustomer,\r\n  getEmployees,\r\n  customer: { customer, singleLoading },\r\n  employees: { employees, loading },\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getSingleCustomer(match.params.id);\r\n    getEmployees();\r\n  }, [getSingleCustomer, getEmployees]);\r\n\r\n  const formRef = useRef();\r\n  const handleSubmit = () => {\r\n    if (formRef.current) {\r\n      formRef.current.handleSubmit();\r\n    }\r\n  };\r\n\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='customers' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-12'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/'>\r\n                          <i className='fas fa-home' />\r\n                        </Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/dashboard'>Dashboard</Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/customers'>Customers</Link>\r\n                      </li>\r\n                      {customer && customer.length >= 1 && (\r\n                        <li className='breadcrumb-item'>\r\n                          <Link to={`/customers/${match.params.id}`}>\r\n                            {customer[0].firstName} {customer[0].lastName}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n                      <li className='breadcrumb-item active'>\r\n                        <Link to='/customers/add'>Edit Customer Details</Link>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Container className='mgn-ng-top-60'>\r\n          <Card>\r\n            <CardHeader>\r\n              <Row className='align-items-center'>\r\n                <Col sm={{ size: 8 }}>\r\n                  <h3 className='mb-0'>Manage Customer Details:</h3>\r\n                </Col>\r\n                <Col sm={{ size: 4 }} className='d-none d-lg-block'>\r\n                  <div className='text-right'>\r\n                    <Button\r\n                      type='submit'\r\n                      color='success'\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      {loadingSave ? (\r\n                        <span>\r\n                          <SpinnerCircular\r\n                            size={24}\r\n                            thickness={180}\r\n                            speed={100}\r\n                            color='rgba(57, 125, 172, 1)'\r\n                            secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                          />{' '}\r\n                          Processing...\r\n                        </span>\r\n                      ) : (\r\n                        <span>Save Changes</span>\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n                <Col\r\n                  sm={{ size: 4 }}\r\n                  className='d-block d-sm-block d-md-block d-lg-none'\r\n                >\r\n                  <br />\r\n                  <Button type='submit' color='success' onClick={handleSubmit}>\r\n                    {loadingSave ? (\r\n                      <span>\r\n                        <SpinnerCircular\r\n                          size={24}\r\n                          thickness={180}\r\n                          speed={100}\r\n                          color='rgba(57, 125, 172, 1)'\r\n                          secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                        />{' '}\r\n                        Processing...\r\n                      </span>\r\n                    ) : (\r\n                      <span>Save Changes</span>\r\n                    )}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </CardHeader>\r\n            {customer && !singleLoading ? (\r\n              <CardBody>\r\n                <Formik\r\n                  initialValues={{\r\n                    firstName: customer[0].firstName,\r\n                    lastName: customer[0].lastName,\r\n                    email: customer[0].email,\r\n                    mobilePhone: customer[0].mobilePhone,\r\n                    serviceAddress: customer[0].serviceAddress,\r\n                    serviceCity: customer[0].serviceCity,\r\n                    serviceState: customer[0].serviceState,\r\n                    serviceZip: customer[0].serviceZip,\r\n                    gateCode: customer[0].gateCode,\r\n                    canText: customer[0].canText,\r\n                    poolType: customer[0].poolType,\r\n                    technician: customer[0].technician,\r\n                    servicePackageAndRate: customer[0].servicePackageAndRate,\r\n                    altPhone: customer[0].altPhone\r\n                  }}\r\n                  innerRef={formRef}\r\n                  onSubmit={async data => {\r\n                    // console.log(data);\r\n                    setLoadingSave(true);\r\n                    await updateCustomer(match.params.id, data);\r\n                    setLoadingSave(false);\r\n                  }}\r\n                  render={({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    validateForm,\r\n                    isValid\r\n                  }) => (\r\n                    <Fragment>\r\n                      <Form>\r\n                        <h6 className='heading-small text-muted mb-4'>\r\n                          Customer Information\r\n                        </h6>\r\n                        <div className='pl-lg-4'>\r\n                          <Row>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='firstName'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  First name\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='firstName'\r\n                                  placeholder='John'\r\n                                  value={values.firstName}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='lastName'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Last name\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='lastName'\r\n                                  value={values.lastName}\r\n                                  placeholder='Doe'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='mobilePhone'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Mobile Number\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='mobilePhone'\r\n                                  value={values.mobilePhone}\r\n                                  placeholder='(555) 555-5555'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='email'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Email address\r\n                                </Label>\r\n                                <Input\r\n                                  type='email'\r\n                                  name='email'\r\n                                  value={values.email}\r\n                                  placeholder='jessie@example.com'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='canText'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Can text?\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='canText'\r\n                                  value={values.canText}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>N/A</option>\r\n                                  <option>Yes</option>\r\n                                  <option>No</option>\r\n                                </Input>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='6'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='altPhone'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Alt Phone\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='altPhone'\r\n                                  value={values.altPhone}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                  placeholder='(555) 123-4567'\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                        <hr className='my-4' />\r\n                        {/* Address */}\r\n                        <h6 className='heading-small text-muted mb-4'>\r\n                          Service Address\r\n                        </h6>\r\n                        <div className='pl-lg-4'>\r\n                          <Row>\r\n                            <Col lg='12'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='serviceAddress'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Service Address\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='serviceAddress'\r\n                                  value={values.serviceAddress}\r\n                                  placeholder='2070 Libby Street'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col lg='4'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='serviceCity'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  City\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='serviceCity'\r\n                                  value={values.serviceCity}\r\n                                  placeholder='Beverly Hills'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='4'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='serviceState'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  State\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='serviceState'\r\n                                  value={values.serviceState}\r\n                                  placeholder='CA'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg='4'>\r\n                              <FormGroup>\r\n                                <Label\r\n                                  for='serviceZip'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Zip\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='serviceZip'\r\n                                  value={values.serviceZip}\r\n                                  placeholder='90210'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                          <hr className='my-4' />\r\n\r\n                          <h6 className='heading-small text-muted mb-4'>\r\n                            Service Information\r\n                          </h6>\r\n                          <div className='pl-lg-4'>\r\n                            <Row>\r\n                              <Col lg='4'>\r\n                                <Label\r\n                                  for='gateCode'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Gate/Lock Code\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='gateCode'\r\n                                  value={values.gateCode}\r\n                                  placeholder='12345'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </Col>\r\n                              <Col lg='4'>\r\n                                <Label\r\n                                  for='servicePackage'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Rate / Service Package\r\n                                </Label>\r\n                                <Input\r\n                                  type='text'\r\n                                  name='servicePackageAndRate'\r\n                                  value={values.servicePackageAndRate}\r\n                                  placeholder='12345'\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </Col>\r\n                              <Col lg='4'>\r\n                                <Label\r\n                                  for='technician'\r\n                                  className='form-control-label'\r\n                                >\r\n                                  Assigned Technician\r\n                                </Label>\r\n                                <Input\r\n                                  type='select'\r\n                                  name='technician'\r\n                                  value={values.technician}\r\n                                  onChange={handleChange}\r\n                                  onBlur={handleBlur}\r\n                                >\r\n                                  <option>N/A</option>\r\n\r\n                                  {employees.map(employee => (\r\n                                    <option\r\n                                      key={employee._id}\r\n                                      value={employee._id}\r\n                                    >\r\n                                      {employee.firstName} {employee.lastName}\r\n                                    </option>\r\n                                  ))}\r\n                                </Input>\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n                        </div>\r\n                      </Form>\r\n                    </Fragment>\r\n                  )}\r\n                />\r\n              </CardBody>\r\n            ) : (\r\n              <Fragment>\r\n                <div className='text-center'>\r\n                  <h4>Loading Data...</h4>\r\n                  <SpinnerCircular\r\n                    size={54}\r\n                    thickness={180}\r\n                    speed={100}\r\n                    color='rgba(57, 125, 172, 1)'\r\n                    secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                  />\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditCustomerInformation.propTypes = {\r\n  getSingleCustomer: PropTypes.func.isRequired,\r\n  updateCustomer: PropTypes.func.isRequired,\r\n  getEmployees: PropTypes.func.isRequired,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  customer: state.customer.singleCustomer,\r\n  employees: state.employee\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getSingleCustomer,\r\n  updateCustomer,\r\n  getEmployees\r\n})(EditCustomerInformation);\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewUser.js",["245","246","247","248","249","250","251","252","253","254","255","256","257","258"],"import React, { Fragment, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  Badge\r\n} from 'reactstrap';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { SpinnerCircular } from 'spinners-react';\r\nimport {\r\n  getSingleEmployee,\r\n  getEmployeeCustomers\r\n} from '../../actions/employee';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Alert from '../Layout/Alert';\r\nimport Footer from '../Layout/Footer';\r\n\r\nconst ViewUser = ({\r\n  getSingleEmployee,\r\n  getEmployeeCustomers,\r\n  employee,\r\n  customers: { customers, loading },\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getSingleEmployee(match.params.id);\r\n    getEmployeeCustomers(match.params.id);\r\n  }, [getSingleEmployee]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='users' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div\r\n          className='header pb-6 d-flex align-items-center'\r\n          style={{\r\n            minHeight: '500px',\r\n            backgroundImage:\r\n              'url(https://www.lathampool.com/wp-content/uploads/2020/01/bh-header.jpg)',\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center top'\r\n          }}\r\n        >\r\n          {/* Mask */}\r\n          <span className='mask bg-gradient-default opacity-8' />\r\n          {/* Header container */}\r\n          <div className='container-fluid d-flex align-items-center'>\r\n            <div className='row'>\r\n              <div className='col-md-12'>\r\n                {!employee[0] ? (\r\n                  <Fragment>\r\n                    <div className='text-center'>\r\n                      <h4>Loading Data...</h4>\r\n                      <SpinnerCircular\r\n                        size={54}\r\n                        thickness={180}\r\n                        speed={100}\r\n                        color='rgba(57, 125, 172, 1)'\r\n                        secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                      />\r\n                    </div>\r\n                  </Fragment>\r\n                ) : (\r\n                  <Fragment>\r\n                    <h1 className='display-2 text-white mb-0'>\r\n                      {employee[0].firstName} {employee[0].lastName}\r\n                    </h1>\r\n                    <p className='text-white mt-0 mb-5'>\r\n                      {employee[0].email}\r\n                      <br />\r\n                      <Badge color='success'>\r\n                        <strong>{employee[0].role}</strong>\r\n                      </Badge>{' '}\r\n                      <br />\r\n                    </p>\r\n                  </Fragment>\r\n                )}\r\n\r\n                <Link\r\n                  to={`/users/${match.params.id}/edit`}\r\n                  className='btn btn-neutral mb-4'\r\n                >\r\n                  Edit User Information\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Container className='mgn-ng-top-60'>\r\n          <Row>\r\n            <Col md='6'>\r\n              <Card>\r\n                <CardHeader>\r\n                  <h3 className='mb-0'>User Information </h3>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {!employee || !employee[0] ? (\r\n                    <div className='text-center'>\r\n                      <h4>Loading Data...</h4>\r\n                      <SpinnerCircular\r\n                        size={54}\r\n                        thickness={180}\r\n                        speed={100}\r\n                        color='rgba(57, 125, 172, 1)'\r\n                        secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <Row>\r\n                        <Col md='6'>\r\n                          <div className='form-control-label'>First name</div>\r\n                          {employee[0].firstName}\r\n                        </Col>\r\n                        <Col md='6'>\r\n                          <div className='form-control-label'>Last name</div>\r\n                          {employee[0].lastName}\r\n                        </Col>\r\n                      </Row>\r\n                      <br />\r\n                      <Row>\r\n                        <Col md='6'>\r\n                          <div className='form-control-label'>Email</div>\r\n                          {employee[0].email}\r\n                        </Col>\r\n                        <Col md='6'>\r\n                          <div className='form-control-label'>Phone</div>\r\n                          {employee[0].phone}\r\n                        </Col>\r\n                      </Row>\r\n                      <br />\r\n                      <Row>\r\n                        <Col md='12'>\r\n                          <div className='form-control-label'>Role</div>\r\n                          {employee[0].role}\r\n                        </Col>\r\n                      </Row>\r\n                    </Fragment>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col md='6'>\r\n              <Card>\r\n                <CardHeader>\r\n                  <h3 className='mb-0'>Assigned Customers</h3>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {!customers || !customers.length >= 1 ? (\r\n                    <Fragment>\r\n                      <div className='text-center'>\r\n                        <i className='fas fa-exclamation-circle'></i>\r\n                        <h3>No Customers Assigned</h3>\r\n                      </div>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      {customers.map(customer => (\r\n                        <ListGroup key={customer._id}>\r\n                          <ListGroupItem>\r\n                            <Link to={`/customers/${customer._id}`}>\r\n                              {customer.firstName} {customer.lastName} <br />\r\n                              <small>\r\n                                {customer.serviceAddress},{' '}\r\n                                {customer.serviceCity}, {customer.serviceState}{' '}\r\n                                {customer.serviceZip}\r\n                                <br />\r\n                                {customer.isScheduled ? (\r\n                                  <Badge color='success'>\r\n                                    Scheduled {customer.frequency} for{' '}\r\n                                    {customer.scheduledDay}'s{' '}\r\n                                  </Badge>\r\n                                ) : (\r\n                                  <Badge color='danger'>Not Scheduled</Badge>\r\n                                )}\r\n                              </small>\r\n                            </Link>\r\n                          </ListGroupItem>\r\n                        </ListGroup>\r\n                      ))}\r\n                    </Fragment>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Footer />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nViewUser.propTypes = {\r\n  getSingleEmployee: PropTypes.func.isRequired,\r\n  getEmployeeCustomers: PropTypes.func.isRequired,\r\n  employee: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  employee: state.employee.singleEmployee,\r\n  customers: state.customer\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getSingleEmployee,\r\n  getEmployeeCustomers\r\n})(ViewUser);\r\n",["259","260"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditUser.js",["261","262"],"import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { SpinnerCircular } from 'spinners-react';\r\nimport {\r\n  updateEmployee,\r\n  getSingleEmployee,\r\n  updateEmployeePassword\r\n} from '../../actions/employee';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Alert from '../Layout/Alert';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Input,\r\n  Form,\r\n  Label,\r\n  FormGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter\r\n} from 'reactstrap';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst EditUser = ({\r\n  match,\r\n  updateEmployee,\r\n  getSingleEmployee,\r\n  updateEmployeePassword,\r\n  employee\r\n}) => {\r\n  const [savingInfo, setSavingInfo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getSingleEmployee(match.params.id);\r\n  }, [getSingleEmployee]);\r\n\r\n  const lowercaseRegex = /(?=.*[a-z])/;\r\n  const uppercaseRegex = /(?=.*[A-X])/;\r\n  const numericRegex = /(?=.*[0-9])/;\r\n\r\n  const passwordSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n      .matches(lowercaseRegex, 'Password must contain lowercase letter')\r\n      .matches(uppercaseRegex, 'Password must contain uppercase letter')\r\n      .matches(numericRegex, 'Password must contain a number')\r\n      .min(8, 'Password must be at least 8 characters long')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\r\n      .required('Please Confirm Password')\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='users' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/'>\r\n                          <i className='fas fa-home' />\r\n                        </Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/dashboard'>Dashboard</Link>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <Link to='/users'>Users</Link>\r\n                      </li>\r\n                      {employee.length >= 1 && (\r\n                        <li className='breadcrumb-item'>\r\n                          <Link to={`/users/${match.params.id}/view`}>\r\n                            {employee[0].firstName} {employee[0].lastName}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n                      <li className='breadcrumb-item active'>\r\n                        <Link to={`/users/${match.params.id}/edit`}>\r\n                          Edit User\r\n                        </Link>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Container className='mgn-ng-top-60'>\r\n          <Card>\r\n            <CardHeader>\r\n              <Row className='align-items-center'>\r\n                <Col sm={{ size: 8 }}>\r\n                  <h3 className='mb-0'>Edit User:</h3>\r\n                </Col>\r\n              </Row>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {!employee || !employee.length >= 1 ? (\r\n                <Fragment>\r\n                  <div className='text-center'>\r\n                    <h4>Loading Data...</h4>\r\n                    <SpinnerCircular\r\n                      size={54}\r\n                      thickness={180}\r\n                      speed={100}\r\n                      color='rgba(57, 125, 172, 1)'\r\n                      secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                    />\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <Formik\r\n                    initialValues={{\r\n                      firstName: employee[0].firstName,\r\n                      lastName: employee[0].lastName,\r\n                      email: employee[0].email,\r\n                      phone: employee[0].phone,\r\n                      role: employee[0].role\r\n                    }}\r\n                    onSubmit={async data => {\r\n                      setSavingInfo(true);\r\n                      await updateEmployee(match.params.id, data);\r\n                      setSavingInfo(false);\r\n                    }}\r\n                    render={({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      validateForm,\r\n                      isValid\r\n                    }) => (\r\n                      <Fragment>\r\n                        <Form>\r\n                          <h6 className='heading-small text-muted mb-4'>\r\n                            User Information\r\n                          </h6>\r\n                          <div className='pl-lg-4'>\r\n                            <Row>\r\n                              <Col md='3'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='firstName'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    First Name\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='text'\r\n                                    name='firstName'\r\n                                    placeholder='Johnny'\r\n                                    value={values.firstName}\r\n                                    onChange={handleChange}\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md='3'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='lastName'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Last Name\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='text'\r\n                                    name='lastName'\r\n                                    value={values.lastName}\r\n                                    placeholder='Appleseed'\r\n                                    onChange={handleChange}\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md='6'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='email'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Email\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='email'\r\n                                    name='email'\r\n                                    value={values.email}\r\n                                    placeholder='johnny@example.com'\r\n                                    onChange={handleChange}\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col md='6'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='role'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Role\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='select'\r\n                                    name='role'\r\n                                    value={values.role}\r\n                                    onChange={handleChange}\r\n                                  >\r\n                                    <option>Technician</option>\r\n                                    <option>Logistics</option>\r\n                                    <option>Admin</option>\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md='6'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='Phone'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Phone\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='text'\r\n                                    name='phone'\r\n                                    value={values.phone}\r\n                                    placeholder='(555) 555-5555'\r\n                                    onChange={handleChange}\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Button\r\n                              color='success'\r\n                              type='submit'\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              {savingInfo ? (\r\n                                <span>\r\n                                  {' '}\r\n                                  <SpinnerCircular\r\n                                    size={24}\r\n                                    thickness={180}\r\n                                    speed={100}\r\n                                    color='rgba(57, 125, 172, 1)'\r\n                                    secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                                  />{' '}\r\n                                  Processing...\r\n                                </span>\r\n                              ) : (\r\n                                <span>Save User Info</span>\r\n                              )}\r\n                            </Button>\r\n                          </div>\r\n                        </Form>\r\n                      </Fragment>\r\n                    )}\r\n                  />\r\n\r\n                  <hr className='my-4' />\r\n\r\n                  <Formik\r\n                    initialValues={{\r\n                      password: '',\r\n                      confirmPassword: ''\r\n                    }}\r\n                    onSubmit={async data => {\r\n                      updateEmployeePassword(match.params.id, data);\r\n                    }}\r\n                    validationSchema={passwordSchema}\r\n                    render={({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      validateForm,\r\n                      isValid\r\n                    }) => (\r\n                      <Fragment>\r\n                        <h6 className='heading-small text-muted mb-4'>\r\n                          Change Password\r\n                        </h6>\r\n                        <div className='pl-lg-4'>\r\n                          <Form>\r\n                            <Row>\r\n                              <Col md='6'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='password'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    New Password\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='password'\r\n                                    name='password'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                  {errors.password && touched.password && (\r\n                                    <p className='color-red'>\r\n                                      {errors.password}\r\n                                    </p>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md='6'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='confirmPassword'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Confirm New Password\r\n                                  </Label>\r\n                                  <Input\r\n                                    type='password'\r\n                                    name='confirmPassword'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                  />\r\n                                  {errors.confirmPassword &&\r\n                                    touched.confirmPassword && (\r\n                                      <p className='color-red'>\r\n                                        {errors.confirmPassword}\r\n                                      </p>\r\n                                    )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Button\r\n                              color='success'\r\n                              type='submit'\r\n                              onClick={handleSubmit}\r\n                            >\r\n                              Save New Password\r\n                            </Button>\r\n                          </Form>\r\n                        </div>\r\n                      </Fragment>\r\n                    )}\r\n                  />\r\n                </Fragment>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditUser.propTypes = {\r\n  updateEmployee: PropTypes.func.isRequired,\r\n  getSingleEmployee: PropTypes.func.isRequired,\r\n  updateEmployeePassword: PropTypes.func.isRequired,\r\n  employee: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  employee: state.employee.singleEmployee\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateEmployee,\r\n  getSingleEmployee,\r\n  updateEmployeePassword\r\n})(EditUser);\r\n",["263","264"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ManageChecklist.js",[],["265","266"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\CustomManager.js",[],["267","268"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\App.js",[],["269","270"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ManageEquipment.js",["271","272","273","274","275","276"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\MapDirectionsRenderer.js",["277","278","279","280","281"],"import React, { useState, useEffect, Fragment } from 'react';\r\n/* global google */\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  DirectionsRenderer\r\n} from '@react-google-maps/api';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getRouteLegs } from '../../actions/map';\r\n\r\nconst MapDirectionsRenderer = ({ places, travelMode, getRouteLegs }) => {\r\n  const [directions, setDirections] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // const { places, travelMode } = props;\r\n\r\n    const waypoints = places.map(p => ({\r\n      location: {\r\n        lat: parseFloat(p.serviceLat),\r\n        lng: parseFloat(p.serviceLng)\r\n      },\r\n      stopover: true\r\n    }));\r\n\r\n    // console.log(waypoints[waypoints.length - 1]);\r\n    const origin = waypoints.shift().location;\r\n    const destination = waypoints.pop().location;\r\n\r\n    const directionsService = new google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        waypoints: waypoints,\r\n        travelMode: travelMode\r\n      },\r\n      (result, status) => {\r\n        if (status === 'OK') {\r\n          setDirections(result);\r\n          getRouteLegs(result.routes[0].legs);\r\n        } else {\r\n          console.log(result);\r\n          setError(result);\r\n        }\r\n      }\r\n    );\r\n  }, [getRouteLegs]);\r\n\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {directions && <DirectionsRenderer directions={directions} />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMapDirectionsRenderer.propTypes = {\r\n  getRouteLegs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { getRouteLegs })(MapDirectionsRenderer);\r\n",["282","283"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Users.js",["284","285","286","287","288","289","290","291","292","293"],"import React, { Fragment, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Formik } from 'formik';\r\n\r\nimport { getEmployees, markEmployeeInactive } from '../../actions/employee';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Footer from '../Layout/Footer';\r\nimport Alert from '../Layout/Alert';\r\n\r\nimport {\r\n  Button,\r\n  Badge,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label\r\n} from 'reactstrap';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport\r\n} from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst pagination = paginationFactory({\r\n  page: 1,\r\n  alwaysShowAllBtns: true,\r\n  showTotal: true,\r\n  withFirstAndLast: false,\r\n  sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <div className='dataTables_length' id='datatable-basic_length'>\r\n      <select\r\n        name='datatable-basic_length'\r\n        aria-controls='datatable-basic'\r\n        className='form-control form-control-sm'\r\n        style={{ width: '30%' }}\r\n        onChange={e => onSizePerPageChange(e.target.value)}\r\n      >\r\n        <option value='10'>10</option>\r\n        <option value='25'>25</option>\r\n        <option value='50'>50</option>\r\n        <option value='100'>100</option>\r\n      </select>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst statusFormatter = cell => {\r\n  if (cell === true) {\r\n    return <Badge color='success'>Active</Badge>;\r\n  } else if (cell === false) {\r\n    return <Badge color='secondary'>Inactive</Badge>;\r\n  } else {\r\n    return <Badge color='dark'>N/A</Badge>;\r\n  }\r\n};\r\n\r\nconst Users = ({\r\n  getEmployees,\r\n  markEmployeeInactive,\r\n  employees: { employees, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, [getEmployees]);\r\n\r\n  const actionFormatter = cell => {\r\n    return (\r\n      <UncontrolledDropdown>\r\n        <DropdownToggle\r\n          className='btn-icon-only text-light'\r\n          color=''\r\n          role='button'\r\n          size='sm'\r\n        >\r\n          <i className='fas fa-ellipsis-v' />\r\n        </DropdownToggle>\r\n        <DropdownMenu className='dropdown-menu-arrow' right>\r\n          <DropdownItem tag={Link} to={`/users/${cell}/view`}>\r\n            View User\r\n          </DropdownItem>\r\n          <DropdownItem tag={Link} to={`/users/${cell}/edit`}>\r\n            Edit User\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            onClick={async () => {\r\n              await markEmployeeInactive(cell);\r\n              getEmployees();\r\n            }}\r\n          >\r\n            Toggle User Active\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'firstName',\r\n      text: 'First Name'\r\n    },\r\n    {\r\n      dataField: 'lastName',\r\n      text: 'Last Name'\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'Email/Username'\r\n    },\r\n    {\r\n      dataField: 'role',\r\n      text: 'Role'\r\n    },\r\n    {\r\n      dataField: 'isActive',\r\n      text: 'Status',\r\n      formatter: statusFormatter\r\n    },\r\n    {\r\n      dataField: '_id',\r\n      text: 'Actions',\r\n      formatter: actionFormatter\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='users' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/users'>Users</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Container className='mgn-ng-top-60'>\r\n          <div className='card'>\r\n            <div className='card-header'>\r\n              <div className='row align-items-center'>\r\n                <div className='col-8'>\r\n                  <h3 className='mb-0'>Users </h3>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                  <Link className='float-right btn btn-primary' to='/users/add'>\r\n                    <span className='btn-inner--icon'>\r\n                      <i className='fas fa-user-plus'></i>\r\n                    </span>{' '}\r\n                    <span className='btn-inner--text'>Add User</span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='card-body'>\r\n              {loading ? (\r\n                <Fragment>\r\n                  <div className='text-center'>\r\n                    <h4>Locating Users...</h4>\r\n                    <SpinnerCircular\r\n                      size={54}\r\n                      thickness={180}\r\n                      speed={100}\r\n                      color='rgba(57, 125, 172, 1)'\r\n                      secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                    />\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                <ToolkitProvider\r\n                  data={employees}\r\n                  keyField='_id'\r\n                  columns={columns}\r\n                  search\r\n                  exportCSV\r\n                >\r\n                  {props => (\r\n                    <div\r\n                      className='py-4 table-responsive'\r\n                      style={{ padding: '25px' }}\r\n                    >\r\n                      <div id='datatable-basic_filter' className='px-4 pb-1'>\r\n                        <Row>\r\n                          <Col md='6'>\r\n                            <ExportCSVButton\r\n                              className='buttons-copy buttons-html5 btn-sm'\r\n                              {...props.csvProps}\r\n                            >\r\n                              <i className='ni ni-align-left-2'></i> Export CSV\r\n                            </ExportCSVButton>\r\n                          </Col>\r\n                          <Col md={{ size: 'auto', offset: 3 }}>\r\n                            <SearchBar\r\n                              className='form-control-sm'\r\n                              placeholder='Search Users'\r\n                              {...props.searchProps}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <BootstrapTable\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        pagination={pagination}\r\n                        bordered={false}\r\n                        wrapperClasses='table-responsive mh-330'\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nUsers.propTypes = {\r\n  getEmployees: PropTypes.func.isRequired,\r\n  markEmployeeInactive: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  employees: state.employee\r\n});\r\n\r\nexport default connect(mapStateToProps, { getEmployees, markEmployeeInactive })(\r\n  Users\r\n);\r\n",["294","295"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\utils\\RoutingMachine.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Login.js",["296","297","298","299","300"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { login } from '../../actions/auth';\r\n\r\nimport Navbar from '../Layout/Navbar';\r\nimport Footer from '../Layout/Footer';\r\nimport Alert from '../Layout/Alert';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Alert />\r\n\r\n      <div className='main-content' style={{ background: '#172b4d' }}>\r\n        <div className='header bg-gradient-primary py-7 py-lg-8 pt-lg-9'>\r\n          <div className='container'>\r\n            <div className='header-body text-center mb-7'>\r\n              <div className='row justify-content-center'>\r\n                <div className='col-xl-5 col-lg-6 col-md-8 px-5'>\r\n                  <h1 className='text-white'>Welcome Back!</h1>\r\n                  <p className='text-lead text-white'>\r\n                    Sign into your PoolPro360 account below.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='separator separator-bottom separator-skew zindex-100'>\r\n            <svg\r\n              x='0'\r\n              y='0'\r\n              viewBox='0 0 2560 100'\r\n              preserveAspectRatio='none'\r\n              version='1.1'\r\n              xmlns='http://www.w3.org/2000/svg'\r\n            >\r\n              <polygon\r\n                className='fill-default'\r\n                points='2560 0 2560 100 0 100'\r\n              ></polygon>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='container mt--8 pb-5'>\r\n          <div className='row justify-content-center'>\r\n            <div className='col-lg-5 col-md-7'>\r\n              <div className='card bg-secondary border-0 mb-0'>\r\n                <div className='card-body px-lg-5 py-lg-5'>\r\n                  <div className='text-center text-muted mb-4'>\r\n                    <small>Sign in with credentials:</small>\r\n                  </div>\r\n                  <form role='form' onSubmit={onSubmit}>\r\n                    <div className='form-group mb-3'>\r\n                      <div className='input-group input-group-merge input-group-alternative'>\r\n                        <div className='input-group-prepend'>\r\n                          <span className='input-group-text'>\r\n                            <i className='ni ni-email-83'></i>\r\n                          </span>\r\n                        </div>\r\n                        <input\r\n                          className='form-control'\r\n                          placeholder='Email'\r\n                          type='email'\r\n                          onChange={e => onChange(e)}\r\n                          name='email'\r\n                          value={email}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                      <div className='input-group input-group-merge input-group-alternative'>\r\n                        <div className='input-group-prepend'>\r\n                          <span className='input-group-text'>\r\n                            <i className='ni ni-lock-circle-open'></i>\r\n                          </span>\r\n                        </div>\r\n                        <input\r\n                          className='form-control'\r\n                          placeholder='Password'\r\n                          type='password'\r\n                          onChange={e => onChange(e)}\r\n                          name='password'\r\n                          value={password}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='custom-control custom-control-alternative custom-checkbox'>\r\n                      <input\r\n                        className='custom-control-input'\r\n                        id=' customCheckLogin'\r\n                        type='checkbox'\r\n                      />\r\n                      <label\r\n                        className='custom-control-label'\r\n                        htmlFor=' customCheckLogin'\r\n                      >\r\n                        <span className='text-muted'>Remember me</span>\r\n                      </label>\r\n                    </div>\r\n                    <div className='text-center'>\r\n                      <button\r\n                        type='button'\r\n                        type='submit'\r\n                        className='btn btn-primary my-4'\r\n                      >\r\n                        Sign in\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              <div className='row mt-3'>\r\n                <div className='col-6'>\r\n                  <a href='#' className='text-light'>\r\n                    <small>Forgot password?</small>\r\n                  </a>\r\n                </div>\r\n                <div className='col-6 text-right'>\r\n                  <a href='#' className='text-light'>\r\n                    <small>Create new account</small>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer cssClass='footer-dark' />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n",["301","302"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\map.js",["303"],"import { setAlert } from './alert';\r\nimport { GET_ROUTE_LEGS } from './types';\r\n\r\n// Get Route Legs\r\nexport const getRouteLegs = legs => async dispatch => {\r\n  dispatch({\r\n    type: GET_ROUTE_LEGS,\r\n    payload: legs\r\n  });\r\n};\r\n",["304","305"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\auth.js",["306"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\alert.js",["307"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormSettingsController.js",["308","309","310","311","312","313","314"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\AddCustomers.js",["315","316","317"],"import React, { Fragment, useState, useRef, useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { addCustomer } from '../../actions/customer';\r\nimport { getEmployees } from '../../actions/employee';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Alert from '../Layout/Alert';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Input,\r\n  Form,\r\n  Label,\r\n  FormGroup\r\n} from 'reactstrap';\r\n\r\nimport { Formik } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nconst AddCustomers = ({\r\n  addCustomer,\r\n  getEmployees,\r\n  employees: { employees }\r\n}) => {\r\n  const [showBilling, setShowBilling] = useState(false);\r\n\r\n  const toggleBilling = () => setShowBilling(!showBilling);\r\n\r\n  const formSchema = Yup.object().shape({\r\n    firstName: Yup.string().required('First name is required'),\r\n    lastName: Yup.string().required('Last name is required'),\r\n    email: Yup.string().email('Please provide a valid email'),\r\n    mobilePhone: Yup.string(),\r\n    serviceAddress: Yup.string().required('Service address is required'),\r\n    serviceCity: Yup.string().required('Service city is required'),\r\n    serviceState: Yup.string().required('Service state is required'),\r\n    serviceZip: Yup.string().required('Service zip is required')\r\n  });\r\n\r\n  const formRef = useRef();\r\n  const history = useHistory();\r\n  const handleSubmit = () => {\r\n    if (formRef.current) {\r\n      formRef.current.handleSubmit();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, [getEmployees]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='customers' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/customers'>Customers</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/customers/add'>Add Customer</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n                <div className='col-lg-6 col-5 text-right'>\r\n                  <a href='#' className='btn btn-sm btn-neutral'>\r\n                    New\r\n                  </a>\r\n                  <a href='#' className='btn btn-sm btn-neutral'>\r\n                    Filters\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Container className='mgn-ng-top-60'>\r\n          <div className='card'>\r\n            <div className='card-header'>\r\n              <div className='row align-items-center'>\r\n                <div className='col-8'>\r\n                  <h3 className='mb-0'>Add Customer </h3>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                  <Button type='submit' color='success' onClick={handleSubmit}>\r\n                    Save Customer\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='card-body'>\r\n              <Formik\r\n                initialValues={{\r\n                  firstName: '',\r\n                  lastName: '',\r\n                  email: '',\r\n                  mobilePhone: '',\r\n                  serviceAddress: '',\r\n                  serviceCity: '',\r\n                  serviceState: '',\r\n                  serviceZip: '',\r\n                  gateCode: '',\r\n                  canText: 'N/A',\r\n                  poolType: 'N/A',\r\n                  technician: 'N/A',\r\n                  servicePackageAndRate:\r\n                    'Inactive (Customer Will Not Be Serviced)',\r\n                  billingSame: false,\r\n                  billingType: 'Manual Billing',\r\n                  paymentMethod: 'N/A',\r\n                  billingAddress: '',\r\n                  billingCity: '',\r\n                  billingState: '',\r\n                  billingZip: ''\r\n                }}\r\n                innerRef={formRef}\r\n                validationSchema={formSchema}\r\n                onSubmit={async data => {\r\n                  await addCustomer(data);\r\n                  history.push('/customers');\r\n                }}\r\n                render={({\r\n                  handleSubmit,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  validateForm,\r\n                  isValid\r\n                }) => (\r\n                  <Fragment>\r\n                    <Form onSubmit={handleSubmit}>\r\n                      <h6 className='heading-small text-muted mb-4'>\r\n                        Customer Information\r\n                      </h6>\r\n                      <div className='pl-lg-4'>\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='firstName'\r\n                                className='form-control-label'\r\n                              >\r\n                                First name\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='firstName'\r\n                                placeholder='John'\r\n                                value={values.firstName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.firstName && touched.firstName && (\r\n                                <p className='color-red'>{errors.firstName}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='lastName'\r\n                                className='form-control-label'\r\n                              >\r\n                                Last name\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='lastName'\r\n                                placeholder='Doe'\r\n                                value={values.lastName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.lastName && touched.lastName && (\r\n                                <p className='color-red'>{errors.lastName}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='mobilePhone'\r\n                                className='form-control-label'\r\n                              >\r\n                                Mobile Number\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='mobilePhone'\r\n                                placeholder='(555) 555-5555'\r\n                                value={values.mobilePhone}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.mobilePhone && touched.mobilePhone && (\r\n                                <p className='color-red'>\r\n                                  {errors.mobilePhone}\r\n                                </p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label for='email' className='form-control-label'>\r\n                                Email address\r\n                              </Label>\r\n                              <Input\r\n                                type='email'\r\n                                name='email'\r\n                                placeholder='jessie@example.com'\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.email && touched.email && (\r\n                                <p className='color-red'>{errors.email}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='canText'\r\n                                className='form-control-label'\r\n                              >\r\n                                Can text?\r\n                              </Label>\r\n                              <Input\r\n                                type='select'\r\n                                name='canText'\r\n                                value={values.canText}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              >\r\n                                <option>N/A</option>\r\n                                <option>Yes</option>\r\n                                <option>No</option>\r\n                              </Input>\r\n                              {errors.canText && touched.canText && (\r\n                                <p className='color-red'>{errors.canText}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='poolType'\r\n                                className='form-control-label'\r\n                              >\r\n                                Pool Type\r\n                              </Label>\r\n                              <Input\r\n                                type='select'\r\n                                name='poolType'\r\n                                value={values.poolType}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              >\r\n                                <option>N/A</option>\r\n                                <option>Residential</option>\r\n                                <option>Commercial</option>\r\n                              </Input>\r\n                              {errors.poolType && touched.poolType && (\r\n                                <p className='color-red'>{errors.poolType}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <hr className='my-4' />\r\n                      {/* Address */}\r\n                      <h6 className='heading-small text-muted mb-4'>\r\n                        Service information\r\n                      </h6>\r\n                      <div className='pl-lg-4'>\r\n                        <Row>\r\n                          <Col lg='12'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='serviceAddress'\r\n                                className='form-control-label'\r\n                              >\r\n                                Address\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='serviceAddress'\r\n                                placeholder='2070 Libby Street'\r\n                                value={values.serviceAddress}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.serviceAddress &&\r\n                                touched.serviceAddress && (\r\n                                  <p className='color-red'>\r\n                                    {errors.serviceAddress}\r\n                                  </p>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='4'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='serviceCity'\r\n                                className='form-control-label'\r\n                              >\r\n                                City\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='serviceCity'\r\n                                placeholder='Beverly Hills'\r\n                                value={values.serviceCity}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.serviceCity && touched.serviceCity && (\r\n                                <p className='color-red'>\r\n                                  {errors.serviceCity}\r\n                                </p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='4'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='serviceState'\r\n                                className='form-control-label'\r\n                              >\r\n                                State\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='serviceState'\r\n                                placeholder='CA'\r\n                                value={values.serviceState}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.serviceState && touched.serviceState && (\r\n                                <p className='color-red'>\r\n                                  {errors.serviceState}\r\n                                </p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='4'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='serviceZip'\r\n                                className='form-control-label'\r\n                              >\r\n                                Zip\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='serviceZip'\r\n                                placeholder='90210'\r\n                                value={values.serviceZip}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.serviceZip && touched.serviceZip && (\r\n                                <p className='color-red'>{errors.serviceZip}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <Label\r\n                              for='gateCode'\r\n                              className='form-control-label'\r\n                            >\r\n                              Gate/Lock Code\r\n                            </Label>\r\n                            <Input\r\n                              type='text'\r\n                              name='gateCode'\r\n                              placeholder='12345'\r\n                              value={values.gateCode}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <Label\r\n                              for='technician'\r\n                              className='form-control-label'\r\n                            >\r\n                              Assigned Technician\r\n                            </Label>\r\n                            <Input\r\n                              type='select'\r\n                              name='technician'\r\n                              value={values.technician}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            >\r\n                              <option>N/A</option>\r\n                              {employees.map(employee => (\r\n                                <option key={employee._id} value={employee._id}>\r\n                                  {employee.firstName} {employee.lastName}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <hr className='my-4' />\r\n                      <h6 className='heading-small text-muted mb-4'>\r\n                        Billing information\r\n                      </h6>\r\n                      <div className='pl-lg-4'>\r\n                        <Row>\r\n                          <Col lg='12'>\r\n                            <FormGroup>\r\n                              <Input\r\n                                name='billingSame'\r\n                                type='checkbox'\r\n                                onClick={toggleBilling}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              <Label\r\n                                for='billingSame'\r\n                                className='form-control-label'\r\n                              >\r\n                                Billing Address Same as Service Address?\r\n                              </Label>\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        {!showBilling && (\r\n                          <Fragment>\r\n                            <Row>\r\n                              <Col lg='12'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='billingAddress'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Billing Address\r\n                                  </Label>\r\n                                  <Input\r\n                                    name='billingAddress'\r\n                                    type='text'\r\n                                    placeholder='2070 Mercer Avenue'\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col lg='4'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='billingCity'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Billing City\r\n                                  </Label>\r\n                                  <Input\r\n                                    name='billingCity'\r\n                                    type='text'\r\n                                    placeholder='Beverly Hills'\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col lg='4'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='billingState'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Billing State\r\n                                  </Label>\r\n                                  <Input\r\n                                    name='billingState'\r\n                                    type='text'\r\n                                    placeholder='CA'\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col lg='4'>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    for='billingZip'\r\n                                    className='form-control-label'\r\n                                  >\r\n                                    Billing Zip\r\n                                  </Label>\r\n                                  <Input\r\n                                    name='billingZip'\r\n                                    type='text'\r\n                                    placeholder='90210'\r\n                                  />\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </Row>\r\n                          </Fragment>\r\n                        )}\r\n                      </div>\r\n                    </Form>\r\n                  </Fragment>\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddCustomers.propTypes = {\r\n  addCustomer: PropTypes.func.isRequired,\r\n  getEmployees: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  employees: state.employee\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCustomer, getEmployees })(\r\n  AddCustomers\r\n);\r\n",["318","319"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\variables\\chart.js",[],["320","321"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\EditServiceNoteModal.js",["322","323","324"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\AddUser.js",["325","326","327","328"],"import React, { Fragment, useRef, useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { addEmployee } from '../../actions/employee';\r\nimport { registerSubuser } from '../../actions/auth';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Footer from '../Layout/Footer';\r\nimport Alert from '../Layout/Alert';\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label\r\n} from 'reactstrap';\r\n\r\nimport { Formik } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\nimport generator from 'generate-password';\r\n\r\nconst AddUser = ({ addEmployee, registerSubuser }) => {\r\n  const [generatedPassword, setGeneratedPassword] = useState(null);\r\n\r\n  const phoneRegExp = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\r\n  const lowercaseRegex = /(?=.*[a-z])/;\r\n  const uppercaseRegex = /(?=.*[A-X])/;\r\n  const numericRegex = /(?=.*[0-9])/;\r\n\r\n  const formSchema = Yup.object().shape({\r\n    firstName: Yup.string().required('First name is required'),\r\n    lastName: Yup.string().required('Last name is required'),\r\n    email: Yup.string()\r\n      .email('Please provide a valid email')\r\n      .required('Email is required'),\r\n    phone: Yup.string()\r\n      .matches(phoneRegExp, 'Phone number is not valid')\r\n      .required('Phone is required'),\r\n    password: Yup.string()\r\n      .matches(lowercaseRegex, 'Password must contain lowercase letter')\r\n      .matches(uppercaseRegex, 'Password must contain uppercase letter')\r\n      .matches(numericRegex, 'Password must contain a number')\r\n      .min(8, 'Password must be at least 8 characters long')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\r\n      .required('Confirm password is required')\r\n  });\r\n\r\n  const formRef = useRef();\r\n  const history = useHistory();\r\n  const handleSubmit = () => {\r\n    if (formRef.current) {\r\n      formRef.current.handleSubmit();\r\n    }\r\n  };\r\n\r\n  const onGeneratePassword = () => {\r\n    setGeneratedPassword(generator.generate({ length: 12, numbers: true }));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='users' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/users'>Users</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/users/add'>Add User</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n                <div className='col-lg-6 col-5 text-right'>\r\n                  <a href='#' className='btn btn-sm btn-neutral'>\r\n                    New\r\n                  </a>\r\n                  <a href='#' className='btn btn-sm btn-neutral'>\r\n                    Filters\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Container className='mgn-ng-top-60'>\r\n          <Card>\r\n            <CardHeader>\r\n              <div className='row align-items-center'>\r\n                <div className='col-8'>\r\n                  <h3 className='mb-0'>Add User </h3>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                  <Button type='submit' color='primary' onClick={handleSubmit}>\r\n                    <span className='btn-inner--icon'>\r\n                      <i className='fas fa-save'></i>\r\n                    </span>{' '}\r\n                    <span className='btn-inner--text'>Save User</span>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Formik\r\n                initialValues={{\r\n                  firstName: '',\r\n                  lastName: '',\r\n                  email: '',\r\n                  phone: '',\r\n                  role: 'Technician',\r\n                  password: '',\r\n                  confirmPassword: ''\r\n                }}\r\n                innerRef={formRef}\r\n                onSubmit={async data => {\r\n                  await registerSubuser(data);\r\n                  history.push('/users');\r\n                }}\r\n                validationSchema={formSchema}\r\n                render={({\r\n                  handleSubmit,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  values,\r\n                  errors,\r\n                  touched\r\n                }) => (\r\n                  <Fragment>\r\n                    <Form onSubmit={handleSubmit}>\r\n                      <h6 className='heading-small text-muted mb-4'>\r\n                        User Information\r\n                      </h6>\r\n                      <div className='pl-lg-4'>\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='firstName'\r\n                                className='form-control-label'\r\n                              >\r\n                                First Name\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='firstName'\r\n                                placeholder='John'\r\n                                value={values.firstName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.firstName && touched.firstName && (\r\n                                <p className='color-red'>{errors.firstName}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='lastName'\r\n                                className='form-control-label'\r\n                              >\r\n                                Last Name\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='lastName'\r\n                                placeholder='Doe'\r\n                                value={values.lastName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.lastName && touched.lastName && (\r\n                                <p className='color-red'>{errors.lastName}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label for='email' className='form-control-label'>\r\n                                Email\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='email'\r\n                                placeholder='john.doe@gmail.com'\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.email && touched.email && (\r\n                                <p className='color-red'>{errors.email}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label for='Phone' className='form-control-label'>\r\n                                Phone\r\n                              </Label>\r\n                              <Input\r\n                                type='text'\r\n                                name='phone'\r\n                                placeholder='555-555-5555'\r\n                                value={values.phone}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.phone && touched.phone && (\r\n                                <p className='color-red'>{errors.phone}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='12'>\r\n                            <FormGroup>\r\n                              <Label for='role' className='form-control-label'>\r\n                                User Role\r\n                              </Label>\r\n                              <Input\r\n                                type='select'\r\n                                name='role'\r\n                                value={values.role}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              >\r\n                                <option>Technician</option>\r\n                                <option>Logistics</option>\r\n                                <option>Admin</option>\r\n                              </Input>\r\n                              {errors.role && touched.role && (\r\n                                <p className='color-red'>{errors.role}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='password'\r\n                                className='form-control-label'\r\n                              >\r\n                                Password\r\n                              </Label>\r\n                              <Input\r\n                                type='password'\r\n                                name='password'\r\n                                autoComplete='on'\r\n                                placeholder='Password'\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.password && touched.password && (\r\n                                <p className='color-red'>{errors.password}</p>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col lg='6'>\r\n                            <FormGroup>\r\n                              <Label\r\n                                for='confirmPassword'\r\n                                className='form-control-label'\r\n                              >\r\n                                Confirm Password\r\n                              </Label>\r\n                              <Input\r\n                                type='password'\r\n                                name='confirmPassword'\r\n                                autoComplete='on'\r\n                                placeholder='Confirm Password'\r\n                                value={values.confirmPassword}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                              {errors.confirmPassword &&\r\n                                touched.confirmPassword && (\r\n                                  <p className='color-red'>\r\n                                    {errors.confirmPassword}\r\n                                  </p>\r\n                                )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg='12'>\r\n                            {generatedPassword && (\r\n                              <Fragment>\r\n                                <span>Password: {generatedPassword}</span>\r\n                                <br />\r\n                                <small>\r\n                                  Make sure to save or write down this password\r\n                                </small>\r\n                                <br />\r\n                                <br />\r\n                              </Fragment>\r\n                            )}\r\n\r\n                            <Button\r\n                              color='success'\r\n                              onClick={onGeneratePassword}\r\n                            >\r\n                              Generate a Password\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Form>\r\n                  </Fragment>\r\n                )}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n\r\n        <Footer />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddUser.propTypes = {\r\n  addEmployee: PropTypes.func.isRequired,\r\n  registerSubuser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEmployee, registerSubuser })(AddUser);\r\n",["329","330"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\FilterManager.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\LeafletMap.js",[],["331","332"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormItemController.js",["333","334","335","336","337","338","339","340"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\HeaterManager.js",[],["341","342"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\FormCreator.js",["343","344","345","346","347","348","349","350","351","352","353","354"],"import React, { Component, Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from 'reactstrap';\r\n\r\nimport FormItemController from './FormItemController';\r\nimport FormSettingsController from './FormSettingsController';\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst copy = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const item = sourceClone[droppableSource.index];\r\n\r\n  destClone.splice(droppableDestination.index, 0, { ...item, id: uuidv4() });\r\n  return destClone;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst Content = styled.div`\r\n  margin-right: 200px;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  display: flex;\r\n  user-select: none;\r\n  padding: 0.5rem;\r\n  margin: 0 0 0.5rem 0;\r\n  align-items: flex-start;\r\n  align-content: flex-start;\r\n  line-height: 1.5;\r\n  border-radius: 3px;\r\n  background: #fff;\r\n  border: 1px ${props => (props.isDragging ? 'dashed #000' : 'solid #ddd')};\r\n`;\r\n\r\nconst Clone = styled(Item)`\r\n  ~ div {\r\n    transform: none !important;\r\n  }\r\n`;\r\n\r\nconst Handle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n  user-select: none;\r\n  margin: -0.5rem 0.5rem -0.5rem -0.5rem;\r\n  padding: 0.5rem;\r\n  line-height: 1.5;\r\n  border-radius: 3px 0 0 3px;\r\n  background: #fff;\r\n  border-right: 1px solid #ddd;\r\n  color: #000;\r\n`;\r\n\r\nconst List = styled.div`\r\n  border: 1px ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\r\n  background: #fff;\r\n  padding: 0.5rem 0.5rem 0;\r\n  border-radius: 3px;\r\n  flex: 0 0 150px;\r\n  font-family: sans-serif;\r\n  min-height: 200px;\r\n`;\r\n\r\nconst Kiosk = styled(List)`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 200px;\r\n`;\r\n\r\nconst Container = styled(List)`\r\n  margin: 0.5rem 0.5rem 1.5rem;\r\n`;\r\n\r\nconst Notice = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n  justify-content: center;\r\n  padding: 0.5rem;\r\n  margin: 0 0.5rem 0.5rem;\r\n  border: 1px solid transparent;\r\n  line-height: 1.5;\r\n  color: #aaa;\r\n`;\r\n\r\nconst ITEMS = [\r\n  {\r\n    id: uuidv4(),\r\n    content: 'Input',\r\n    icon: 'fa-font',\r\n    tag: 'input',\r\n    type: 'text',\r\n    label: 'Input Field',\r\n    placeholder: ''\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    content: 'Text Area',\r\n    icon: 'fa-align-left',\r\n    tag: 'textarea',\r\n    label: 'Text Area Field',\r\n    placeholder: ''\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    content: 'Multiple Choice',\r\n    icon: 'fa-check-square',\r\n    label: 'Multiple Choice Field',\r\n    placeholder: '',\r\n    items: [\r\n      {\r\n        label: 'Inground Pool',\r\n        priceChange: 'increase',\r\n        amount: '20'\r\n      },\r\n      {\r\n        label: 'Above Ground Pool',\r\n        priceChange: 'increase',\r\n        amount: '0'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    content: 'Email',\r\n    icon: 'fa-envelope',\r\n    tag: 'input',\r\n    type: 'email',\r\n    label: 'Email Field',\r\n    placeholder: ''\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    content: 'Picture Choice',\r\n    icon: 'fa-image',\r\n    label: 'Picture Choice Field',\r\n    placeholder: '',\r\n    items: [\r\n      {\r\n        id: uuidv4(),\r\n        label: 'Inground Pool',\r\n        priceChange: 'increase',\r\n        amount: '20'\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        label: 'Above Ground Pool',\r\n        priceChange: 'decrease',\r\n        amount: '5'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default class FormCreator extends Component {\r\n  state = {\r\n    form: []\r\n  };\r\n\r\n  editPictureField(itemId, label, itemData) {\r\n    const formState = this.state.form;\r\n    let foundIndex = formState.findIndex(e => e.id == itemId);\r\n\r\n    formState[foundIndex].label = label;\r\n    formState[foundIndex].items = itemData;\r\n\r\n    //console.log(formState);\r\n\r\n    this.setState({ form: formState });\r\n\r\n    console.log(this.state.form);\r\n  }\r\n\r\n  editItem(itemId, label, placeholder) {\r\n    const formState = this.state.form;\r\n\r\n    let foundIndex = formState.findIndex(e => e.id == itemId);\r\n\r\n    formState[foundIndex].label = label;\r\n    formState[foundIndex].placeholder = placeholder;\r\n\r\n    // Never saved to state?\r\n  }\r\n\r\n  deletePictureOption(itemId, optionId) {\r\n    let formState = this.state.form.slice();\r\n\r\n    let foundIndex = formState.findIndex(e => e.id == itemId);\r\n\r\n    let updatedOptions = formState[foundIndex].items.filter(obj => {\r\n      return obj.id !== `${optionId}`;\r\n    });\r\n\r\n    //console.log(updatedOptions);\r\n\r\n    formState[foundIndex].items = updatedOptions;\r\n\r\n    this.setState({ form: formState });\r\n\r\n    console.log(this.state.form);\r\n\r\n    // console.log(formState);\r\n  }\r\n\r\n  deleteItem(item) {\r\n    const formState = this.state.form;\r\n\r\n    let updatedForm = formState.filter(obj => {\r\n      return obj.id !== `${item}`;\r\n    });\r\n\r\n    this.setState({ form: updatedForm });\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    switch (source.droppableId) {\r\n      case destination.droppableId:\r\n        this.setState({\r\n          [destination.droppableId]: reorder(\r\n            this.state[source.droppableId],\r\n            source.index,\r\n            destination.index\r\n          )\r\n        });\r\n        break;\r\n      case 'ITEMS':\r\n        this.setState({\r\n          [destination.droppableId]: copy(\r\n            ITEMS,\r\n            this.state[destination.droppableId],\r\n            source,\r\n            destination\r\n          )\r\n        });\r\n        break;\r\n      default:\r\n        this.setState(\r\n          move(\r\n            this.state[source.droppableId],\r\n            this.state[destination.droppableId],\r\n            source,\r\n            destination\r\n          )\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n  render() {\r\n    // console.log(this.state.form);\r\n    return (\r\n      <Fragment>\r\n        <FormSettingsController />\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId='ITEMS' isDropDisabled={true}>\r\n            {(provided, snapshot) => (\r\n              <Kiosk\r\n                ref={provided.innerRef}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n                className='builder__sidebar'\r\n              >\r\n                <h3 className='text-center text-white'>Control Panel</h3>\r\n                {ITEMS.map((item, index) => (\r\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <React.Fragment>\r\n                        <Item\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          isDragging={snapshot.isDragging}\r\n                          style={provided.draggableProps.style}\r\n                          className='text-center creator__block'\r\n                        >\r\n                          <div className='width-100'>\r\n                            <i className={`fas ${item.icon}`}></i>\r\n                            <h4 className='text-white fweight-normal'>\r\n                              {item.content}\r\n                            </h4>\r\n                          </div>\r\n                        </Item>\r\n                        {snapshot.isDragging && (\r\n                          <Clone>\r\n                            {' '}\r\n                            <div className='width-100 text-center creator__block'>\r\n                              <i className={`fas ${item.icon}`}></i>\r\n                              <h4 className='text-white fweight-normal'>\r\n                                {item.content}\r\n                              </h4>\r\n                            </div>\r\n                          </Clone>\r\n                        )}\r\n                      </React.Fragment>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n\r\n                {provided.placeholder}\r\n              </Kiosk>\r\n            )}\r\n          </Droppable>\r\n          <Content>\r\n            {Object.keys(this.state).map((list, i) => (\r\n              <Droppable key={list} droppableId={list}>\r\n                {(provided, snapshot) => (\r\n                  <Container\r\n                    ref={provided.innerRef}\r\n                    isDraggingOver={snapshot.isDraggingOver}\r\n                  >\r\n                    <div className='text-center'>\r\n                      <i className='fas fa-plus-square'></i>\r\n                      <p>\r\n                        Drag and drop a item from the control panel to get\r\n                        started.\r\n                      </p>\r\n                    </div>\r\n\r\n                    {this.state[list].length\r\n                      ? this.state[list].map((item, index) => (\r\n                          <Draggable\r\n                            key={item.id}\r\n                            draggableId={item.id}\r\n                            index={index}\r\n                          >\r\n                            {(provided, snapshot) => (\r\n                              <Item\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                isDragging={snapshot.isDragging}\r\n                                style={provided.draggableProps.style}\r\n                              >\r\n                                <Handle {...provided.dragHandleProps}>\r\n                                  <svg\r\n                                    width='24'\r\n                                    height='24'\r\n                                    viewBox='0 0 24 24'\r\n                                  >\r\n                                    <path\r\n                                      fill='currentColor'\r\n                                      d='M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z'\r\n                                    />\r\n                                  </svg>\r\n                                </Handle>\r\n                                <FormItemController\r\n                                  item={item}\r\n                                  deleteItem={this.deleteItem.bind(this)}\r\n                                  editItem={this.editItem.bind(this)}\r\n                                  editPictureField={this.editPictureField.bind(\r\n                                    this\r\n                                  )}\r\n                                  deletePictureOption={this.deletePictureOption.bind(\r\n                                    this\r\n                                  )}\r\n                                />\r\n                                {/* {item.content}\r\n                              \r\n                              <div className='mgn-left-30'>\r\n                                <Button size='sm' color='info'>\r\n                                  Edit\r\n                                </Button>\r\n                                <Button\r\n                                  size='sm'\r\n                                  color='warning'\r\n                                  onClick={e => this.deleteItem(item.id)}\r\n                                >\r\n                                  Delete\r\n                                </Button>\r\n                              </div> */}\r\n                              </Item>\r\n                            )}\r\n                          </Draggable>\r\n                        ))\r\n                      : !provided.placeholder && (\r\n                          <Notice>Drop items here</Notice>\r\n                        )}\r\n                    {provided.placeholder}\r\n                  </Container>\r\n                )}\r\n              </Droppable>\r\n            ))}\r\n          </Content>\r\n        </DragDropContext>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// export default FormCreator;\r\n",["355","356"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\customer.js",["357"],"import {\r\n  GET_CUSTOMERS,\r\n  GET_SINGLE_CUSTOMER,\r\n  RESET_CUSTOMER_LOADING,\r\n  GET_CUSTOMER_SERVICE_NOTES,\r\n  GET_CUSTOMER_RECENT_ACTIVITY,\r\n  GET_CUSTOMER_CHECKLIST,\r\n  GET_ROUTE,\r\n  GET_ALL_CUSTOMERS,\r\n  CLEAR_CUSTOMERS,\r\n  ROUTE_OPTIMIZED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  customers: [],\r\n  loading: true,\r\n  singleCustomer: {},\r\n  singleLoading: true,\r\n  serviceNotes: [],\r\n  recentActivity: [],\r\n  checklist: [],\r\n  routeList: [],\r\n  isRouteOptimized: false,\r\n  allCustomers: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        customers: payload,\r\n        loading: false\r\n      };\r\n    case ROUTE_OPTIMIZED:\r\n      return {\r\n        ...state,\r\n        isRouteOptimized: payload\r\n      };\r\n    case GET_ALL_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        allCustomers: payload\r\n      };\r\n    case CLEAR_CUSTOMERS:\r\n      return {\r\n        customers: [],\r\n        loading: true,\r\n        singleCustomer: {},\r\n        singleLoading: true,\r\n        serviceNotes: [],\r\n        recentActivity: [],\r\n        checklist: [],\r\n        routeList: [],\r\n        allCustomers: []\r\n      };\r\n    case GET_ROUTE:\r\n      return {\r\n        ...state,\r\n        routeList: payload,\r\n        loading: false\r\n      };\r\n    case GET_SINGLE_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        singleCustomer: payload,\r\n        singleLoading: false\r\n      };\r\n    case RESET_CUSTOMER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_CUSTOMER_SERVICE_NOTES:\r\n      return {\r\n        ...state,\r\n        serviceNotes: payload\r\n      };\r\n    case GET_CUSTOMER_RECENT_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        recentActivity: payload\r\n      };\r\n    case GET_CUSTOMER_CHECKLIST:\r\n      return {\r\n        ...state,\r\n        checklist: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Alert.js",["358","359"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Routing.js",["360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384"],"import React, { Fragment, useState, useEffect, useRef } from 'react';\r\n\r\nimport {\r\n  GoogleMap,\r\n  LoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n  DirectionsRenderer,\r\n  DirectionsService,\r\n  Polyline\r\n} from '@react-google-maps/api';\r\n\r\nimport MapDirectionsRenderer from './MapDirectionsRenderer';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getEmployeeCustomers } from '../../actions/employee';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Alert from '../Layout/Alert';\r\nimport Footer from '../Layout/Footer';\r\nimport RouteBuilder from '../Layout/RouteBuilder';\r\n\r\nimport { Container } from 'reactstrap';\r\n\r\n// import { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport RoutingMachine from '../../utils/RoutingMachine';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine';\r\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\r\nimport 'leaflet-routing-machine/dist/leaflet.routing.icons.png';\r\n\r\nimport LeafletMap from '../Layout/LeafletMap';\r\n\r\nlet key = 'AIzaSyBPTZtirCX7Ar2bIandK2EZzj10V2bBUag';\r\n\r\nconst markerIcon = new L.Icon({\r\n  iconUrl:\r\n    'https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png',\r\n  iconSize: [35, 45],\r\n  iconAnchor: [17, 46],\r\n  popupAnchor: [0, -46],\r\n  html: '5'\r\n});\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px'\r\n};\r\n\r\nconst locations = [\r\n  {\r\n    id: 4,\r\n    info: 'Greg Bryson',\r\n    lat: 34.238134,\r\n    lng: -84.072205\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    info: 'Lee Wood',\r\n    lat: 34.224666,\r\n    lng: -84.077647\r\n  },\r\n  {\r\n    id: 5,\r\n    info: 'Sam Siemon',\r\n    lat: 34.235536,\r\n    lng: -84.072864\r\n  },\r\n  {\r\n    id: 2,\r\n    info: 'Scott Harris',\r\n    lat: 34.189243,\r\n    lng: -84.069363\r\n  }\r\n];\r\n\r\nconst Routing = ({\r\n  mapRedux: { legs, loading },\r\n  customers: { customers },\r\n  getEmployeeCustomers\r\n}) => {\r\n  const [map, setMap] = React.useState(null);\r\n\r\n  useEffect(() => {\r\n    // getEmployeeCustomers('6011ff1582278974ac42fe88');\r\n  }, [getEmployeeCustomers]);\r\n\r\n  const [mapState, setMapState] = useState({\r\n    showingInfoWindow: false,\r\n    selectedMarker: null\r\n  });\r\n\r\n  const onMarkerClick = id => {\r\n    setMapState({\r\n      showingInfoWindow: true,\r\n      selectedMarker: id\r\n    });\r\n  };\r\n\r\n  const onInfoWindowClose = () => {\r\n    setMapState({\r\n      showingInfoWindow: false,\r\n      selectedMarker: null\r\n    });\r\n  };\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n  let totalDistance = 0;\r\n  let totalDuration = 0;\r\n  let METERS_TO_MILES = 0.000621371192;\r\n\r\n  const calculateTotalDistance = () => {\r\n    for (var i = 0; i < legs.length; ++i) {\r\n      totalDistance += legs[i].distance.value;\r\n      totalDuration += legs[i].duration.value;\r\n    }\r\n\r\n    totalDistance = Math.round(totalDistance * METERS_TO_MILES * 10) / 10;\r\n    totalDuration = Math.round(totalDuration / 60);\r\n\r\n    // setTotals({\r\n    //   totalDistance,\r\n    //   totalDuration\r\n    // });\r\n  };\r\n\r\n  calculateTotalDistance();\r\n\r\n  // console.log(totalDuration, totalDistance);\r\n\r\n  const [centerPoint, setCenterPoint] = useState({\r\n    lat: 34.2313319,\r\n    lng: -84.1105079\r\n  });\r\n  const ZOOM_LEVEL = 13;\r\n  const mapRef = useRef();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='routing' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <Alert />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/users'>Routing</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Container>\r\n          <h1>Google Maps Route</h1>\r\n\r\n          {totalDistance && <h2>Total Distance: {totalDistance} miles</h2>}\r\n          {totalDuration && <h3>Total Duration: {totalDuration} minutes</h3>}\r\n\r\n          <h1>Route Builder</h1>\r\n          <RouteBuilder />\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRouting.propTypes = {\r\n  getEmployeeCustomers: PropTypes.func.isRequired,\r\n  mapRedux: PropTypes.object.isRequired,\r\n  customers: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  mapRedux: state.map,\r\n  customers: state.customer\r\n});\r\n\r\nexport default connect(mapStateToProps, { getEmployeeCustomers })(Routing);\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\EquipmentManagers\\CleanerManager..js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\actions\\customer.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Customers.js",["385","386","387"],"import React, { Fragment, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getCustomers, resetCustomerLoading } from '../../actions/customer';\r\n\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu\r\n} from 'reactstrap';\r\n\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport\r\n} from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst pagination = paginationFactory({\r\n  page: 1,\r\n  alwaysShowAllBtns: true,\r\n  showTotal: true,\r\n  withFirstAndLast: false,\r\n  sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <div className='dataTables_length' id='datatable-basic_length'>\r\n      <select\r\n        name='datatable-basic_length'\r\n        aria-controls='datatable-basic'\r\n        className='form-control form-control-sm'\r\n        style={{ width: '30%' }}\r\n        onChange={e => onSizePerPageChange(e.target.value)}\r\n      >\r\n        <option value='10'>10</option>\r\n        <option value='25'>25</option>\r\n        <option value='50'>50</option>\r\n        <option value='100'>100</option>\r\n      </select>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst typeFormatter = cell => {\r\n  if (cell === 'Residential') {\r\n    return (\r\n      <span>\r\n        <i className='ni ni-shop text-primary'></i> {cell}\r\n      </span>\r\n    );\r\n  } else if (cell === 'Commercial') {\r\n    return (\r\n      <span>\r\n        <i className='ni ni-building text-red'></i> {cell}\r\n      </span>\r\n    );\r\n  } else {\r\n    return <span>N/A</span>;\r\n  }\r\n};\r\n\r\nconst actionFormatter = cell => {\r\n  return (\r\n    <UncontrolledDropdown>\r\n      <DropdownToggle\r\n        className='btn-icon-only text-light'\r\n        color=''\r\n        role='button'\r\n        size='sm'\r\n      >\r\n        <i className='fas fa-ellipsis-v' />\r\n      </DropdownToggle>\r\n      <DropdownMenu className='dropdown-menu-arrow' right>\r\n        <DropdownItem tag={Link} to={`/customers/${cell}`}>\r\n          View\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to={`/customers/${cell}/edit`}>\r\n          Edit\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to={`/customers/${cell}/inactive`}>\r\n          Mark Inactive\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  );\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    dataField: 'firstName',\r\n    text: 'First Name'\r\n  },\r\n  {\r\n    dataField: 'lastName',\r\n    text: 'Last Name'\r\n  },\r\n  {\r\n    dataField: 'poolType',\r\n    text: 'Type',\r\n    formatter: typeFormatter\r\n  },\r\n  {\r\n    dataField: 'serviceAddress',\r\n    text: 'Property'\r\n  },\r\n  {\r\n    dataField: 'email',\r\n    text: 'Email'\r\n  },\r\n  {\r\n    dataField: '_id',\r\n    text: 'Actions',\r\n    formatter: actionFormatter\r\n  }\r\n];\r\n\r\nconst Customers = ({\r\n  getCustomers,\r\n  resetCustomerLoading,\r\n  customers: { customers, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, [getCustomers]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='customers' />\r\n      <div className='main-content of-hidden' id='panel'>\r\n        <Dashnav />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/dashboard'>Customers</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n                <div className='col-lg-6 col-5 text-right'>\r\n                  <a href='#' className='btn btn-sm btn-neutral'>\r\n                    New\r\n                  </a>\r\n                  <a href='#' className='btn btn-sm btn-neutral'>\r\n                    Filters\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row className='mgn-ng-top-60'>\r\n          <Container fluid>\r\n            <div className='card'>\r\n              <div className='card-header'>\r\n                <h3 className='mb-0'>Customers</h3>{' '}\r\n                <Link\r\n                  color='primary'\r\n                  className='float-right mgn-ng-top-28 btn btn-primary'\r\n                  to='/customers/add'\r\n                >\r\n                  <span className='btn-inner--icon'>\r\n                    <i className='ni ni-fat-add' />\r\n                  </span>\r\n                  <span className='btn-inner--text'> Add Customer</span>\r\n                </Link>\r\n              </div>\r\n\r\n              {loading ? (\r\n                <Fragment>\r\n                  <div className='text-center'>\r\n                    <h4>Loading Data...</h4>\r\n                    <SpinnerCircular\r\n                      size={54}\r\n                      thickness={180}\r\n                      speed={100}\r\n                      color='rgba(57, 125, 172, 1)'\r\n                      secondaryColor='rgba(0, 0, 0, 0.44)'\r\n                    />\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                <ToolkitProvider\r\n                  data={customers}\r\n                  keyField='_id'\r\n                  columns={columns}\r\n                  search\r\n                  exportCSV\r\n                >\r\n                  {props => (\r\n                    <div\r\n                      className='py-4 table-responsive'\r\n                      style={{ padding: '25px' }}\r\n                    >\r\n                      <div id='datatable-basic_filter' className='px-4 pb-1'>\r\n                        <Row>\r\n                          <Col md='6'>\r\n                            <ExportCSVButton\r\n                              className='buttons-copy buttons-html5 btn-sm'\r\n                              {...props.csvProps}\r\n                            >\r\n                              <i className='ni ni-align-left-2'></i> Export CSV\r\n                            </ExportCSVButton>\r\n                          </Col>\r\n                          <Col md={{ size: 'auto', offset: 3 }}>\r\n                            <SearchBar\r\n                              className='form-control-sm'\r\n                              placeholder='Search Customers'\r\n                              {...props.searchProps}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <BootstrapTable\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        pagination={pagination}\r\n                        bordered={false}\r\n                        wrapperClasses='table-responsive mh-330'\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              )}\r\n            </div>\r\n          </Container>\r\n        </Row>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCustomers.propTypes = {\r\n  getCustomers: PropTypes.func.isRequired,\r\n  resetCustomerLoading: PropTypes.func.isRequired,\r\n  customers: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  customers: state.customer\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCustomers, resetCustomerLoading })(\r\n  Customers\r\n);\r\n",["388","389"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewCustomer.js",["390"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\map.js",["391"],"import { GET_ROUTE_LEGS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  legs: [],\r\n  loading: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_ROUTE_LEGS:\r\n      return {\r\n        ...state,\r\n        legs: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\dashboard\\Dashboard.js",["392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\employee.js",["419"],"import { GET_EMPLOYEES, GET_SINGLE_EMPLOYEE } from '../actions/types';\r\n\r\nconst initialState = {\r\n  employees: [],\r\n  singleEmployee: [],\r\n  loading: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_EMPLOYEES:\r\n      return {\r\n        ...state,\r\n        employees: payload,\r\n        loading: false\r\n      };\r\n    case GET_SINGLE_EMPLOYEE:\r\n      return {\r\n        ...state,\r\n        singleEmployee: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\landing\\LandingContent.js",["420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\BookingForms.js",["437","438","439","440","441"],"import React, { Fragment, useEffect, useState } from 'react';\r\n\r\nimport Dashnav from '../dashboard/Dashnav';\r\nimport Sidebar from '../dashboard/Sidebar';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport\r\n} from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  CardBody,\r\n  Card,\r\n  CardTitle,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from 'reactstrap';\r\n\r\nconst pagination = paginationFactory({\r\n  page: 1,\r\n  alwaysShowAllBtns: true,\r\n  showTotal: false,\r\n  withFirstAndLast: false,\r\n  sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <div className='dataTables_length' id='datatable-basic_length'>\r\n      <select\r\n        name='datatable-basic_length'\r\n        aria-controls='datatable-basic'\r\n        className='form-control form-control-sm'\r\n        style={{ width: '30%' }}\r\n        onChange={e => onSizePerPageChange(e.target.value)}\r\n      >\r\n        <option value='10'>10</option>\r\n        <option value='25'>25</option>\r\n        <option value='50'>50</option>\r\n        <option value='100'>100</option>\r\n      </select>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst dataTable = [\r\n  {\r\n    id: 1,\r\n    name: 'Weekly Pool Maintenance (Riverside)',\r\n    url: 'https://example.com/booking/a123dfj38rnxiofn',\r\n    type: 'Residential',\r\n    created: 'Aug 01, 2020',\r\n    responses: '4'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Weekly Pool Maintenance (Bakersfield)',\r\n    url: 'https://example.com/booking/ahvrhi3r7347fhjd',\r\n    created: 'Aug 01, 2020',\r\n    responses: '12'\r\n  }\r\n];\r\n\r\nconst urlFormatter = cell => {\r\n  return (\r\n    <input\r\n      type='text'\r\n      className='form-control'\r\n      aria-label='Form Url'\r\n      value={cell}\r\n    />\r\n  );\r\n};\r\n\r\nconst actionFormatter = cell => {\r\n  return (\r\n    <UncontrolledDropdown>\r\n      <DropdownToggle\r\n        className='btn-icon-only text-light'\r\n        color=''\r\n        role='button'\r\n        size='sm'\r\n      >\r\n        <i className='fas fa-ellipsis-v' />\r\n      </DropdownToggle>\r\n      <DropdownMenu className='dropdown-menu-arrow' right>\r\n        <DropdownItem\r\n          href={`/booking-forms/${cell}`}\r\n          onClick={e => e.preventDefault()}\r\n        >\r\n          View\r\n        </DropdownItem>\r\n        <DropdownItem\r\n          href={`/booking-forms/edit/${cell}`}\r\n          onClick={e => e.preventDefault()}\r\n        >\r\n          Edit\r\n        </DropdownItem>\r\n        <DropdownItem\r\n          href={`/booking-forms/delete/${cell}`}\r\n          onClick={e => e.preventDefault()}\r\n        >\r\n          Delete\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  );\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    dataField: 'name',\r\n    text: 'Form Name'\r\n  },\r\n  {\r\n    dataField: 'url',\r\n    text: 'Form URL',\r\n    formatter: urlFormatter\r\n  },\r\n  {\r\n    dataField: 'created',\r\n    text: 'Created On'\r\n  },\r\n  {\r\n    dataField: 'responses',\r\n    text: 'Responses'\r\n  },\r\n  {\r\n    dataField: 'id',\r\n    text: 'Actions',\r\n    formatter: actionFormatter\r\n  }\r\n];\r\n\r\nconst BookingForms = () => {\r\n  return (\r\n    <Fragment>\r\n      <Sidebar active='bookingforms' />\r\n      <div className='main-content' id='panel'>\r\n        <Dashnav />\r\n        <div className='header bg-primary pb-6'>\r\n          <div className='container-fluid'>\r\n            <div className='header-body'>\r\n              <div className='row align-items-center py-4'>\r\n                <div className='col-lg-6 col-7'>\r\n                  <h6 className='h2 text-white d-inline-block mb-0'>\r\n                    PoolPro360\r\n                  </h6>\r\n                  <nav\r\n                    aria-label='breadcrumb'\r\n                    className='d-none d-md-inline-block ml-md-4'\r\n                  >\r\n                    <ol className='breadcrumb breadcrumb-links breadcrumb-dark'>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/'>\r\n                          <i className='fas fa-home' />\r\n                        </a>\r\n                      </li>\r\n                      <li className='breadcrumb-item'>\r\n                        <a href='/dashboard'>Dashboard</a>\r\n                      </li>\r\n                      <li className='breadcrumb-item active'>\r\n                        <a href='/booking-forms'>Booking Forms</a>\r\n                      </li>\r\n                    </ol>\r\n                  </nav>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col>\r\n              <Card className='mgn-top-50'>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <div className='card-header bg-transparent'>\r\n                      <div className='row align-items-center'>\r\n                        <div className='col'>\r\n                          <h6 className='text-uppercase text-muted ls-1 mb-1'>\r\n                            Overview\r\n                          </h6>\r\n                          <h5 className='h3 mb-0'>Booking Forms</h5>\r\n                        </div>\r\n                        <span className='float-right'>\r\n                          <Button color='primary' href='/booking-forms/add'>\r\n                            <span class='btn-inner--icon'>\r\n                              <i class='ni ni-fat-add'></i>\r\n                            </span>\r\n                            <span class='btn-inner--text'> Add New Form</span>\r\n                          </Button>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </CardTitle>\r\n\r\n                  <div\r\n                    className='py-4 table-responsive'\r\n                    style={{ padding: '25px' }}\r\n                  >\r\n                    <div id='datatable-basic_filter' className='px-4 pb-1'>\r\n                      <BootstrapTable\r\n                        data={dataTable}\r\n                        keyField='property'\r\n                        columns={columns}\r\n                        bootstrap4={true}\r\n                        pagination={pagination}\r\n                        bordered={false}\r\n                        wrapperClasses='table-responsive'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BookingForms;\r\n","C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\reducers\\index.js",[],["442","443"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\Pricing.js",[],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\dashboard\\Sidebar.js",["444","445","446","447"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\ViewMyRoute.js",["448","449","450","451","452","453","454","455","456","457","458","459","460","461","462"],"C:\\Users\\camer\\Documents\\Sites\\poolpro360v2\\client\\src\\components\\Layout\\RouteBuilder.js",["463","464","465","466","467","468","469","470"],{"ruleId":"471","replacedBy":"472"},{"ruleId":"473","replacedBy":"474"},{"ruleId":"471","replacedBy":"475"},{"ruleId":"473","replacedBy":"476"},{"ruleId":"471","replacedBy":"477"},{"ruleId":"473","replacedBy":"478"},{"ruleId":"479","severity":1,"message":"480","line":13,"column":3,"nodeType":"481","messageId":"482","endLine":13,"endColumn":23},{"ruleId":"479","severity":1,"message":"483","line":14,"column":3,"nodeType":"481","messageId":"482","endLine":14,"endColumn":15},{"ruleId":"479","severity":1,"message":"484","line":15,"column":3,"nodeType":"481","messageId":"482","endLine":15,"endColumn":15},{"ruleId":"479","severity":1,"message":"485","line":16,"column":3,"nodeType":"481","messageId":"482","endLine":16,"endColumn":17},{"ruleId":"479","severity":1,"message":"486","line":17,"column":3,"nodeType":"481","messageId":"482","endLine":17,"endColumn":8},{"ruleId":"479","severity":1,"message":"487","line":18,"column":3,"nodeType":"481","messageId":"482","endLine":18,"endColumn":14},{"ruleId":"479","severity":1,"message":"488","line":19,"column":3,"nodeType":"481","messageId":"482","endLine":19,"endColumn":12},{"ruleId":"479","severity":1,"message":"489","line":20,"column":3,"nodeType":"481","messageId":"482","endLine":20,"endColumn":14},{"ruleId":"479","severity":1,"message":"490","line":21,"column":3,"nodeType":"481","messageId":"482","endLine":21,"endColumn":7},{"ruleId":"479","severity":1,"message":"491","line":22,"column":3,"nodeType":"481","messageId":"482","endLine":22,"endColumn":8},{"ruleId":"479","severity":1,"message":"492","line":23,"column":3,"nodeType":"481","messageId":"482","endLine":23,"endColumn":8},{"ruleId":"479","severity":1,"message":"493","line":24,"column":3,"nodeType":"481","messageId":"482","endLine":24,"endColumn":12},{"ruleId":"479","severity":1,"message":"494","line":25,"column":3,"nodeType":"481","messageId":"482","endLine":25,"endColumn":8},{"ruleId":"495","severity":1,"message":"496","line":132,"column":25,"nodeType":"497","endLine":135,"endColumn":27},{"ruleId":"498","severity":1,"message":"499","line":42,"column":6,"nodeType":"500","endLine":42,"endColumn":39,"suggestions":"501"},{"ruleId":"479","severity":1,"message":"502","line":8,"column":3,"nodeType":"481","messageId":"482","endLine":8,"endColumn":9},{"ruleId":"479","severity":1,"message":"480","line":15,"column":3,"nodeType":"481","messageId":"482","endLine":15,"endColumn":23},{"ruleId":"479","severity":1,"message":"483","line":16,"column":3,"nodeType":"481","messageId":"482","endLine":16,"endColumn":15},{"ruleId":"479","severity":1,"message":"484","line":17,"column":3,"nodeType":"481","messageId":"482","endLine":17,"endColumn":15},{"ruleId":"479","severity":1,"message":"485","line":18,"column":3,"nodeType":"481","messageId":"482","endLine":18,"endColumn":17},{"ruleId":"479","severity":1,"message":"486","line":19,"column":3,"nodeType":"481","messageId":"482","endLine":19,"endColumn":8},{"ruleId":"479","severity":1,"message":"487","line":20,"column":3,"nodeType":"481","messageId":"482","endLine":20,"endColumn":14},{"ruleId":"479","severity":1,"message":"488","line":21,"column":3,"nodeType":"481","messageId":"482","endLine":21,"endColumn":12},{"ruleId":"479","severity":1,"message":"489","line":22,"column":3,"nodeType":"481","messageId":"482","endLine":22,"endColumn":14},{"ruleId":"479","severity":1,"message":"490","line":23,"column":3,"nodeType":"481","messageId":"482","endLine":23,"endColumn":7},{"ruleId":"479","severity":1,"message":"491","line":24,"column":3,"nodeType":"481","messageId":"482","endLine":24,"endColumn":8},{"ruleId":"479","severity":1,"message":"492","line":25,"column":3,"nodeType":"481","messageId":"482","endLine":25,"endColumn":8},{"ruleId":"479","severity":1,"message":"493","line":26,"column":3,"nodeType":"481","messageId":"482","endLine":26,"endColumn":12},{"ruleId":"498","severity":1,"message":"503","line":54,"column":6,"nodeType":"500","endLine":54,"endColumn":25,"suggestions":"504"},{"ruleId":"471","replacedBy":"505"},{"ruleId":"473","replacedBy":"506"},{"ruleId":"479","severity":1,"message":"507","line":30,"column":3,"nodeType":"481","messageId":"482","endLine":30,"endColumn":13},{"ruleId":"498","severity":1,"message":"499","line":47,"column":6,"nodeType":"500","endLine":47,"endColumn":25,"suggestions":"508"},{"ruleId":"471","replacedBy":"509"},{"ruleId":"473","replacedBy":"510"},{"ruleId":"471","replacedBy":"511"},{"ruleId":"473","replacedBy":"512"},{"ruleId":"471","replacedBy":"513"},{"ruleId":"473","replacedBy":"514"},{"ruleId":"471","replacedBy":"515"},{"ruleId":"473","replacedBy":"516"},{"ruleId":"479","severity":1,"message":"480","line":20,"column":3,"nodeType":"481","messageId":"482","endLine":20,"endColumn":23},{"ruleId":"479","severity":1,"message":"483","line":21,"column":3,"nodeType":"481","messageId":"482","endLine":21,"endColumn":15},{"ruleId":"479","severity":1,"message":"484","line":22,"column":3,"nodeType":"481","messageId":"482","endLine":22,"endColumn":15},{"ruleId":"479","severity":1,"message":"485","line":23,"column":3,"nodeType":"481","messageId":"482","endLine":23,"endColumn":17},{"ruleId":"479","severity":1,"message":"494","line":35,"column":3,"nodeType":"481","messageId":"482","endLine":35,"endColumn":8},{"ruleId":"498","severity":1,"message":"499","line":65,"column":6,"nodeType":"500","endLine":65,"endColumn":25,"suggestions":"517"},{"ruleId":"479","severity":1,"message":"518","line":4,"column":3,"nodeType":"481","messageId":"482","endLine":4,"endColumn":16},{"ruleId":"479","severity":1,"message":"519","line":5,"column":3,"nodeType":"481","messageId":"482","endLine":5,"endColumn":12},{"ruleId":"479","severity":1,"message":"520","line":6,"column":3,"nodeType":"481","messageId":"482","endLine":6,"endColumn":15},{"ruleId":"479","severity":1,"message":"521","line":7,"column":3,"nodeType":"481","messageId":"482","endLine":7,"endColumn":9},{"ruleId":"498","severity":1,"message":"522","line":53,"column":6,"nodeType":"500","endLine":53,"endColumn":20,"suggestions":"523"},{"ruleId":"471","replacedBy":"524"},{"ruleId":"473","replacedBy":"525"},{"ruleId":"479","severity":1,"message":"526","line":9,"column":10,"nodeType":"481","messageId":"482","endLine":9,"endColumn":16},{"ruleId":"479","severity":1,"message":"502","line":19,"column":3,"nodeType":"481","messageId":"482","endLine":19,"endColumn":9},{"ruleId":"479","severity":1,"message":"486","line":28,"column":3,"nodeType":"481","messageId":"482","endLine":28,"endColumn":8},{"ruleId":"479","severity":1,"message":"487","line":29,"column":3,"nodeType":"481","messageId":"482","endLine":29,"endColumn":14},{"ruleId":"479","severity":1,"message":"488","line":30,"column":3,"nodeType":"481","messageId":"482","endLine":30,"endColumn":12},{"ruleId":"479","severity":1,"message":"489","line":31,"column":3,"nodeType":"481","messageId":"482","endLine":31,"endColumn":14},{"ruleId":"479","severity":1,"message":"490","line":32,"column":3,"nodeType":"481","messageId":"482","endLine":32,"endColumn":7},{"ruleId":"479","severity":1,"message":"493","line":33,"column":3,"nodeType":"481","messageId":"482","endLine":33,"endColumn":12},{"ruleId":"479","severity":1,"message":"492","line":34,"column":3,"nodeType":"481","messageId":"482","endLine":34,"endColumn":8},{"ruleId":"479","severity":1,"message":"491","line":35,"column":3,"nodeType":"481","messageId":"482","endLine":35,"endColumn":8},{"ruleId":"471","replacedBy":"527"},{"ruleId":"473","replacedBy":"528"},{"ruleId":"479","severity":1,"message":"529","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":14},{"ruleId":"530","severity":1,"message":"531","line":79,"column":19,"nodeType":"497","endLine":79,"endColumn":57},{"ruleId":"532","severity":1,"message":"533","line":130,"column":25,"nodeType":"534","endLine":130,"endColumn":38},{"ruleId":"535","severity":1,"message":"536","line":141,"column":19,"nodeType":"497","endLine":141,"endColumn":54},{"ruleId":"535","severity":1,"message":"536","line":146,"column":19,"nodeType":"497","endLine":146,"endColumn":54},{"ruleId":"471","replacedBy":"537"},{"ruleId":"473","replacedBy":"538"},{"ruleId":"479","severity":1,"message":"539","line":1,"column":10,"nodeType":"481","messageId":"482","endLine":1,"endColumn":18},{"ruleId":"471","replacedBy":"540"},{"ruleId":"473","replacedBy":"541"},{"ruleId":"542","severity":1,"message":"543","line":19,"column":1,"nodeType":"544","endLine":54,"endColumn":2},{"ruleId":"542","severity":1,"message":"543","line":5,"column":1,"nodeType":"544","endLine":16,"endColumn":2},{"ruleId":"479","severity":1,"message":"486","line":8,"column":3,"nodeType":"481","messageId":"482","endLine":8,"endColumn":8},{"ruleId":"479","severity":1,"message":"487","line":9,"column":3,"nodeType":"481","messageId":"482","endLine":9,"endColumn":14},{"ruleId":"479","severity":1,"message":"488","line":10,"column":3,"nodeType":"481","messageId":"482","endLine":10,"endColumn":12},{"ruleId":"479","severity":1,"message":"489","line":11,"column":3,"nodeType":"481","messageId":"482","endLine":11,"endColumn":14},{"ruleId":"479","severity":1,"message":"490","line":12,"column":3,"nodeType":"481","messageId":"482","endLine":12,"endColumn":7},{"ruleId":"479","severity":1,"message":"493","line":13,"column":3,"nodeType":"481","messageId":"482","endLine":13,"endColumn":12},{"ruleId":"479","severity":1,"message":"545","line":16,"column":3,"nodeType":"481","messageId":"482","endLine":16,"endColumn":11},{"ruleId":"479","severity":1,"message":"529","line":9,"column":10,"nodeType":"481","messageId":"482","endLine":9,"endColumn":14},{"ruleId":"535","severity":1,"message":"536","line":99,"column":19,"nodeType":"497","endLine":99,"endColumn":66},{"ruleId":"535","severity":1,"message":"536","line":102,"column":19,"nodeType":"497","endLine":102,"endColumn":66},{"ruleId":"471","replacedBy":"546"},{"ruleId":"473","replacedBy":"547"},{"ruleId":"471","replacedBy":"548"},{"ruleId":"473","replacedBy":"549"},{"ruleId":"479","severity":1,"message":"550","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":35},{"ruleId":"479","severity":1,"message":"551","line":1,"column":37,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"479","severity":1,"message":"552","line":3,"column":3,"nodeType":"481","messageId":"482","endLine":3,"endColumn":12},{"ruleId":"479","severity":1,"message":"529","line":3,"column":10,"nodeType":"481","messageId":"482","endLine":3,"endColumn":14},{"ruleId":"479","severity":1,"message":"507","line":26,"column":3,"nodeType":"481","messageId":"482","endLine":26,"endColumn":13},{"ruleId":"535","severity":1,"message":"536","line":115,"column":19,"nodeType":"497","endLine":115,"endColumn":66},{"ruleId":"535","severity":1,"message":"536","line":118,"column":19,"nodeType":"497","endLine":118,"endColumn":66},{"ruleId":"471","replacedBy":"553"},{"ruleId":"473","replacedBy":"554"},{"ruleId":"471","replacedBy":"555"},{"ruleId":"473","replacedBy":"556"},{"ruleId":"479","severity":1,"message":"552","line":9,"column":3,"nodeType":"481","messageId":"482","endLine":9,"endColumn":12},{"ruleId":"479","severity":1,"message":"545","line":18,"column":3,"nodeType":"481","messageId":"482","endLine":18,"endColumn":11},{"ruleId":"479","severity":1,"message":"551","line":20,"column":10,"nodeType":"481","messageId":"482","endLine":20,"endColumn":19},{"ruleId":"557","severity":1,"message":"558","line":74,"column":49,"nodeType":"559","messageId":"560","endLine":74,"endColumn":51},{"ruleId":"557","severity":1,"message":"558","line":89,"column":49,"nodeType":"559","messageId":"560","endLine":89,"endColumn":51},{"ruleId":"557","severity":1,"message":"558","line":101,"column":49,"nodeType":"559","messageId":"560","endLine":101,"endColumn":51},{"ruleId":"557","severity":1,"message":"561","line":311,"column":21,"nodeType":"559","messageId":"560","endLine":311,"endColumn":23},{"ruleId":"557","severity":1,"message":"561","line":311,"column":58,"nodeType":"559","messageId":"560","endLine":311,"endColumn":60},{"ruleId":"471","replacedBy":"562"},{"ruleId":"473","replacedBy":"563"},{"ruleId":"479","severity":1,"message":"564","line":2,"column":8,"nodeType":"481","messageId":"482","endLine":2,"endColumn":16},{"ruleId":"479","severity":1,"message":"502","line":8,"column":3,"nodeType":"481","messageId":"482","endLine":8,"endColumn":9},{"ruleId":"479","severity":1,"message":"565","line":9,"column":3,"nodeType":"481","messageId":"482","endLine":9,"endColumn":6},{"ruleId":"479","severity":1,"message":"566","line":10,"column":3,"nodeType":"481","messageId":"482","endLine":10,"endColumn":6},{"ruleId":"479","severity":1,"message":"486","line":11,"column":3,"nodeType":"481","messageId":"482","endLine":11,"endColumn":8},{"ruleId":"479","severity":1,"message":"487","line":12,"column":3,"nodeType":"481","messageId":"482","endLine":12,"endColumn":14},{"ruleId":"479","severity":1,"message":"488","line":13,"column":3,"nodeType":"481","messageId":"482","endLine":13,"endColumn":12},{"ruleId":"479","severity":1,"message":"489","line":14,"column":3,"nodeType":"481","messageId":"482","endLine":14,"endColumn":14},{"ruleId":"479","severity":1,"message":"567","line":54,"column":7,"nodeType":"481","messageId":"482","endLine":54,"endColumn":11},{"ruleId":"557","severity":1,"message":"558","line":203,"column":52,"nodeType":"559","messageId":"560","endLine":203,"endColumn":54},{"ruleId":"557","severity":1,"message":"558","line":218,"column":52,"nodeType":"559","messageId":"560","endLine":218,"endColumn":54},{"ruleId":"557","severity":1,"message":"558","line":229,"column":52,"nodeType":"559","messageId":"560","endLine":229,"endColumn":54},{"ruleId":"471","replacedBy":"568"},{"ruleId":"473","replacedBy":"569"},{"ruleId":"542","severity":1,"message":"543","line":27,"column":1,"nodeType":"544","endLine":93,"endColumn":2},{"ruleId":"479","severity":1,"message":"570","line":5,"column":19,"nodeType":"481","messageId":"482","endLine":5,"endColumn":26},{"ruleId":"479","severity":1,"message":"571","line":8,"column":10,"nodeType":"481","messageId":"482","endLine":8,"endColumn":16},{"ruleId":"479","severity":1,"message":"519","line":4,"column":3,"nodeType":"481","messageId":"482","endLine":4,"endColumn":12},{"ruleId":"479","severity":1,"message":"572","line":5,"column":3,"nodeType":"481","messageId":"482","endLine":5,"endColumn":13},{"ruleId":"479","severity":1,"message":"521","line":6,"column":3,"nodeType":"481","messageId":"482","endLine":6,"endColumn":9},{"ruleId":"479","severity":1,"message":"573","line":7,"column":3,"nodeType":"481","messageId":"482","endLine":7,"endColumn":13},{"ruleId":"479","severity":1,"message":"574","line":8,"column":3,"nodeType":"481","messageId":"482","endLine":8,"endColumn":21},{"ruleId":"479","severity":1,"message":"575","line":9,"column":3,"nodeType":"481","messageId":"482","endLine":9,"endColumn":20},{"ruleId":"479","severity":1,"message":"576","line":10,"column":3,"nodeType":"481","messageId":"482","endLine":10,"endColumn":11},{"ruleId":"479","severity":1,"message":"577","line":13,"column":8,"nodeType":"481","messageId":"482","endLine":13,"endColumn":29},{"ruleId":"479","severity":1,"message":"578","line":22,"column":8,"nodeType":"481","messageId":"482","endLine":22,"endColumn":14},{"ruleId":"479","severity":1,"message":"579","line":28,"column":8,"nodeType":"481","messageId":"482","endLine":28,"endColumn":22},{"ruleId":"479","severity":1,"message":"580","line":35,"column":8,"nodeType":"481","messageId":"482","endLine":35,"endColumn":18},{"ruleId":"479","severity":1,"message":"581","line":37,"column":5,"nodeType":"481","messageId":"482","endLine":37,"endColumn":8},{"ruleId":"479","severity":1,"message":"582","line":39,"column":7,"nodeType":"481","messageId":"482","endLine":39,"endColumn":17},{"ruleId":"479","severity":1,"message":"583","line":48,"column":7,"nodeType":"481","messageId":"482","endLine":48,"endColumn":21},{"ruleId":"479","severity":1,"message":"584","line":53,"column":7,"nodeType":"481","messageId":"482","endLine":53,"endColumn":16},{"ruleId":"479","severity":1,"message":"585","line":86,"column":10,"nodeType":"481","messageId":"482","endLine":86,"endColumn":13},{"ruleId":"479","severity":1,"message":"586","line":92,"column":10,"nodeType":"481","messageId":"482","endLine":92,"endColumn":18},{"ruleId":"479","severity":1,"message":"587","line":97,"column":9,"nodeType":"481","messageId":"482","endLine":97,"endColumn":22},{"ruleId":"479","severity":1,"message":"588","line":104,"column":9,"nodeType":"481","messageId":"482","endLine":104,"endColumn":26},{"ruleId":"479","severity":1,"message":"589","line":111,"column":9,"nodeType":"481","messageId":"482","endLine":111,"endColumn":15},{"ruleId":"479","severity":1,"message":"590","line":117,"column":9,"nodeType":"481","messageId":"482","endLine":117,"endColumn":18},{"ruleId":"479","severity":1,"message":"591","line":143,"column":10,"nodeType":"481","messageId":"482","endLine":143,"endColumn":21},{"ruleId":"479","severity":1,"message":"592","line":143,"column":23,"nodeType":"481","messageId":"482","endLine":143,"endColumn":37},{"ruleId":"479","severity":1,"message":"593","line":147,"column":9,"nodeType":"481","messageId":"482","endLine":147,"endColumn":19},{"ruleId":"479","severity":1,"message":"594","line":148,"column":9,"nodeType":"481","messageId":"482","endLine":148,"endColumn":15},{"ruleId":"479","severity":1,"message":"502","line":13,"column":3,"nodeType":"481","messageId":"482","endLine":13,"endColumn":9},{"ruleId":"535","severity":1,"message":"536","line":173,"column":19,"nodeType":"497","endLine":173,"endColumn":66},{"ruleId":"535","severity":1,"message":"536","line":176,"column":19,"nodeType":"497","endLine":176,"endColumn":66},{"ruleId":"471","replacedBy":"595"},{"ruleId":"473","replacedBy":"596"},{"ruleId":"479","severity":1,"message":"597","line":63,"column":13,"nodeType":"481","messageId":"482","endLine":63,"endColumn":16},{"ruleId":"542","severity":1,"message":"543","line":8,"column":1,"nodeType":"544","endLine":20,"endColumn":2},{"ruleId":"479","severity":1,"message":"597","line":10,"column":13,"nodeType":"481","messageId":"482","endLine":10,"endColumn":16},{"ruleId":"479","severity":1,"message":"598","line":19,"column":10,"nodeType":"481","messageId":"482","endLine":19,"endColumn":20},{"ruleId":"479","severity":1,"message":"599","line":27,"column":3,"nodeType":"481","messageId":"482","endLine":27,"endColumn":14},{"ruleId":"479","severity":1,"message":"507","line":32,"column":3,"nodeType":"481","messageId":"482","endLine":32,"endColumn":13},{"ruleId":"479","severity":1,"message":"600","line":42,"column":3,"nodeType":"481","messageId":"482","endLine":42,"endColumn":13},{"ruleId":"479","severity":1,"message":"601","line":43,"column":3,"nodeType":"481","messageId":"482","endLine":43,"endColumn":17},{"ruleId":"479","severity":1,"message":"602","line":44,"column":3,"nodeType":"481","messageId":"482","endLine":44,"endColumn":17},{"ruleId":"479","severity":1,"message":"603","line":47,"column":3,"nodeType":"481","messageId":"482","endLine":47,"endColumn":10},{"ruleId":"479","severity":1,"message":"604","line":51,"column":3,"nodeType":"481","messageId":"482","endLine":51,"endColumn":22},{"ruleId":"479","severity":1,"message":"489","line":58,"column":3,"nodeType":"481","messageId":"482","endLine":58,"endColumn":14},{"ruleId":"479","severity":1,"message":"605","line":69,"column":15,"nodeType":"481","messageId":"482","endLine":69,"endColumn":19},{"ruleId":"479","severity":1,"message":"606","line":76,"column":8,"nodeType":"481","messageId":"482","endLine":76,"endColumn":14},{"ruleId":"479","severity":1,"message":"607","line":86,"column":3,"nodeType":"481","messageId":"482","endLine":86,"endColumn":16},{"ruleId":"479","severity":1,"message":"608","line":89,"column":8,"nodeType":"481","messageId":"482","endLine":89,"endColumn":11},{"ruleId":"479","severity":1,"message":"609","line":90,"column":10,"nodeType":"481","messageId":"482","endLine":90,"endColumn":13},{"ruleId":"479","severity":1,"message":"610","line":91,"column":8,"nodeType":"481","messageId":"482","endLine":91,"endColumn":16},{"ruleId":"479","severity":1,"message":"611","line":112,"column":9,"nodeType":"481","messageId":"482","endLine":112,"endColumn":16},{"ruleId":"498","severity":1,"message":"612","line":119,"column":6,"nodeType":"500","endLine":119,"endColumn":12,"suggestions":"613"},{"ruleId":"479","severity":1,"message":"614","line":153,"column":9,"nodeType":"481","messageId":"482","endLine":153,"endColumn":27},{"ruleId":"479","severity":1,"message":"615","line":155,"column":9,"nodeType":"481","messageId":"482","endLine":155,"endColumn":14},{"ruleId":"498","severity":1,"message":"616","line":287,"column":6,"nodeType":"500","endLine":287,"endColumn":17,"suggestions":"617"},{"ruleId":"498","severity":1,"message":"616","line":294,"column":6,"nodeType":"500","endLine":294,"endColumn":20,"suggestions":"618"},{"ruleId":"557","severity":1,"message":"558","line":715,"column":59,"nodeType":"559","messageId":"560","endLine":715,"endColumn":61},{"ruleId":"557","severity":1,"message":"561","line":3396,"column":70,"nodeType":"559","messageId":"560","endLine":3396,"endColumn":72},{"ruleId":"557","severity":1,"message":"561","line":3421,"column":72,"nodeType":"559","messageId":"560","endLine":3421,"endColumn":74},{"ruleId":"535","severity":1,"message":"536","line":3520,"column":29,"nodeType":"497","endLine":3524,"endColumn":30},{"ruleId":"535","severity":1,"message":"536","line":3539,"column":29,"nodeType":"497","endLine":3543,"endColumn":30},{"ruleId":"542","severity":1,"message":"543","line":9,"column":1,"nodeType":"544","endLine":26,"endColumn":2},{"ruleId":"479","severity":1,"message":"552","line":3,"column":20,"nodeType":"481","messageId":"482","endLine":3,"endColumn":29},{"ruleId":"479","severity":1,"message":"502","line":3,"column":31,"nodeType":"481","messageId":"482","endLine":3,"endColumn":37},{"ruleId":"479","severity":1,"message":"619","line":3,"column":39,"nodeType":"481","messageId":"482","endLine":3,"endColumn":42},{"ruleId":"495","severity":1,"message":"496","line":239,"column":17,"nodeType":"497","endLine":242,"endColumn":19},{"ruleId":"495","severity":1,"message":"496","line":300,"column":17,"nodeType":"497","endLine":303,"endColumn":19},{"ruleId":"495","severity":1,"message":"496","line":328,"column":17,"nodeType":"497","endLine":331,"endColumn":19},{"ruleId":"620","severity":1,"message":"621","line":374,"column":21,"nodeType":"534","endLine":374,"endColumn":36},{"ruleId":"620","severity":1,"message":"621","line":430,"column":21,"nodeType":"534","endLine":430,"endColumn":36},{"ruleId":"620","severity":1,"message":"621","line":452,"column":25,"nodeType":"534","endLine":452,"endColumn":40},{"ruleId":"495","severity":1,"message":"496","line":456,"column":25,"nodeType":"497","endLine":459,"endColumn":27},{"ruleId":"495","severity":1,"message":"496","line":469,"column":25,"nodeType":"497","endLine":472,"endColumn":27},{"ruleId":"495","severity":1,"message":"496","line":482,"column":25,"nodeType":"497","endLine":485,"endColumn":27},{"ruleId":"495","severity":1,"message":"496","line":495,"column":25,"nodeType":"497","endLine":498,"endColumn":27},{"ruleId":"495","severity":1,"message":"496","line":508,"column":25,"nodeType":"497","endLine":511,"endColumn":27},{"ruleId":"495","severity":1,"message":"496","line":521,"column":25,"nodeType":"497","endLine":524,"endColumn":27},{"ruleId":"495","severity":1,"message":"496","line":536,"column":25,"nodeType":"497","endLine":539,"endColumn":27},{"ruleId":"495","severity":1,"message":"496","line":549,"column":25,"nodeType":"497","endLine":552,"endColumn":27},{"ruleId":"479","severity":1,"message":"551","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":36},{"ruleId":"479","severity":1,"message":"550","line":1,"column":38,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"479","severity":1,"message":"622","line":7,"column":8,"nodeType":"481","messageId":"482","endLine":7,"endColumn":23},{"ruleId":"479","severity":1,"message":"623","line":8,"column":3,"nodeType":"481","messageId":"482","endLine":8,"endColumn":9},{"ruleId":"479","severity":1,"message":"624","line":9,"column":3,"nodeType":"481","messageId":"482","endLine":9,"endColumn":12},{"ruleId":"471","replacedBy":"625"},{"ruleId":"473","replacedBy":"626"},{"ruleId":"479","severity":1,"message":"502","line":11,"column":20,"nodeType":"481","messageId":"482","endLine":11,"endColumn":26},{"ruleId":"479","severity":1,"message":"627","line":11,"column":28,"nodeType":"481","messageId":"482","endLine":11,"endColumn":36},{"ruleId":"479","severity":1,"message":"628","line":11,"column":38,"nodeType":"481","messageId":"482","endLine":11,"endColumn":42},{"ruleId":"498","severity":1,"message":"629","line":45,"column":6,"nodeType":"500","endLine":45,"endColumn":8,"suggestions":"630"},{"ruleId":"479","severity":1,"message":"550","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":35},{"ruleId":"479","severity":1,"message":"551","line":1,"column":37,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"479","severity":1,"message":"631","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":17},{"ruleId":"479","severity":1,"message":"632","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":17},{"ruleId":"479","severity":1,"message":"502","line":5,"column":3,"nodeType":"481","messageId":"482","endLine":5,"endColumn":9},{"ruleId":"479","severity":1,"message":"494","line":6,"column":3,"nodeType":"481","messageId":"482","endLine":6,"endColumn":8},{"ruleId":"479","severity":1,"message":"566","line":7,"column":3,"nodeType":"481","messageId":"482","endLine":7,"endColumn":6},{"ruleId":"479","severity":1,"message":"565","line":8,"column":3,"nodeType":"481","messageId":"482","endLine":8,"endColumn":6},{"ruleId":"479","severity":1,"message":"492","line":10,"column":3,"nodeType":"481","messageId":"482","endLine":10,"endColumn":8},{"ruleId":"479","severity":1,"message":"490","line":11,"column":3,"nodeType":"481","messageId":"482","endLine":11,"endColumn":7},{"ruleId":"479","severity":1,"message":"491","line":12,"column":3,"nodeType":"481","messageId":"482","endLine":12,"endColumn":8},{"ruleId":"479","severity":1,"message":"493","line":13,"column":3,"nodeType":"481","messageId":"482","endLine":13,"endColumn":12},{"ruleId":"479","severity":1,"message":"633","line":14,"column":3,"nodeType":"481","messageId":"482","endLine":14,"endColumn":16},{"ruleId":"479","severity":1,"message":"634","line":15,"column":3,"nodeType":"481","messageId":"482","endLine":15,"endColumn":12},{"ruleId":"479","severity":1,"message":"578","line":26,"column":8,"nodeType":"481","messageId":"482","endLine":26,"endColumn":14},{"ruleId":"479","severity":1,"message":"574","line":20,"column":3,"nodeType":"481","messageId":"482","endLine":20,"endColumn":21},{"ruleId":"479","severity":1,"message":"575","line":21,"column":3,"nodeType":"481","messageId":"482","endLine":21,"endColumn":20},{"ruleId":"479","severity":1,"message":"576","line":22,"column":3,"nodeType":"481","messageId":"482","endLine":22,"endColumn":11},{"ruleId":"479","severity":1,"message":"585","line":92,"column":10,"nodeType":"481","messageId":"482","endLine":92,"endColumn":13},{"ruleId":"498","severity":1,"message":"635","line":139,"column":6,"nodeType":"500","endLine":139,"endColumn":17,"suggestions":"636"},{"ruleId":"498","severity":1,"message":"637","line":158,"column":6,"nodeType":"500","endLine":158,"endColumn":17,"suggestions":"638"},{"ruleId":"479","severity":1,"message":"639","line":172,"column":11,"nodeType":"481","messageId":"482","endLine":172,"endColumn":17},{"ruleId":"479","severity":1,"message":"640","line":214,"column":10,"nodeType":"481","messageId":"482","endLine":214,"endColumn":19},"no-native-reassign",["641"],"no-negated-in-lhs",["642"],["641"],["642"],["641"],["642"],"no-unused-vars","'UncontrolledDropdown' is defined but never used.","Identifier","unusedVar","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownToggle' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'FormGroup' is defined but never used.","'Badge' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["643"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'getEmployeeCustomers' and 'match.params.id'. Either include them or remove the dependency array. If 'getEmployeeCustomers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["644"],["641"],["642"],"'CardFooter' is defined but never used.",["645"],["641"],["642"],["641"],["642"],["641"],["642"],["641"],["642"],["646"],"'withGoogleMap' is defined but never used.","'GoogleMap' is defined but never used.","'withScriptjs' is defined but never used.","'Marker' is defined but never used.","React Hook useEffect has missing dependencies: 'places' and 'travelMode'. Either include them or remove the dependency array.",["647"],["641"],["642"],"'Formik' is defined but never used.",["641"],["642"],"'Link' is defined but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["641"],["642"],"'setAlert' is defined but never used.",["641"],["642"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'FormText' is defined but never used.",["641"],["642"],["641"],["642"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Container' is defined but never used.",["641"],["642"],["641"],["642"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["641"],["642"],"'ReactDOM' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'grid' is assigned a value but never used.",["641"],["642"],"'BSAlert' is defined but never used.","'notify' is defined but never used.","'LoadScript' is defined but never used.","'InfoWindow' is defined but never used.","'DirectionsRenderer' is defined but never used.","'DirectionsService' is defined but never used.","'Polyline' is defined but never used.","'MapDirectionsRenderer' is defined but never used.","'Footer' is defined but never used.","'RoutingMachine' is defined but never used.","'LeafletMap' is defined but never used.","'key' is assigned a value but never used.","'markerIcon' is assigned a value but never used.","'containerStyle' is assigned a value but never used.","'locations' is assigned a value but never used.","'map' is assigned a value but never used.","'mapState' is assigned a value but never used.","'onMarkerClick' is assigned a value but never used.","'onInfoWindowClose' is assigned a value but never used.","'onLoad' is assigned a value but never used.","'onUnmount' is assigned a value but never used.","'centerPoint' is assigned a value but never used.","'setCenterPoint' is assigned a value but never used.","'ZOOM_LEVEL' is assigned a value but never used.","'mapRef' is assigned a value but never used.",["641"],["642"],"'Yup' is defined but never used.","'Scrollbars' is defined but never used.","'ButtonGroup' is defined but never used.","'Pagination' is defined but never used.","'PaginationItem' is defined but never used.","'PaginationLink' is defined but never used.","'Tooltip' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'Line' is defined but never used.","'Moment' is defined but never used.","'chartExample1' is defined but never used.","'map' is defined but never used.","'set' is defined but never used.","'customer' is defined but never used.","'newList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getEmployeeRoute'. Either include it or remove the dependency array. If 'getEmployeeRoute' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["648"],"'dontBookWithinDays' is assigned a value but never used.","'slots' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'logModal'. Either include it or remove the dependency array. You can also do a functional update 'setLogModal(l => ...)' if you only need 'logModal' in the 'setLogModal' call.",["649"],["650"],"'Nav' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'ToolkitProvider' is defined but never used.","'Search' is defined but never used.","'CSVExport' is defined but never used.",["641"],["642"],"'CardBody' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.",["651"],"'connect' is defined but never used.","'PropTypes' is defined but never used.","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'dateSelected', 'getEmployeeRoute', 'loading', and 'selectedTech'. Either include them or remove the dependency array. If 'getEmployeeRoute' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["652"],"React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["653"],"'bounds' is assigned a value but never used.","'frequency' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"658","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},"Update the dependencies array to be: [getSingleCustomer, getEmployees, match.params.id]",{"range":"676","text":"677"},"Update the dependencies array to be: [getEmployeeCustomers, getSingleEmployee, match.params.id]",{"range":"678","text":"679"},"Update the dependencies array to be: [getSingleEmployee, match.params.id]",{"range":"680","text":"681"},"Update the dependencies array to be: [getSingleCustomer, match.params.id]",{"range":"682","text":"683"},"Update the dependencies array to be: [getRouteLegs, places, travelMode]",{"range":"684","text":"685"},"Update the dependencies array to be: [getEmployeeRoute, user]",{"range":"686","text":"687"},"Update the dependencies array to be: [checklist, logModal]",{"range":"688","text":"689"},"Update the dependencies array to be: [logModal, serviceNotes]",{"range":"690","text":"691"},"Update the dependencies array to be: [active]",{"range":"692","text":"693"},"Update the dependencies array to be: [customers, dateSelected, getEmployeeRoute, loading, selectedTech]",{"range":"694","text":"695"},"Update the dependencies array to be: [loading, routeList]",{"range":"696","text":"697"},[980,1013],"[getSingleCustomer, getEmployees, match.params.id]",[1069,1088],"[getEmployeeCustomers, getSingleEmployee, match.params.id]",[959,978],"[getSingleEmployee, match.params.id]",[1541,1560],"[getSingleCustomer, match.params.id]",[1424,1438],"[getRouteLegs, places, travelMode]",[2724,2730],"[getEmployeeRoute, user]",[6973,6984],"[checklist, logModal]",[7099,7113],"[logModal, serviceNotes]",[1208,1210],"[active]",[3553,3564],"[customers, dateSelected, getEmployeeRoute, loading, selectedTech]",[4107,4118],"[loading, routeList]"]